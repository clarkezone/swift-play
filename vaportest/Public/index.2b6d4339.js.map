{"mappings":"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AAA,KAAA,IAAA,EACA,OAAA,EAAA,OAAA,CAGA,IAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAGA,QAAA,CAAA,CACA,EAMA,OAHA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,OAAA,CAAA,GAGA,EAAA,OAAA,AACA,CCrBA,EAAA,CAAA,CAAA,CAAA,EAAA,KACA,IAAA,IAAA,KAAA,EACA,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,IACA,OAAA,cAAA,CAAA,EAAA,EAAA,CAAyC,WAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,AAAA,EAGzC,ECPA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,OAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,EAAA,GCCA,EAAA,CAAA,CAAA,AAAA,IACA,aAAA,OAAA,QAAA,OAAA,WAAA,EACA,OAAA,cAAA,CAAA,EAAA,OAAA,WAAA,CAAA,CAAuD,MAAA,QAAA,GAEvD,OAAA,cAAA,CAAA,EAAA,aAAA,CAAgD,MAAA,CAAA,CAAA,EAChD,E,I,E,C,E,O,E,C,C,G,E,C,C,E,C,U,I,E,U,I,E,I,I,E,O,I,E,S,I,E,K,I,E,c,I,E,c,I,E,kB,I,E,sB,I,E,Q,I,E,W,I,E,Y,I,C,G,E,E,G,E,E,G,E,E,G,E,S,C,C,C,C,C,C,C,E,O,G,C,G,C,E,O,C,E,S,C,C,C,E,S,E,C,E,G,C,E,E,I,C,G,C,M,E,C,E,E,C,C,S,E,C,E,G,C,E,E,K,C,G,C,M,E,C,E,E,C,C,S,E,C,M,C,C,E,I,C,E,E,K,E,A,C,C,E,E,K,Y,E,E,I,E,S,C,E,E,E,E,E,I,C,E,E,C,E,A,C,E,E,K,C,E,G,E,C,E,I,G,E,E,E,S,C,C,C,E,I,E,E,E,E,E,C,M,E,K,W,G,A,E,C,C,E,C,M,C,C,E,C,O,C,C,E,A,E,K,E,C,I,E,A,E,O,E,C,K,E,G,M,E,G,O,E,E,E,A,Y,O,Q,C,C,C,O,Q,C,C,W,O,I,A,C,E,E,S,E,C,E,O,S,C,E,O,A,S,C,E,G,E,M,A,U,mC,K,G,C,E,E,C,C,E,E,C,E,C,C,E,G,G,C,G,E,E,G,C,E,A,E,C,C,E,C,E,M,C,C,C,E,C,E,K,E,C,A,C,E,E,M,A,G,E,I,C,G,C,E,E,I,A,G,C,A,C,E,E,I,C,E,C,C,E,C,E,I,C,O,E,O,E,E,A,G,C,E,C,A,E,C,C,E,C,E,K,C,A,E,C,C,E,E,K,E,K,E,E,E,K,M,E,O,E,K,G,C,M,C,C,E,C,K,C,C,C,M,E,E,K,G,E,C,C,E,C,E,C,E,C,Q,M,E,E,E,G,C,G,G,E,I,C,G,G,Q,S,G,C,C,E,A,C,E,E,I,A,E,M,C,G,C,C,E,M,C,E,A,G,C,A,I,C,C,E,E,A,I,C,C,E,A,E,C,E,E,Q,C,G,A,I,C,C,E,E,C,C,G,C,C,E,C,C,C,E,E,C,C,E,C,C,C,E,A,E,C,E,K,C,C,C,E,C,K,C,G,A,I,C,C,E,E,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,E,K,C,G,G,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,G,C,I,C,G,K,C,C,C,E,E,E,G,C,G,G,E,I,C,G,G,Q,C,E,E,I,C,E,E,C,M,E,C,E,C,E,E,C,E,C,Q,C,E,E,C,C,G,A,E,C,C,E,C,M,C,C,E,C,M,C,M,C,C,E,C,C,C,E,C,K,E,K,C,C,C,E,C,E,E,C,C,C,ECgBE,CADU,EAAA,GAAA,CAAA,EAAG,CAAA,CAAA,GACb,KAAA,CAAA,QACA,EAAA,OAAA,CAAA,UACA,EAAA,IAAA,CAAA,OACA,EAAA,QAAA,CAAA,WACA,EAAA,SAAA,CAAA,YACA,EAAA,IAAA,CAAA,OACA,EAAA,SAAA,CAAA,YAKA,CADU,EAAA,GAAA,CAAA,EAAS,CAAA,CAAA,GACnB,MAAA,CAAA,SACA,EAAA,OAAA,CAAA,UACA,EAAA,SAAA,CAAA,YACA,EAAA,QAAA,CAAA,WACA,EAAA,UAAA,CAAA,aACA,EAAA,WAAA,CAAA,cACA,EAAA,UAAA,CAAA,aACA,EAAA,YAAA,CAAA,eACA,EAAA,WAAA,CAAA,cAcF,EAAA,WAaE,SAAA,EAAY,CAAyB,E,I,E,E,E,E,E,CACnC,CAAA,IAAI,CAAC,GAAG,CAAG,AAAW,OAAX,CAAA,EAAA,MAAA,EAAM,KAAA,EAAN,EAAQ,GAAA,AAAA,GAAG,AAAA,KAAA,IAAA,EAAA,EAAI,EAAI,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","sources":["<anon>","src/index.mjs","node_modules/@rive-app/canvas/rive.js","node_modules/@rive-app/canvas/webpack:/rive/webpack/universalModuleDefinition","node_modules/@rive-app/canvas/webpack:/rive/npm/canvas_advanced/canvas_advanced.mjs","node_modules/@rive-app/canvas/webpack:/rive/src/utils/index.ts","node_modules/@rive-app/canvas/webpack:/rive/src/utils/registerTouchInteractions.ts","node_modules/@rive-app/canvas/webpack:/rive/src/utils/sanitizeUrl.ts","node_modules/@rive-app/canvas/webpack:/rive/webpack/bootstrap","node_modules/@rive-app/canvas/webpack:/rive/webpack/runtime/define property getters","node_modules/@rive-app/canvas/webpack:/rive/webpack/runtime/hasOwnProperty shorthand","node_modules/@rive-app/canvas/webpack:/rive/webpack/runtime/make namespace object","node_modules/@rive-app/canvas/webpack:/rive/src/rive.ts"],"sourcesContent":["\nvar $691f11a73ac7a020$exports = {};\n(function webpackUniversalModuleDefinition(root, factory) {\n    $691f11a73ac7a020$exports = factory();\n})($691f11a73ac7a020$exports, ()=>{\n    return /******/ (()=>{\n        /******/ \"use strict\";\n        /******/ var __webpack_modules__ = [\n            ,\n            /* 1 */ /***/ (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__)=>{\n                __webpack_require__.r(__webpack_exports__);\n                /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n                    /* harmony export */ \"default\": ()=>__WEBPACK_DEFAULT_EXPORT__\n                });\n                var Rive = (()=>{\n                    var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : undefined;\n                    return function(moduleArg = {}) {\n                        var h = moduleArg, ba, ca;\n                        h.ready = new Promise((b, a)=>{\n                            ba = b;\n                            ca = a;\n                        });\n                        function da() {\n                            function b(m) {\n                                const l = d;\n                                c = a = 0;\n                                d = new Map;\n                                l.forEach((p)=>{\n                                    try {\n                                        p(m);\n                                    } catch (k) {\n                                        console.error(k);\n                                    }\n                                });\n                                this.fb();\n                                e && e.Db();\n                            }\n                            let a = 0, c = 0, d = new Map, e = null, f = null;\n                            this.requestAnimationFrame = function(m) {\n                                a || (a = requestAnimationFrame(b.bind(this)));\n                                const l = ++c;\n                                d.set(l, m);\n                                return l;\n                            };\n                            this.cancelAnimationFrame = function(m) {\n                                d.delete(m);\n                                a && 0 == d.size && (cancelAnimationFrame(a), a = 0);\n                            };\n                            this.Bb = function(m) {\n                                f && (document.body.remove(f), f = null);\n                                m || (f = document.createElement(\"div\"), f.style.backgroundColor = \"black\", f.style.position = \"fixed\", f.style.right = 0, f.style.top = 0, f.style.color = \"white\", f.style.padding = \"4px\", f.innerHTML = \"RIVE FPS\", m = function(l) {\n                                    f.innerHTML = \"RIVE FPS \" + l.toFixed(1);\n                                }, document.body.appendChild(f));\n                                e = new function() {\n                                    let l = 0, p = 0;\n                                    this.Db = function() {\n                                        var k = performance.now();\n                                        p ? (++l, k -= p, 1E3 < k && (m(1E3 * l / k), l = p = 0)) : (p = k, l = 0);\n                                    };\n                                };\n                            };\n                            this.yb = function() {\n                                f && (document.body.remove(f), f = null);\n                                e = null;\n                            };\n                            this.fb = function() {};\n                        }\n                        function ea(b) {\n                            console.assert(!0);\n                            const a = new Map;\n                            let c = -Infinity;\n                            this.push = function(d) {\n                                d = d + ((1 << b) - 1) >> b;\n                                a.has(d) && clearTimeout(a.get(d));\n                                a.set(d, setTimeout(function() {\n                                    a.delete(d);\n                                    0 == a.length ? c = -Infinity : d == c && (c = Math.max(...a.keys()), console.assert(c < d));\n                                }, 1E3));\n                                c = Math.max(d, c);\n                                return c << b;\n                            };\n                        }\n                        const ha = \"createConicGradient createImageData createLinearGradient createPattern createRadialGradient getContextAttributes getImageData getLineDash getTransform isContextLost isPointInPath isPointInStroke measureText\".split(\" \"), ka = new function() {\n                            function b() {\n                                if (!a) {\n                                    var t = document.createElement(\"canvas\"), g = {\n                                        alpha: 1,\n                                        depth: 0,\n                                        stencil: 0,\n                                        antialias: 0,\n                                        premultipliedAlpha: 1,\n                                        preserveDrawingBuffer: 0,\n                                        preferLowPowerToHighPerformance: 0,\n                                        failIfMajorPerformanceCaveat: 0,\n                                        enableExtensionsByDefault: 1,\n                                        explicitSwapControl: 1,\n                                        renderViaOffscreenBackBuffer: 1\n                                    };\n                                    let n = t.getContext(\"webgl2\", g);\n                                    if (n) c = 2;\n                                    else if (n = t.getContext(\"webgl\", g)) c = 1;\n                                    else return console.log(\"No WebGL support. Image mesh will not be drawn.\"), !1;\n                                    d = Math.min(n.getParameter(n.MAX_RENDERBUFFER_SIZE), n.getParameter(n.MAX_TEXTURE_SIZE));\n                                    function w(H, x, A) {\n                                        x = n.createShader(x);\n                                        n.shaderSource(x, A);\n                                        n.compileShader(x);\n                                        A = n.getShaderInfoLog(x);\n                                        if (0 < A.length) throw A;\n                                        n.attachShader(H, x);\n                                    }\n                                    t = n.createProgram();\n                                    w(t, n.VERTEX_SHADER, \"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\n                                    w(t, n.FRAGMENT_SHADER, \"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");\n                                    n.bindAttribLocation(t, 0, \"vertex\");\n                                    n.bindAttribLocation(t, 1, \"uv\");\n                                    n.linkProgram(t);\n                                    g = n.getProgramInfoLog(t);\n                                    if (0 < g.trim().length) throw g;\n                                    e = n.getUniformLocation(t, \"mat\");\n                                    f = n.getUniformLocation(t, \"translate\");\n                                    n.useProgram(t);\n                                    n.bindBuffer(n.ARRAY_BUFFER, n.createBuffer());\n                                    n.enableVertexAttribArray(0);\n                                    n.enableVertexAttribArray(1);\n                                    n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, n.createBuffer());\n                                    n.uniform1i(n.getUniformLocation(t, \"image\"), 0);\n                                    n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0);\n                                    a = n;\n                                }\n                                return !0;\n                            }\n                            let a = null, c = 0, d = 0, e = null, f = null, m = 0, l = 0;\n                            this.Mb = function() {\n                                b();\n                                return d;\n                            };\n                            this.vb = function(t) {\n                                if (!b()) return null;\n                                const g = a.createTexture();\n                                a.bindTexture(a.TEXTURE_2D, g);\n                                a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, t);\n                                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE);\n                                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE);\n                                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.LINEAR);\n                                2 == c ? (a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.LINEAR_MIPMAP_LINEAR), a.generateMipmap(a.TEXTURE_2D)) : a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.LINEAR);\n                                return g;\n                            };\n                            const p = new ea(8), k = new ea(8), r = new ea(10), u = new ea(10);\n                            this.Ab = function(t, g, n, w, H) {\n                                if (b()) {\n                                    var x = p.push(t), A = k.push(g);\n                                    if (a.canvas.width != x || a.canvas.height != A) a.canvas.width = x, a.canvas.height = A;\n                                    a.viewport(0, A - g, t, g);\n                                    a.disable(a.SCISSOR_TEST);\n                                    a.clearColor(0, 0, 0, 0);\n                                    a.clear(a.COLOR_BUFFER_BIT);\n                                    a.enable(a.SCISSOR_TEST);\n                                    n.sort((B, fa)=>fa.jb - B.jb);\n                                    x = r.push(w);\n                                    m != x && (a.bufferData(a.ARRAY_BUFFER, 8 * x, a.DYNAMIC_DRAW), m = x);\n                                    x = 0;\n                                    for (var J of n)a.bufferSubData(a.ARRAY_BUFFER, x, J.Ra), x += 4 * J.Ra.length;\n                                    console.assert(x == 4 * w);\n                                    for (var Q of n)a.bufferSubData(a.ARRAY_BUFFER, x, Q.mb), x += 4 * Q.mb.length;\n                                    console.assert(x == 8 * w);\n                                    x = u.push(H);\n                                    l != x && (a.bufferData(a.ELEMENT_ARRAY_BUFFER, 2 * x, a.DYNAMIC_DRAW), l = x);\n                                    J = 0;\n                                    for (var aa of n)a.bufferSubData(a.ELEMENT_ARRAY_BUFFER, J, aa.indices), J += 2 * aa.indices.length;\n                                    console.assert(J == 2 * H);\n                                    aa = 0;\n                                    Q = !0;\n                                    x = J = 0;\n                                    for (const B of n){\n                                        B.image.Ma != aa && (a.bindTexture(a.TEXTURE_2D, B.image.rb || null), aa = B.image.Ma);\n                                        B.Pb ? (a.scissor(B.Va, A - B.Wa - B.cb, B.$b, B.cb), Q = !0) : Q && (a.scissor(0, A - g, t, g), Q = !1);\n                                        n = 2 / t;\n                                        const fa = -2 / g;\n                                        a.uniform4f(e, B.xa[0] * n * B.Ga, B.xa[1] * fa * B.Ha, B.xa[2] * n * B.Ga, B.xa[3] * fa * B.Ha);\n                                        a.uniform2f(f, B.xa[4] * n * B.Ga + n * (B.Va - B.Nb * B.Ga) - 1, B.xa[5] * fa * B.Ha + fa * (B.Wa - B.Ob * B.Ha) + 1);\n                                        a.vertexAttribPointer(0, 2, a.FLOAT, !1, 0, x);\n                                        a.vertexAttribPointer(1, 2, a.FLOAT, !1, 0, x + 4 * w);\n                                        a.drawElements(a.TRIANGLES, B.indices.length, a.UNSIGNED_SHORT, J);\n                                        x += 4 * B.Ra.length;\n                                        J += 2 * B.indices.length;\n                                    }\n                                    console.assert(x == 4 * w);\n                                    console.assert(J == 2 * H);\n                                }\n                            };\n                            this.canvas = function() {\n                                return b() && a.canvas;\n                            };\n                        }, la = h.onRuntimeInitialized;\n                        h.onRuntimeInitialized = function() {\n                            function b(q) {\n                                switch(q){\n                                    case k.srcOver:\n                                        return \"source-over\";\n                                    case k.screen:\n                                        return \"screen\";\n                                    case k.overlay:\n                                        return \"overlay\";\n                                    case k.darken:\n                                        return \"darken\";\n                                    case k.lighten:\n                                        return \"lighten\";\n                                    case k.colorDodge:\n                                        return \"color-dodge\";\n                                    case k.colorBurn:\n                                        return \"color-burn\";\n                                    case k.hardLight:\n                                        return \"hard-light\";\n                                    case k.softLight:\n                                        return \"soft-light\";\n                                    case k.difference:\n                                        return \"difference\";\n                                    case k.exclusion:\n                                        return \"exclusion\";\n                                    case k.multiply:\n                                        return \"multiply\";\n                                    case k.hue:\n                                        return \"hue\";\n                                    case k.saturation:\n                                        return \"saturation\";\n                                    case k.color:\n                                        return \"color\";\n                                    case k.luminosity:\n                                        return \"luminosity\";\n                                }\n                            }\n                            function a(q) {\n                                return \"rgba(\" + ((16711680 & q) >>> 16) + \",\" + ((65280 & q) >>> 8) + \",\" + ((255 & q) >>> 0) + \",\" + ((4278190080 & q) >>> 24) / 255 + \")\";\n                            }\n                            function c() {\n                                0 < J.length && (ka.Ab(A.drawWidth(), A.drawHeight(), J, Q, aa), J = [], aa = Q = 0, A.reset(512, 512));\n                                for (const q of x){\n                                    for (const v of q.ja)v();\n                                    q.ja = [];\n                                }\n                                x.clear();\n                            }\n                            la && la();\n                            var d = h.RenderPaintStyle;\n                            const e = h.RenderPath, f = h.RenderPaint, m = h.Renderer, l = h.StrokeCap, p = h.StrokeJoin, k = h.BlendMode, r = d.fill, u = d.stroke, t = h.FillRule.evenOdd;\n                            let g = 1;\n                            var n = h.RenderImage.extend(\"CanvasRenderImage\", {\n                                __construct: function({ Aa: q, Fa: v } = {}) {\n                                    this.__parent.__construct.call(this);\n                                    this.Ma = g;\n                                    g = g + 1 & 2147483647 || 1;\n                                    this.Aa = q;\n                                    this.Fa = v;\n                                },\n                                decode: function(q) {\n                                    var v = this;\n                                    v.Fa && v.Fa(v);\n                                    var C = new Image;\n                                    C.src = URL.createObjectURL(new Blob([\n                                        q\n                                    ], {\n                                        type: \"image/png\"\n                                    }));\n                                    C.onload = function() {\n                                        v.ob = C;\n                                        v.rb = ka.vb(C);\n                                        v.size(C.width, C.height);\n                                        v.Aa && v.Aa(v);\n                                    };\n                                }\n                            }), w = e.extend(\"CanvasRenderPath\", {\n                                __construct: function() {\n                                    this.__parent.__construct.call(this);\n                                    this.pa = new Path2D;\n                                },\n                                rewind: function() {\n                                    this.pa = new Path2D;\n                                },\n                                addPath: function(q, v, C, D, z, E, F) {\n                                    var G = this.pa, T = G.addPath;\n                                    q = q.pa;\n                                    const K = new DOMMatrix;\n                                    K.a = v;\n                                    K.b = C;\n                                    K.c = D;\n                                    K.d = z;\n                                    K.e = E;\n                                    K.f = F;\n                                    T.call(G, q, K);\n                                },\n                                fillRule: function(q) {\n                                    this.Ta = q;\n                                },\n                                moveTo: function(q, v) {\n                                    this.pa.moveTo(q, v);\n                                },\n                                lineTo: function(q, v) {\n                                    this.pa.lineTo(q, v);\n                                },\n                                cubicTo: function(q, v, C, D, z, E) {\n                                    this.pa.bezierCurveTo(q, v, C, D, z, E);\n                                },\n                                close: function() {\n                                    this.pa.closePath();\n                                }\n                            }), H = f.extend(\"CanvasRenderPaint\", {\n                                color: function(q) {\n                                    this.Ua = a(q);\n                                },\n                                thickness: function(q) {\n                                    this.sb = q;\n                                },\n                                join: function(q) {\n                                    switch(q){\n                                        case p.miter:\n                                            this.La = \"miter\";\n                                            break;\n                                        case p.round:\n                                            this.La = \"round\";\n                                            break;\n                                        case p.bevel:\n                                            this.La = \"bevel\";\n                                    }\n                                },\n                                cap: function(q) {\n                                    switch(q){\n                                        case l.butt:\n                                            this.Ka = \"butt\";\n                                            break;\n                                        case l.round:\n                                            this.Ka = \"round\";\n                                            break;\n                                        case l.square:\n                                            this.Ka = \"square\";\n                                    }\n                                },\n                                style: function(q) {\n                                    this.qb = q;\n                                },\n                                blendMode: function(q) {\n                                    this.nb = b(q);\n                                },\n                                clearGradient: function() {\n                                    this.za = null;\n                                },\n                                linearGradient: function(q, v, C, D) {\n                                    this.za = {\n                                        kb: q,\n                                        lb: v,\n                                        Za: C,\n                                        $a: D,\n                                        Pa: []\n                                    };\n                                },\n                                radialGradient: function(q, v, C, D) {\n                                    this.za = {\n                                        kb: q,\n                                        lb: v,\n                                        Za: C,\n                                        $a: D,\n                                        Pa: [],\n                                        Kb: !0\n                                    };\n                                },\n                                addStop: function(q, v) {\n                                    this.za.Pa.push({\n                                        color: q,\n                                        stop: v\n                                    });\n                                },\n                                completeGradient: function() {},\n                                draw: function(q, v, C) {\n                                    let D = this.qb;\n                                    var z = this.Ua, E = this.za;\n                                    q.globalCompositeOperation = this.nb;\n                                    if (null != E) {\n                                        z = E.kb;\n                                        var F = E.lb;\n                                        const T = E.Za;\n                                        var G = E.$a;\n                                        const K = E.Pa;\n                                        E.Kb ? (E = T - z, G -= F, z = q.createRadialGradient(z, F, 0, z, F, Math.sqrt(E * E + G * G))) : z = q.createLinearGradient(z, F, T, G);\n                                        for(let W = 0, N = K.length; W < N; W++)F = K[W], z.addColorStop(F.stop, a(F.color));\n                                        this.Ua = z;\n                                        this.za = null;\n                                    }\n                                    switch(D){\n                                        case u:\n                                            q.strokeStyle = z;\n                                            q.lineWidth = this.sb;\n                                            q.lineCap = this.Ka;\n                                            q.lineJoin = this.La;\n                                            q.stroke(v);\n                                            break;\n                                        case r:\n                                            q.fillStyle = z, q.fill(v, C);\n                                    }\n                                }\n                            });\n                            const x = new Set;\n                            let A = null, J = [], Q = 0, aa = 0;\n                            var B = h.CanvasRenderer = m.extend(\"Renderer\", {\n                                __construct: function(q) {\n                                    this.__parent.__construct.call(this);\n                                    this.oa = [\n                                        1,\n                                        0,\n                                        0,\n                                        1,\n                                        0,\n                                        0\n                                    ];\n                                    this.ha = q.getContext(\"2d\");\n                                    this.Sa = q;\n                                    this.ja = [];\n                                },\n                                save: function() {\n                                    this.oa.push(...this.oa.slice(this.oa.length - 6));\n                                    this.ja.push(this.ha.save.bind(this.ha));\n                                },\n                                restore: function() {\n                                    const q = this.oa.length - 6;\n                                    if (6 > q) throw \"restore() called without matching save().\";\n                                    this.oa.splice(q);\n                                    this.ja.push(this.ha.restore.bind(this.ha));\n                                },\n                                transform: function(q, v, C, D, z, E) {\n                                    const F = this.oa, G = F.length - 6;\n                                    F.splice(G, 6, F[G] * q + F[G + 2] * v, F[G + 1] * q + F[G + 3] * v, F[G] * C + F[G + 2] * D, F[G + 1] * C + F[G + 3] * D, F[G] * z + F[G + 2] * E + F[G + 4], F[G + 1] * z + F[G + 3] * E + F[G + 5]);\n                                    this.ja.push(this.ha.transform.bind(this.ha, q, v, C, D, z, E));\n                                },\n                                rotate: function(q) {\n                                    const v = Math.sin(q);\n                                    q = Math.cos(q);\n                                    this.transform(q, v, -v, q, 0, 0);\n                                },\n                                _drawPath: function(q, v) {\n                                    this.ja.push(v.draw.bind(v, this.ha, q.pa, q.Ta === t ? \"evenodd\" : \"nonzero\"));\n                                },\n                                _drawRiveImage: function(q, v, C) {\n                                    var D = q.ob;\n                                    if (D) {\n                                        var z = this.ha, E = b(v);\n                                        this.ja.push(function() {\n                                            z.globalCompositeOperation = E;\n                                            z.globalAlpha = C;\n                                            z.drawImage(D, 0, 0);\n                                            z.globalAlpha = 1;\n                                        });\n                                    }\n                                },\n                                _getMatrix: function(q) {\n                                    const v = this.oa, C = v.length - 6;\n                                    for(let D = 0; 6 > D; ++D)q[D] = v[C + D];\n                                },\n                                _drawImageMesh: function(q, v, C, D, z, E, F, G, T, K) {\n                                    var W = this.ha.canvas.width, N = this.ha.canvas.height;\n                                    const sb = T - F, tb = K - G;\n                                    F = Math.max(F, 0);\n                                    G = Math.max(G, 0);\n                                    T = Math.min(T, W);\n                                    K = Math.min(K, N);\n                                    const ua = T - F, va = K - G;\n                                    console.assert(ua <= Math.min(sb, W));\n                                    console.assert(va <= Math.min(tb, N));\n                                    if (!(0 >= ua || 0 >= va)) {\n                                        T = ua < sb || va < tb;\n                                        W = K = 1;\n                                        var ia = Math.ceil(ua * K), ja = Math.ceil(va * W);\n                                        N = ka.Mb();\n                                        ia > N && (K *= N / ia, ia = N);\n                                        ja > N && (W *= N / ja, ja = N);\n                                        A || (A = new h.DynamicRectanizer(N), A.reset(512, 512));\n                                        N = A.addRect(ia, ja);\n                                        0 > N && (c(), x.add(this), N = A.addRect(ia, ja), console.assert(0 <= N));\n                                        var ub = N & 65535, vb = N >> 16;\n                                        J.push({\n                                            xa: this.oa.slice(this.oa.length - 6),\n                                            image: q,\n                                            Va: ub,\n                                            Wa: vb,\n                                            Nb: F,\n                                            Ob: G,\n                                            $b: ia,\n                                            cb: ja,\n                                            Ga: K,\n                                            Ha: W,\n                                            Ra: new Float32Array(D),\n                                            mb: new Float32Array(z),\n                                            indices: new Uint16Array(E),\n                                            Pb: T,\n                                            jb: q.Ma << 1 | (T ? 1 : 0)\n                                        });\n                                        Q += D.length;\n                                        aa += E.length;\n                                        var oa = this.ha, kc = b(v);\n                                        this.ja.push(function() {\n                                            oa.save();\n                                            oa.resetTransform();\n                                            oa.globalCompositeOperation = kc;\n                                            oa.globalAlpha = C;\n                                            oa.drawImage(ka.canvas(), ub, vb, ia, ja, F, G, ua, va);\n                                            oa.restore();\n                                        });\n                                    }\n                                },\n                                _clipPath: function(q) {\n                                    this.ja.push(this.ha.clip.bind(this.ha, q.pa, q.Ta === t ? \"evenodd\" : \"nonzero\"));\n                                },\n                                clear: function() {\n                                    x.add(this);\n                                    this.ja.push(this.ha.clearRect.bind(this.ha, 0, 0, this.Sa.width, this.Sa.height));\n                                },\n                                flush: function() {},\n                                translate: function(q, v) {\n                                    this.transform(1, 0, 0, 1, q, v);\n                                }\n                            });\n                            h.makeRenderer = function(q) {\n                                const v = new B(q), C = v.ha;\n                                return new Proxy(v, {\n                                    get (D, z) {\n                                        if (\"function\" === typeof D[z]) return function(...E) {\n                                            return D[z].apply(D, E);\n                                        };\n                                        if (\"function\" === typeof C[z]) {\n                                            if (-1 < ha.indexOf(z)) throw Error(\"RiveException: Method call to '\" + z + \"()' is not allowed, as the renderer cannot immediately pass through the return                 values of any canvas 2d context methods.\");\n                                            return function(...E) {\n                                                v.ja.push(C[z].bind(C, ...E));\n                                            };\n                                        }\n                                        return D[z];\n                                    },\n                                    set (D, z, E) {\n                                        if (z in C) return C[z] = E, !0;\n                                    }\n                                });\n                            };\n                            h.decodeImage = function(q, v) {\n                                new n({\n                                    Aa: v\n                                }).decode(q);\n                            };\n                            h.renderFactory = {\n                                makeRenderPaint: function() {\n                                    return new H;\n                                },\n                                makeRenderPath: function() {\n                                    return new w;\n                                },\n                                makeRenderImage: function() {\n                                    let q = Za;\n                                    return new n({\n                                        Fa: ()=>{\n                                            q.total++;\n                                        },\n                                        Aa: ()=>{\n                                            q.loaded++;\n                                            if (q.loaded === q.total) {\n                                                const v = q.ready;\n                                                v && (v(), q.ready = null);\n                                            }\n                                        }\n                                    });\n                                }\n                            };\n                            let fa = h.load, Za = null;\n                            h.load = function(q, v, C = !0) {\n                                const D = new h.FallbackFileAssetLoader;\n                                void 0 !== v && D.addLoader(v);\n                                C && (v = new h.CDNFileAssetLoader, D.addLoader(v));\n                                return new Promise(function(z) {\n                                    let E = null;\n                                    Za = {\n                                        total: 0,\n                                        loaded: 0,\n                                        ready: function() {\n                                            z(E);\n                                        }\n                                    };\n                                    E = fa(q, D);\n                                    0 == Za.total && z(E);\n                                });\n                            };\n                            d = new da;\n                            h.requestAnimationFrame = d.requestAnimationFrame.bind(d);\n                            h.cancelAnimationFrame = d.cancelAnimationFrame.bind(d);\n                            h.enableFPSCounter = d.Bb.bind(d);\n                            h.disableFPSCounter = d.yb;\n                            d.fb = c;\n                            h.cleanup = function() {\n                                A && A.delete();\n                            };\n                        };\n                        const ma = h.onRuntimeInitialized;\n                        h.onRuntimeInitialized = function() {\n                            ma && ma();\n                            let b = h.decodeFont;\n                            h.decodeFont = function(c, d) {\n                                c = b(c);\n                                d(c);\n                            };\n                            const a = h.FileAssetLoader;\n                            h.ptrToAsset = (c)=>{\n                                let d = h.ptrToFileAsset(c);\n                                return d.isImage ? h.ptrToImageAsset(c) : d.isFont ? h.ptrToFontAsset(c) : d;\n                            };\n                            h.CustomFileAssetLoader = a.extend(\"CustomFileAssetLoader\", {\n                                __construct: function({ loadContents: c }) {\n                                    this.__parent.__construct.call(this);\n                                    this.pb = c;\n                                },\n                                loadContents: function(c, d) {\n                                    c = h.ptrToAsset(c);\n                                    return this.pb(c, d);\n                                }\n                            });\n                            h.CDNFileAssetLoader = a.extend(\"CDNFileAssetLoader\", {\n                                __construct: function() {\n                                    this.__parent.__construct.call(this);\n                                },\n                                loadContents: function(c) {\n                                    let d = h.ptrToAsset(c);\n                                    c = d.cdnUuid;\n                                    if (\"\" === c) return !1;\n                                    (function(e, f) {\n                                        var m = new XMLHttpRequest;\n                                        m.responseType = \"arraybuffer\";\n                                        m.onreadystatechange = function() {\n                                            4 == m.readyState && 200 == m.status && f(m);\n                                        };\n                                        m.open(\"GET\", e, !0);\n                                        m.send(null);\n                                    })(d.cdnBaseUrl + \"/\" + c, (e)=>{\n                                        d.decode(new Uint8Array(e.response));\n                                    });\n                                    return !0;\n                                }\n                            });\n                            h.FallbackFileAssetLoader = a.extend(\"FallbackFileAssetLoader\", {\n                                __construct: function() {\n                                    this.__parent.__construct.call(this);\n                                    this.eb = [];\n                                },\n                                addLoader: function(c) {\n                                    this.eb.push(c);\n                                },\n                                loadContents: function(c, d) {\n                                    for (let e of this.eb)if (e.loadContents(c, d)) return !0;\n                                    return !1;\n                                }\n                            });\n                        };\n                        var na = Object.assign({}, h), pa = \"./this.program\", qa = \"object\" == typeof window, ra = \"function\" == typeof importScripts, y = \"\", sa, ta;\n                        if (qa || ra) ra ? y = self.location.href : \"undefined\" != typeof document && document.currentScript && (y = document.currentScript.src), _scriptDir && (y = _scriptDir), 0 !== y.indexOf(\"blob:\") ? y = y.substr(0, y.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1) : y = \"\", ra && (ta = (b)=>{\n                            var a = new XMLHttpRequest;\n                            a.open(\"GET\", b, !1);\n                            a.responseType = \"arraybuffer\";\n                            a.send(null);\n                            return new Uint8Array(a.response);\n                        }), sa = (b, a, c)=>{\n                            var d = new XMLHttpRequest;\n                            d.open(\"GET\", b, !0);\n                            d.responseType = \"arraybuffer\";\n                            d.onload = ()=>{\n                                200 == d.status || 0 == d.status && d.response ? a(d.response) : c();\n                            };\n                            d.onerror = c;\n                            d.send(null);\n                        };\n                        var wa = h.print || console.log.bind(console), xa = h.printErr || console.error.bind(console);\n                        Object.assign(h, na);\n                        na = null;\n                        h.thisProgram && (pa = h.thisProgram);\n                        var ya;\n                        h.wasmBinary && (ya = h.wasmBinary);\n                        var noExitRuntime = h.noExitRuntime || !0;\n                        \"object\" != typeof WebAssembly && za(\"no native wasm support detected\");\n                        var Aa, I, Ba = !1, Ca, L, Da, Ea, M, O, Fa, Ga;\n                        function Ha() {\n                            var b = Aa.buffer;\n                            h.HEAP8 = Ca = new Int8Array(b);\n                            h.HEAP16 = Da = new Int16Array(b);\n                            h.HEAP32 = M = new Int32Array(b);\n                            h.HEAPU8 = L = new Uint8Array(b);\n                            h.HEAPU16 = Ea = new Uint16Array(b);\n                            h.HEAPU32 = O = new Uint32Array(b);\n                            h.HEAPF32 = Fa = new Float32Array(b);\n                            h.HEAPF64 = Ga = new Float64Array(b);\n                        }\n                        var Ia, Ja = [], Ka = [], La = [];\n                        function Ma() {\n                            var b = h.preRun.shift();\n                            Ja.unshift(b);\n                        }\n                        var Na = 0, Oa = null, Pa = null;\n                        function za(b) {\n                            if (h.onAbort) h.onAbort(b);\n                            b = \"Aborted(\" + b + \")\";\n                            xa(b);\n                            Ba = !0;\n                            b = new WebAssembly.RuntimeError(b + \". Build with -sASSERTIONS for more info.\");\n                            ca(b);\n                            throw b;\n                        }\n                        function Qa(b) {\n                            return b.startsWith(\"data:application/octet-stream;base64,\");\n                        }\n                        var Ra;\n                        Ra = \"canvas_advanced.wasm\";\n                        if (!Qa(Ra)) {\n                            var Sa = Ra;\n                            Ra = h.locateFile ? h.locateFile(Sa, y) : y + Sa;\n                        }\n                        function Ta(b) {\n                            if (b == Ra && ya) return new Uint8Array(ya);\n                            if (ta) return ta(b);\n                            throw \"both async and sync fetching of the wasm failed\";\n                        }\n                        function Ua(b) {\n                            if (!ya && (qa || ra)) {\n                                if (\"function\" == typeof fetch && !b.startsWith(\"file://\")) return fetch(b, {\n                                    credentials: \"same-origin\"\n                                }).then((a)=>{\n                                    if (!a.ok) throw \"failed to load wasm binary file at '\" + b + \"'\";\n                                    return a.arrayBuffer();\n                                }).catch(()=>Ta(b));\n                                if (sa) return new Promise((a, c)=>{\n                                    sa(b, (d)=>a(new Uint8Array(d)), c);\n                                });\n                            }\n                            return Promise.resolve().then(()=>Ta(b));\n                        }\n                        function Va(b, a, c) {\n                            return Ua(b).then((d)=>WebAssembly.instantiate(d, a)).then((d)=>d).then(c, (d)=>{\n                                xa(\"failed to asynchronously prepare wasm: \" + d);\n                                za(d);\n                            });\n                        }\n                        function Wa(b, a) {\n                            var c = Ra;\n                            return ya || \"function\" != typeof WebAssembly.instantiateStreaming || Qa(c) || c.startsWith(\"file://\") || \"function\" != typeof fetch ? Va(c, b, a) : fetch(c, {\n                                credentials: \"same-origin\"\n                            }).then((d)=>WebAssembly.instantiateStreaming(d, b).then(a, function(e) {\n                                    xa(\"wasm streaming compile failed: \" + e);\n                                    xa(\"falling back to ArrayBuffer instantiation\");\n                                    return Va(c, b, a);\n                                }));\n                        }\n                        var Xa = (b)=>{\n                            for(; 0 < b.length;)b.shift()(h);\n                        };\n                        function Ya(b) {\n                            if (void 0 === b) return \"_unknown\";\n                            b = b.replace(/[^a-zA-Z0-9_]/g, \"$\");\n                            var a = b.charCodeAt(0);\n                            return 48 <= a && 57 >= a ? `_${b}` : b;\n                        }\n                        function $a(b, a) {\n                            b = Ya(b);\n                            return ({\n                                [b]: function() {\n                                    return a.apply(this, arguments);\n                                }\n                            })[b];\n                        }\n                        function ab() {\n                            this.qa = [\n                                void 0\n                            ];\n                            this.bb = [];\n                        }\n                        var P = new ab, bb = void 0;\n                        function R(b) {\n                            throw new bb(b);\n                        }\n                        var S = (b)=>{\n                            b || R(\"Cannot use deleted val. handle = \" + b);\n                            return P.get(b).value;\n                        }, U = (b)=>{\n                            switch(b){\n                                case void 0:\n                                    return 1;\n                                case null:\n                                    return 2;\n                                case !0:\n                                    return 3;\n                                case !1:\n                                    return 4;\n                                default:\n                                    return P.tb({\n                                        ib: 1,\n                                        value: b\n                                    });\n                            }\n                        };\n                        function cb(b) {\n                            var a = Error, c = $a(b, function(d) {\n                                this.name = b;\n                                this.message = d;\n                                d = Error(d).stack;\n                                void 0 !== d && (this.stack = this.toString() + \"\\n\" + d.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n                            });\n                            c.prototype = Object.create(a.prototype);\n                            c.prototype.constructor = c;\n                            c.prototype.toString = function() {\n                                return void 0 === this.message ? this.name : `${this.name}: ${this.message}`;\n                            };\n                            return c;\n                        }\n                        var db = void 0, eb = void 0;\n                        function V(b) {\n                            for(var a = \"\"; L[b];)a += eb[L[b++]];\n                            return a;\n                        }\n                        var fb = [];\n                        function gb() {\n                            for(; fb.length;){\n                                var b = fb.pop();\n                                b.ba.wa = !1;\n                                b[\"delete\"]();\n                            }\n                        }\n                        var hb = void 0, ib = {};\n                        function jb(b, a) {\n                            for(void 0 === a && R(\"ptr should not be undefined\"); b.fa;)a = b.Ba(a), b = b.fa;\n                            return a;\n                        }\n                        var kb = {};\n                        function lb(b) {\n                            b = mb(b);\n                            var a = V(b);\n                            nb(b);\n                            return a;\n                        }\n                        function ob(b, a) {\n                            var c = kb[b];\n                            void 0 === c && R(a + \" has unknown type \" + lb(b));\n                            return c;\n                        }\n                        function pb() {}\n                        var qb = !1;\n                        function rb(b) {\n                            --b.count.value;\n                            0 === b.count.value && (b.ia ? b.la.ra(b.ia) : b.ea.ca.ra(b.da));\n                        }\n                        function wb(b, a, c) {\n                            if (a === c) return b;\n                            if (void 0 === c.fa) return null;\n                            b = wb(b, a, c.fa);\n                            return null === b ? null : c.zb(b);\n                        }\n                        var xb = {};\n                        function yb(b, a) {\n                            a = jb(b, a);\n                            return ib[a];\n                        }\n                        var zb = void 0;\n                        function Ab(b) {\n                            throw new zb(b);\n                        }\n                        function Bb(b, a) {\n                            a.ea && a.da || Ab(\"makeClassHandle requires ptr and ptrType\");\n                            !!a.la !== !!a.ia && Ab(\"Both smartPtrType and smartPtr must be specified\");\n                            a.count = {\n                                value: 1\n                            };\n                            return Cb(Object.create(b, {\n                                ba: {\n                                    value: a\n                                }\n                            }));\n                        }\n                        function Cb(b) {\n                            if (\"undefined\" === typeof FinalizationRegistry) return Cb = (a)=>a, b;\n                            qb = new FinalizationRegistry((a)=>{\n                                rb(a.ba);\n                            });\n                            Cb = (a)=>{\n                                var c = a.ba;\n                                c.ia && qb.register(a, {\n                                    ba: c\n                                }, a);\n                                return a;\n                            };\n                            pb = (a)=>{\n                                qb.unregister(a);\n                            };\n                            return Cb(b);\n                        }\n                        var Db = {};\n                        function Eb(b) {\n                            for(; b.length;){\n                                var a = b.pop();\n                                b.pop()(a);\n                            }\n                        }\n                        function Fb(b) {\n                            return this.fromWireType(M[b >> 2]);\n                        }\n                        var Gb = {}, Hb = {};\n                        function X(b, a, c) {\n                            function d(l) {\n                                l = c(l);\n                                l.length !== b.length && Ab(\"Mismatched type converter count\");\n                                for(var p = 0; p < b.length; ++p)Y(b[p], l[p]);\n                            }\n                            b.forEach(function(l) {\n                                Hb[l] = a;\n                            });\n                            var e = Array(a.length), f = [], m = 0;\n                            a.forEach((l, p)=>{\n                                kb.hasOwnProperty(l) ? e[p] = kb[l] : (f.push(l), Gb.hasOwnProperty(l) || (Gb[l] = []), Gb[l].push(()=>{\n                                    e[p] = kb[l];\n                                    ++m;\n                                    m === f.length && d(e);\n                                }));\n                            });\n                            0 === f.length && d(e);\n                        }\n                        function Ib(b) {\n                            switch(b){\n                                case 1:\n                                    return 0;\n                                case 2:\n                                    return 1;\n                                case 4:\n                                    return 2;\n                                case 8:\n                                    return 3;\n                                default:\n                                    throw new TypeError(`Unknown type size: ${b}`);\n                            }\n                        }\n                        function Jb(b, a, c = {}) {\n                            var d = a.name;\n                            b || R(`type \"${d}\" must have a positive integer typeid pointer`);\n                            if (kb.hasOwnProperty(b)) {\n                                if (c.Jb) return;\n                                R(`Cannot register type '${d}' twice`);\n                            }\n                            kb[b] = a;\n                            delete Hb[b];\n                            Gb.hasOwnProperty(b) && (a = Gb[b], delete Gb[b], a.forEach((e)=>e()));\n                        }\n                        function Y(b, a, c = {}) {\n                            if (!(\"argPackAdvance\" in a)) throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n                            Jb(b, a, c);\n                        }\n                        function Kb(b) {\n                            R(b.ba.ea.ca.name + \" instance already deleted\");\n                        }\n                        function Lb() {}\n                        function Mb(b, a, c) {\n                            if (void 0 === b[a].ga) {\n                                var d = b[a];\n                                b[a] = function() {\n                                    b[a].ga.hasOwnProperty(arguments.length) || R(`Function '${c}' called with an invalid number of arguments (${arguments.length}) - expects one of (${b[a].ga})!`);\n                                    return b[a].ga[arguments.length].apply(this, arguments);\n                                };\n                                b[a].ga = [];\n                                b[a].ga[d.va] = d;\n                            }\n                        }\n                        function Nb(b, a, c) {\n                            h.hasOwnProperty(b) ? ((void 0 === c || void 0 !== h[b].ga && void 0 !== h[b].ga[c]) && R(`Cannot register public name '${b}' twice`), Mb(h, b, b), h.hasOwnProperty(c) && R(`Cannot register multiple overloads of a function with the same number of arguments (${c})!`), h[b].ga[c] = a) : (h[b] = a, void 0 !== c && (h[b].ac = c));\n                        }\n                        function Ob(b, a, c, d, e, f, m, l) {\n                            this.name = b;\n                            this.constructor = a;\n                            this.ma = c;\n                            this.ra = d;\n                            this.fa = e;\n                            this.Eb = f;\n                            this.Ba = m;\n                            this.zb = l;\n                            this.gb = [];\n                        }\n                        function Pb(b, a, c) {\n                            for(; a !== c;)a.Ba || R(`Expected null or instance of ${c.name}, got an instance of ${a.name}`), b = a.Ba(b), a = a.fa;\n                            return b;\n                        }\n                        function Qb(b, a) {\n                            if (null === a) return this.Na && R(`null is not a valid ${this.name}`), 0;\n                            a.ba || R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);\n                            a.ba.da || R(`Cannot pass deleted object as a pointer of type ${this.name}`);\n                            return Pb(a.ba.da, a.ba.ea.ca, this.ca);\n                        }\n                        function Sb(b, a) {\n                            if (null === a) {\n                                this.Na && R(`null is not a valid ${this.name}`);\n                                if (this.Ea) {\n                                    var c = this.Oa();\n                                    null !== b && b.push(this.ra, c);\n                                    return c;\n                                }\n                                return 0;\n                            }\n                            a.ba || R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);\n                            a.ba.da || R(`Cannot pass deleted object as a pointer of type ${this.name}`);\n                            !this.Da && a.ba.ea.Da && R(`Cannot convert argument of type ${a.ba.la ? a.ba.la.name : a.ba.ea.name} to parameter type ${this.name}`);\n                            c = Pb(a.ba.da, a.ba.ea.ca, this.ca);\n                            if (this.Ea) switch(void 0 === a.ba.ia && R(\"Passing raw pointer to smart pointer is illegal\"), this.Vb){\n                                case 0:\n                                    a.ba.la === this ? c = a.ba.ia : R(`Cannot convert argument of type ${a.ba.la ? a.ba.la.name : a.ba.ea.name} to parameter type ${this.name}`);\n                                    break;\n                                case 1:\n                                    c = a.ba.ia;\n                                    break;\n                                case 2:\n                                    if (a.ba.la === this) c = a.ba.ia;\n                                    else {\n                                        var d = a.clone();\n                                        c = this.Rb(c, U(function() {\n                                            d[\"delete\"]();\n                                        }));\n                                        null !== b && b.push(this.ra, c);\n                                    }\n                                    break;\n                                default:\n                                    R(\"Unsupporting sharing policy\");\n                            }\n                            return c;\n                        }\n                        function Tb(b, a) {\n                            if (null === a) return this.Na && R(`null is not a valid ${this.name}`), 0;\n                            a.ba || R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);\n                            a.ba.da || R(`Cannot pass deleted object as a pointer of type ${this.name}`);\n                            a.ba.ea.Da && R(`Cannot convert argument of type ${a.ba.ea.name} to parameter type ${this.name}`);\n                            return Pb(a.ba.da, a.ba.ea.ca, this.ca);\n                        }\n                        function Ub(b, a, c, d) {\n                            this.name = b;\n                            this.ca = a;\n                            this.Na = c;\n                            this.Da = d;\n                            this.Ea = !1;\n                            this.ra = this.Rb = this.Oa = this.hb = this.Vb = this.Qb = void 0;\n                            void 0 !== a.fa ? this.toWireType = Sb : (this.toWireType = d ? Qb : Tb, this.ka = null);\n                        }\n                        function Vb(b, a, c) {\n                            h.hasOwnProperty(b) || Ab(\"Replacing nonexistant public symbol\");\n                            void 0 !== h[b].ga && void 0 !== c ? h[b].ga[c] = a : (h[b] = a, h[b].va = c);\n                        }\n                        var Wb = (b, a)=>{\n                            var c = [];\n                            return function() {\n                                c.length = 0;\n                                Object.assign(c, arguments);\n                                if (b.includes(\"j\")) {\n                                    var d = h[\"dynCall_\" + b];\n                                    d = c && c.length ? d.apply(null, [\n                                        a\n                                    ].concat(c)) : d.call(null, a);\n                                } else d = Ia.get(a).apply(null, c);\n                                return d;\n                            };\n                        };\n                        function Z(b, a) {\n                            b = V(b);\n                            var c = b.includes(\"j\") ? Wb(b, a) : Ia.get(a);\n                            \"function\" != typeof c && R(`unknown function pointer with signature ${b}: ${a}`);\n                            return c;\n                        }\n                        var Xb = void 0;\n                        function Yb(b, a) {\n                            function c(f) {\n                                e[f] || kb[f] || (Hb[f] ? Hb[f].forEach(c) : (d.push(f), e[f] = !0));\n                            }\n                            var d = [], e = {};\n                            a.forEach(c);\n                            throw new Xb(`${b}: ` + d.map(lb).join([\n                                \", \"\n                            ]));\n                        }\n                        function Zb(b, a, c, d, e) {\n                            var f = a.length;\n                            2 > f && R(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n                            var m = null !== a[1] && null !== c, l = !1;\n                            for(c = 1; c < a.length; ++c)if (null !== a[c] && void 0 === a[c].ka) {\n                                l = !0;\n                                break;\n                            }\n                            var p = \"void\" !== a[0].name, k = f - 2, r = Array(k), u = [], t = [];\n                            return function() {\n                                arguments.length !== k && R(`function ${b} called with ${arguments.length} arguments, expected ${k} args!`);\n                                t.length = 0;\n                                u.length = m ? 2 : 1;\n                                u[0] = e;\n                                if (m) {\n                                    var g = a[1].toWireType(t, this);\n                                    u[1] = g;\n                                }\n                                for(var n = 0; n < k; ++n)r[n] = a[n + 2].toWireType(t, arguments[n]), u.push(r[n]);\n                                n = d.apply(null, u);\n                                if (l) Eb(t);\n                                else for(var w = m ? 1 : 2; w < a.length; w++){\n                                    var H = 1 === w ? g : r[w - 2];\n                                    null !== a[w].ka && a[w].ka(H);\n                                }\n                                g = p ? a[0].fromWireType(n) : void 0;\n                                return g;\n                            };\n                        }\n                        function $b(b, a) {\n                            for(var c = [], d = 0; d < b; d++)c.push(O[a + 4 * d >> 2]);\n                            return c;\n                        }\n                        function ac(b, a, c) {\n                            b instanceof Object || R(`${c} with invalid \"this\": ${b}`);\n                            b instanceof a.ca.constructor || R(`${c} incompatible with \"this\" of type ${b.constructor.name}`);\n                            b.ba.da || R(`cannot call emscripten binding method ${c} on deleted object`);\n                            return Pb(b.ba.da, b.ba.ea.ca, a.ca);\n                        }\n                        function bc(b) {\n                            b >= P.Xa && 0 === --P.get(b).ib && P.wb(b);\n                        }\n                        function cc(b, a, c) {\n                            switch(a){\n                                case 0:\n                                    return function(d) {\n                                        return this.fromWireType((c ? Ca : L)[d]);\n                                    };\n                                case 1:\n                                    return function(d) {\n                                        return this.fromWireType((c ? Da : Ea)[d >> 1]);\n                                    };\n                                case 2:\n                                    return function(d) {\n                                        return this.fromWireType((c ? M : O)[d >> 2]);\n                                    };\n                                default:\n                                    throw new TypeError(\"Unknown integer type: \" + b);\n                            }\n                        }\n                        function Rb(b) {\n                            if (null === b) return \"null\";\n                            var a = typeof b;\n                            return \"object\" === a || \"array\" === a || \"function\" === a ? b.toString() : \"\" + b;\n                        }\n                        function dc(b, a) {\n                            switch(a){\n                                case 2:\n                                    return function(c) {\n                                        return this.fromWireType(Fa[c >> 2]);\n                                    };\n                                case 3:\n                                    return function(c) {\n                                        return this.fromWireType(Ga[c >> 3]);\n                                    };\n                                default:\n                                    throw new TypeError(\"Unknown float type: \" + b);\n                            }\n                        }\n                        function ec(b, a, c) {\n                            switch(a){\n                                case 0:\n                                    return c ? function(d) {\n                                        return Ca[d];\n                                    } : function(d) {\n                                        return L[d];\n                                    };\n                                case 1:\n                                    return c ? function(d) {\n                                        return Da[d >> 1];\n                                    } : function(d) {\n                                        return Ea[d >> 1];\n                                    };\n                                case 2:\n                                    return c ? function(d) {\n                                        return M[d >> 2];\n                                    } : function(d) {\n                                        return O[d >> 2];\n                                    };\n                                default:\n                                    throw new TypeError(\"Unknown integer type: \" + b);\n                            }\n                        }\n                        var fc = (b, a, c, d)=>{\n                            if (0 < d) {\n                                d = c + d - 1;\n                                for(var e = 0; e < b.length; ++e){\n                                    var f = b.charCodeAt(e);\n                                    if (55296 <= f && 57343 >= f) {\n                                        var m = b.charCodeAt(++e);\n                                        f = 65536 + ((f & 1023) << 10) | m & 1023;\n                                    }\n                                    if (127 >= f) {\n                                        if (c >= d) break;\n                                        a[c++] = f;\n                                    } else {\n                                        if (2047 >= f) {\n                                            if (c + 1 >= d) break;\n                                            a[c++] = 192 | f >> 6;\n                                        } else {\n                                            if (65535 >= f) {\n                                                if (c + 2 >= d) break;\n                                                a[c++] = 224 | f >> 12;\n                                            } else {\n                                                if (c + 3 >= d) break;\n                                                a[c++] = 240 | f >> 18;\n                                                a[c++] = 128 | f >> 12 & 63;\n                                            }\n                                            a[c++] = 128 | f >> 6 & 63;\n                                        }\n                                        a[c++] = 128 | f & 63;\n                                    }\n                                }\n                                a[c] = 0;\n                            }\n                        }, gc = (b)=>{\n                            for(var a = 0, c = 0; c < b.length; ++c){\n                                var d = b.charCodeAt(c);\n                                127 >= d ? a++ : 2047 >= d ? a += 2 : 55296 <= d && 57343 >= d ? (a += 4, ++c) : a += 3;\n                            }\n                            return a;\n                        }, hc = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0, ic = (b, a, c)=>{\n                            var d = a + c;\n                            for(c = a; b[c] && !(c >= d);)++c;\n                            if (16 < c - a && b.buffer && hc) return hc.decode(b.subarray(a, c));\n                            for(d = \"\"; a < c;){\n                                var e = b[a++];\n                                if (e & 128) {\n                                    var f = b[a++] & 63;\n                                    if (192 == (e & 224)) d += String.fromCharCode((e & 31) << 6 | f);\n                                    else {\n                                        var m = b[a++] & 63;\n                                        e = 224 == (e & 240) ? (e & 15) << 12 | f << 6 | m : (e & 7) << 18 | f << 12 | m << 6 | b[a++] & 63;\n                                        65536 > e ? d += String.fromCharCode(e) : (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023));\n                                    }\n                                } else d += String.fromCharCode(e);\n                            }\n                            return d;\n                        }, jc = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf-16le\") : void 0, lc = (b, a)=>{\n                            var c = b >> 1;\n                            for(var d = c + a / 2; !(c >= d) && Ea[c];)++c;\n                            c <<= 1;\n                            if (32 < c - b && jc) return jc.decode(L.subarray(b, c));\n                            c = \"\";\n                            for(d = 0; !(d >= a / 2); ++d){\n                                var e = Da[b + 2 * d >> 1];\n                                if (0 == e) break;\n                                c += String.fromCharCode(e);\n                            }\n                            return c;\n                        }, mc = (b, a, c)=>{\n                            void 0 === c && (c = 2147483647);\n                            if (2 > c) return 0;\n                            c -= 2;\n                            var d = a;\n                            c = c < 2 * b.length ? c / 2 : b.length;\n                            for(var e = 0; e < c; ++e)Da[a >> 1] = b.charCodeAt(e), a += 2;\n                            Da[a >> 1] = 0;\n                            return a - d;\n                        }, nc = (b)=>2 * b.length, oc = (b, a)=>{\n                            for(var c = 0, d = \"\"; !(c >= a / 4);){\n                                var e = M[b + 4 * c >> 2];\n                                if (0 == e) break;\n                                ++c;\n                                65536 <= e ? (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023)) : d += String.fromCharCode(e);\n                            }\n                            return d;\n                        }, pc = (b, a, c)=>{\n                            void 0 === c && (c = 2147483647);\n                            if (4 > c) return 0;\n                            var d = a;\n                            c = d + c - 4;\n                            for(var e = 0; e < b.length; ++e){\n                                var f = b.charCodeAt(e);\n                                if (55296 <= f && 57343 >= f) {\n                                    var m = b.charCodeAt(++e);\n                                    f = 65536 + ((f & 1023) << 10) | m & 1023;\n                                }\n                                M[a >> 2] = f;\n                                a += 4;\n                                if (a + 4 > c) break;\n                            }\n                            M[a >> 2] = 0;\n                            return a - d;\n                        }, qc = (b)=>{\n                            for(var a = 0, c = 0; c < b.length; ++c){\n                                var d = b.charCodeAt(c);\n                                55296 <= d && 57343 >= d && ++c;\n                                a += 4;\n                            }\n                            return a;\n                        }, rc = {};\n                        function sc(b) {\n                            var a = rc[b];\n                            return void 0 === a ? V(b) : a;\n                        }\n                        var tc = [];\n                        function uc(b) {\n                            var a = tc.length;\n                            tc.push(b);\n                            return a;\n                        }\n                        function vc(b, a) {\n                            for(var c = Array(b), d = 0; d < b; ++d)c[d] = ob(O[a + 4 * d >> 2], \"parameter \" + d);\n                            return c;\n                        }\n                        var wc = [], xc = {}, zc = ()=>{\n                            if (!yc) {\n                                var b = {\n                                    USER: \"web_user\",\n                                    LOGNAME: \"web_user\",\n                                    PATH: \"/\",\n                                    PWD: \"/\",\n                                    HOME: \"/home/web_user\",\n                                    LANG: (\"object\" == typeof navigator && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\",\n                                    _: pa || \"./this.program\"\n                                }, a;\n                                for(a in xc)void 0 === xc[a] ? delete b[a] : b[a] = xc[a];\n                                var c = [];\n                                for(a in b)c.push(`${a}=${b[a]}`);\n                                yc = c;\n                            }\n                            return yc;\n                        }, yc, Ac = [\n                            null,\n                            [],\n                            []\n                        ], Bc = (b)=>0 === b % 4 && (0 !== b % 100 || 0 === b % 400), Cc = [\n                            31,\n                            29,\n                            31,\n                            30,\n                            31,\n                            30,\n                            31,\n                            31,\n                            30,\n                            31,\n                            30,\n                            31\n                        ], Dc = [\n                            31,\n                            28,\n                            31,\n                            30,\n                            31,\n                            30,\n                            31,\n                            31,\n                            30,\n                            31,\n                            30,\n                            31\n                        ];\n                        function Ec(b) {\n                            var a = Array(gc(b) + 1);\n                            fc(b, a, 0, a.length);\n                            return a;\n                        }\n                        var Fc = (b, a, c, d)=>{\n                            function e(g, n, w) {\n                                for(g = \"number\" == typeof g ? g.toString() : g || \"\"; g.length < n;)g = w[0] + g;\n                                return g;\n                            }\n                            function f(g, n) {\n                                return e(g, n, \"0\");\n                            }\n                            function m(g, n) {\n                                function w(x) {\n                                    return 0 > x ? -1 : 0 < x ? 1 : 0;\n                                }\n                                var H;\n                                0 === (H = w(g.getFullYear() - n.getFullYear())) && 0 === (H = w(g.getMonth() - n.getMonth())) && (H = w(g.getDate() - n.getDate()));\n                                return H;\n                            }\n                            function l(g) {\n                                switch(g.getDay()){\n                                    case 0:\n                                        return new Date(g.getFullYear() - 1, 11, 29);\n                                    case 1:\n                                        return g;\n                                    case 2:\n                                        return new Date(g.getFullYear(), 0, 3);\n                                    case 3:\n                                        return new Date(g.getFullYear(), 0, 2);\n                                    case 4:\n                                        return new Date(g.getFullYear(), 0, 1);\n                                    case 5:\n                                        return new Date(g.getFullYear() - 1, 11, 31);\n                                    case 6:\n                                        return new Date(g.getFullYear() - 1, 11, 30);\n                                }\n                            }\n                            function p(g) {\n                                var n = g.ta;\n                                for(g = new Date(new Date(g.ua + 1900, 0, 1).getTime()); 0 < n;){\n                                    var w = g.getMonth(), H = (Bc(g.getFullYear()) ? Cc : Dc)[w];\n                                    if (n > H - g.getDate()) n -= H - g.getDate() + 1, g.setDate(1), 11 > w ? g.setMonth(w + 1) : (g.setMonth(0), g.setFullYear(g.getFullYear() + 1));\n                                    else {\n                                        g.setDate(g.getDate() + n);\n                                        break;\n                                    }\n                                }\n                                w = new Date(g.getFullYear() + 1, 0, 4);\n                                n = l(new Date(g.getFullYear(), 0, 4));\n                                w = l(w);\n                                return 0 >= m(n, g) ? 0 >= m(w, g) ? g.getFullYear() + 1 : g.getFullYear() : g.getFullYear() - 1;\n                            }\n                            var k = M[d + 40 >> 2];\n                            d = {\n                                Yb: M[d >> 2],\n                                Xb: M[d + 4 >> 2],\n                                Ia: M[d + 8 >> 2],\n                                Qa: M[d + 12 >> 2],\n                                Ja: M[d + 16 >> 2],\n                                ua: M[d + 20 >> 2],\n                                na: M[d + 24 >> 2],\n                                ta: M[d + 28 >> 2],\n                                bc: M[d + 32 >> 2],\n                                Wb: M[d + 36 >> 2],\n                                Zb: k ? k ? ic(L, k) : \"\" : \"\"\n                            };\n                            c = c ? ic(L, c) : \"\";\n                            k = {\n                                \"%c\": \"%a %b %d %H:%M:%S %Y\",\n                                \"%D\": \"%m/%d/%y\",\n                                \"%F\": \"%Y-%m-%d\",\n                                \"%h\": \"%b\",\n                                \"%r\": \"%I:%M:%S %p\",\n                                \"%R\": \"%H:%M\",\n                                \"%T\": \"%H:%M:%S\",\n                                \"%x\": \"%m/%d/%y\",\n                                \"%X\": \"%H:%M:%S\",\n                                \"%Ec\": \"%c\",\n                                \"%EC\": \"%C\",\n                                \"%Ex\": \"%m/%d/%y\",\n                                \"%EX\": \"%H:%M:%S\",\n                                \"%Ey\": \"%y\",\n                                \"%EY\": \"%Y\",\n                                \"%Od\": \"%d\",\n                                \"%Oe\": \"%e\",\n                                \"%OH\": \"%H\",\n                                \"%OI\": \"%I\",\n                                \"%Om\": \"%m\",\n                                \"%OM\": \"%M\",\n                                \"%OS\": \"%S\",\n                                \"%Ou\": \"%u\",\n                                \"%OU\": \"%U\",\n                                \"%OV\": \"%V\",\n                                \"%Ow\": \"%w\",\n                                \"%OW\": \"%W\",\n                                \"%Oy\": \"%y\"\n                            };\n                            for(var r in k)c = c.replace(new RegExp(r, \"g\"), k[r]);\n                            var u = \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"), t = \"January February March April May June July August September October November December\".split(\" \");\n                            k = {\n                                \"%a\": (g)=>u[g.na].substring(0, 3),\n                                \"%A\": (g)=>u[g.na],\n                                \"%b\": (g)=>t[g.Ja].substring(0, 3),\n                                \"%B\": (g)=>t[g.Ja],\n                                \"%C\": (g)=>f((g.ua + 1900) / 100 | 0, 2),\n                                \"%d\": (g)=>f(g.Qa, 2),\n                                \"%e\": (g)=>e(g.Qa, 2, \" \"),\n                                \"%g\": (g)=>p(g).toString().substring(2),\n                                \"%G\": (g)=>p(g),\n                                \"%H\": (g)=>f(g.Ia, 2),\n                                \"%I\": (g)=>{\n                                    g = g.Ia;\n                                    0 == g ? g = 12 : 12 < g && (g -= 12);\n                                    return f(g, 2);\n                                },\n                                \"%j\": (g)=>{\n                                    for(var n = 0, w = 0; w <= g.Ja - 1; n += (Bc(g.ua + 1900) ? Cc : Dc)[w++]);\n                                    return f(g.Qa + n, 3);\n                                },\n                                \"%m\": (g)=>f(g.Ja + 1, 2),\n                                \"%M\": (g)=>f(g.Xb, 2),\n                                \"%n\": ()=>\"\\n\",\n                                \"%p\": (g)=>0 <= g.Ia && 12 > g.Ia ? \"AM\" : \"PM\",\n                                \"%S\": (g)=>f(g.Yb, 2),\n                                \"%t\": ()=>\"\t\",\n                                \"%u\": (g)=>g.na || 7,\n                                \"%U\": (g)=>f(Math.floor((g.ta + 7 - g.na) / 7), 2),\n                                \"%V\": (g)=>{\n                                    var n = Math.floor((g.ta + 7 - (g.na + 6) % 7) / 7);\n                                    2 >= (g.na + 371 - g.ta - 2) % 7 && n++;\n                                    if (n) 53 == n && (w = (g.na + 371 - g.ta) % 7, 4 == w || 3 == w && Bc(g.ua) || (n = 1));\n                                    else {\n                                        n = 52;\n                                        var w = (g.na + 7 - g.ta - 1) % 7;\n                                        (4 == w || 5 == w && Bc(g.ua % 400 - 1)) && n++;\n                                    }\n                                    return f(n, 2);\n                                },\n                                \"%w\": (g)=>g.na,\n                                \"%W\": (g)=>f(Math.floor((g.ta + 7 - (g.na + 6) % 7) / 7), 2),\n                                \"%y\": (g)=>(g.ua + 1900).toString().substring(2),\n                                \"%Y\": (g)=>g.ua + 1900,\n                                \"%z\": (g)=>{\n                                    g = g.Wb;\n                                    var n = 0 <= g;\n                                    g = Math.abs(g) / 60;\n                                    return (n ? \"+\" : \"-\") + String(\"0000\" + (g / 60 * 100 + g % 60)).slice(-4);\n                                },\n                                \"%Z\": (g)=>g.Zb,\n                                \"%%\": ()=>\"%\"\n                            };\n                            c = c.replace(/%%/g, \"\\0\\0\");\n                            for(r in k)c.includes(r) && (c = c.replace(new RegExp(r, \"g\"), k[r](d)));\n                            c = c.replace(/\\0\\0/g, \"%\");\n                            r = Ec(c);\n                            if (r.length > a) return 0;\n                            Ca.set(r, b);\n                            return r.length - 1;\n                        };\n                        Object.assign(ab.prototype, {\n                            get (b) {\n                                return this.qa[b];\n                            },\n                            has (b) {\n                                return void 0 !== this.qa[b];\n                            },\n                            tb (b) {\n                                var a = this.bb.pop() || this.qa.length;\n                                this.qa[a] = b;\n                                return a;\n                            },\n                            wb (b) {\n                                this.qa[b] = void 0;\n                                this.bb.push(b);\n                            }\n                        });\n                        bb = h.BindingError = class extends Error {\n                            constructor(b){\n                                super(b);\n                                this.name = \"BindingError\";\n                            }\n                        };\n                        P.qa.push({\n                            value: void 0\n                        }, {\n                            value: null\n                        }, {\n                            value: !0\n                        }, {\n                            value: !1\n                        });\n                        P.Xa = P.qa.length;\n                        h.count_emval_handles = function() {\n                            for(var b = 0, a = P.Xa; a < P.qa.length; ++a)void 0 !== P.qa[a] && ++b;\n                            return b;\n                        };\n                        db = h.PureVirtualError = cb(\"PureVirtualError\");\n                        for(var Gc = Array(256), Hc = 0; 256 > Hc; ++Hc)Gc[Hc] = String.fromCharCode(Hc);\n                        eb = Gc;\n                        h.getInheritedInstanceCount = function() {\n                            return Object.keys(ib).length;\n                        };\n                        h.getLiveInheritedInstances = function() {\n                            var b = [], a;\n                            for(a in ib)ib.hasOwnProperty(a) && b.push(ib[a]);\n                            return b;\n                        };\n                        h.flushPendingDeletes = gb;\n                        h.setDelayFunction = function(b) {\n                            hb = b;\n                            fb.length && hb && hb(gb);\n                        };\n                        zb = h.InternalError = class extends Error {\n                            constructor(b){\n                                super(b);\n                                this.name = \"InternalError\";\n                            }\n                        };\n                        Lb.prototype.isAliasOf = function(b) {\n                            if (!(this instanceof Lb && b instanceof Lb)) return !1;\n                            var a = this.ba.ea.ca, c = this.ba.da, d = b.ba.ea.ca;\n                            for(b = b.ba.da; a.fa;)c = a.Ba(c), a = a.fa;\n                            for(; d.fa;)b = d.Ba(b), d = d.fa;\n                            return a === d && c === b;\n                        };\n                        Lb.prototype.clone = function() {\n                            this.ba.da || Kb(this);\n                            if (this.ba.ya) return this.ba.count.value += 1, this;\n                            var b = Cb, a = Object, c = a.create, d = Object.getPrototypeOf(this), e = this.ba;\n                            b = b(c.call(a, d, {\n                                ba: {\n                                    value: {\n                                        count: e.count,\n                                        wa: e.wa,\n                                        ya: e.ya,\n                                        da: e.da,\n                                        ea: e.ea,\n                                        ia: e.ia,\n                                        la: e.la\n                                    }\n                                }\n                            }));\n                            b.ba.count.value += 1;\n                            b.ba.wa = !1;\n                            return b;\n                        };\n                        Lb.prototype[\"delete\"] = function() {\n                            this.ba.da || Kb(this);\n                            this.ba.wa && !this.ba.ya && R(\"Object already scheduled for deletion\");\n                            pb(this);\n                            rb(this.ba);\n                            this.ba.ya || (this.ba.ia = void 0, this.ba.da = void 0);\n                        };\n                        Lb.prototype.isDeleted = function() {\n                            return !this.ba.da;\n                        };\n                        Lb.prototype.deleteLater = function() {\n                            this.ba.da || Kb(this);\n                            this.ba.wa && !this.ba.ya && R(\"Object already scheduled for deletion\");\n                            fb.push(this);\n                            1 === fb.length && hb && hb(gb);\n                            this.ba.wa = !0;\n                            return this;\n                        };\n                        Ub.prototype.Fb = function(b) {\n                            this.hb && (b = this.hb(b));\n                            return b;\n                        };\n                        Ub.prototype.Ya = function(b) {\n                            this.ra && this.ra(b);\n                        };\n                        Ub.prototype.argPackAdvance = 8;\n                        Ub.prototype.readValueFromPointer = Fb;\n                        Ub.prototype.deleteObject = function(b) {\n                            if (null !== b) b[\"delete\"]();\n                        };\n                        Ub.prototype.fromWireType = function(b) {\n                            function a() {\n                                return this.Ea ? Bb(this.ca.ma, {\n                                    ea: this.Qb,\n                                    da: c,\n                                    la: this,\n                                    ia: b\n                                }) : Bb(this.ca.ma, {\n                                    ea: this,\n                                    da: b\n                                });\n                            }\n                            var c = this.Fb(b);\n                            if (!c) return this.Ya(b), null;\n                            var d = yb(this.ca, c);\n                            if (void 0 !== d) {\n                                if (0 === d.ba.count.value) return d.ba.da = c, d.ba.ia = b, d.clone();\n                                d = d.clone();\n                                this.Ya(b);\n                                return d;\n                            }\n                            d = this.ca.Eb(c);\n                            d = xb[d];\n                            if (!d) return a.call(this);\n                            d = this.Da ? d.ub : d.pointerType;\n                            var e = wb(c, this.ca, d.ca);\n                            return null === e ? a.call(this) : this.Ea ? Bb(d.ca.ma, {\n                                ea: d,\n                                da: e,\n                                la: this,\n                                ia: b\n                            }) : Bb(d.ca.ma, {\n                                ea: d,\n                                da: e\n                            });\n                        };\n                        Xb = h.UnboundTypeError = cb(\"UnboundTypeError\");\n                        var Jc = {\n                            N: function(b, a, c) {\n                                b = V(b);\n                                a = ob(a, \"wrapper\");\n                                c = S(c);\n                                var d = [].slice, e = a.ca, f = e.ma, m = e.fa.ma, l = e.fa.constructor;\n                                b = $a(b, function() {\n                                    e.fa.gb.forEach((function(k) {\n                                        if (this[k] === m[k]) throw new db(`Pure virtual function ${k} must be implemented in JavaScript`);\n                                    }).bind(this));\n                                    Object.defineProperty(this, \"__parent\", {\n                                        value: f\n                                    });\n                                    this.__construct.apply(this, d.call(arguments));\n                                });\n                                f.__construct = function() {\n                                    this === f && R(\"Pass correct 'this' to __construct\");\n                                    var k = l.implement.apply(void 0, [\n                                        this\n                                    ].concat(d.call(arguments)));\n                                    pb(k);\n                                    var r = k.ba;\n                                    k.notifyOnDestruction();\n                                    r.ya = !0;\n                                    Object.defineProperties(this, {\n                                        ba: {\n                                            value: r\n                                        }\n                                    });\n                                    Cb(this);\n                                    k = r.da;\n                                    k = jb(e, k);\n                                    ib.hasOwnProperty(k) ? R(`Tried to register registered instance: ${k}`) : ib[k] = this;\n                                };\n                                f.__destruct = function() {\n                                    this === f && R(\"Pass correct 'this' to __destruct\");\n                                    pb(this);\n                                    var k = this.ba.da;\n                                    k = jb(e, k);\n                                    ib.hasOwnProperty(k) ? delete ib[k] : R(`Tried to unregister unregistered instance: ${k}`);\n                                };\n                                b.prototype = Object.create(f);\n                                for(var p in c)b.prototype[p] = c[p];\n                                return U(b);\n                            },\n                            O: function(b) {\n                                var a = Db[b];\n                                delete Db[b];\n                                var c = a.Oa, d = a.ra, e = a.ab, f = e.map((m)=>m.Ib).concat(e.map((m)=>m.Tb));\n                                X([\n                                    b\n                                ], f, (m)=>{\n                                    var l = {};\n                                    e.forEach((p, k)=>{\n                                        var r = m[k], u = p.Gb, t = p.Hb, g = m[k + e.length], n = p.Sb, w = p.Ub;\n                                        l[p.Cb] = {\n                                            read: (H)=>r.fromWireType(u(t, H)),\n                                            write: (H, x)=>{\n                                                var A = [];\n                                                n(w, H, g.toWireType(A, x));\n                                                Eb(A);\n                                            }\n                                        };\n                                    });\n                                    return [\n                                        {\n                                            name: a.name,\n                                            fromWireType: function(p) {\n                                                var k = {}, r;\n                                                for(r in l)k[r] = l[r].read(p);\n                                                d(p);\n                                                return k;\n                                            },\n                                            toWireType: function(p, k) {\n                                                for(var r in l)if (!(r in k)) throw new TypeError(`Missing field: \"${r}\"`);\n                                                var u = c();\n                                                for(r in l)l[r].write(u, k[r]);\n                                                null !== p && p.push(d, u);\n                                                return u;\n                                            },\n                                            argPackAdvance: 8,\n                                            readValueFromPointer: Fb,\n                                            ka: d\n                                        }\n                                    ];\n                                });\n                            },\n                            C: function() {},\n                            K: function(b, a, c, d, e) {\n                                var f = Ib(c);\n                                a = V(a);\n                                Y(b, {\n                                    name: a,\n                                    fromWireType: function(m) {\n                                        return !!m;\n                                    },\n                                    toWireType: function(m, l) {\n                                        return l ? d : e;\n                                    },\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: function(m) {\n                                        if (1 === c) var l = Ca;\n                                        else if (2 === c) l = Da;\n                                        else if (4 === c) l = M;\n                                        else throw new TypeError(\"Unknown boolean type size: \" + a);\n                                        return this.fromWireType(l[m >> f]);\n                                    },\n                                    ka: null\n                                });\n                            },\n                            f: function(b, a, c, d, e, f, m, l, p, k, r, u, t) {\n                                r = V(r);\n                                f = Z(e, f);\n                                l && (l = Z(m, l));\n                                k && (k = Z(p, k));\n                                t = Z(u, t);\n                                var g = Ya(r);\n                                Nb(g, function() {\n                                    Yb(`Cannot construct ${r} due to unbound types`, [\n                                        d\n                                    ]);\n                                });\n                                X([\n                                    b,\n                                    a,\n                                    c\n                                ], d ? [\n                                    d\n                                ] : [], function(n) {\n                                    n = n[0];\n                                    if (d) {\n                                        var w = n.ca;\n                                        var H = w.ma;\n                                    } else H = Lb.prototype;\n                                    n = $a(g, function() {\n                                        if (Object.getPrototypeOf(this) !== x) throw new bb(\"Use 'new' to construct \" + r);\n                                        if (void 0 === A.sa) throw new bb(r + \" has no accessible constructor\");\n                                        var Q = A.sa[arguments.length];\n                                        if (void 0 === Q) throw new bb(`Tried to invoke ctor of ${r} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(A.sa).toString()}) parameters instead!`);\n                                        return Q.apply(this, arguments);\n                                    });\n                                    var x = Object.create(H, {\n                                        constructor: {\n                                            value: n\n                                        }\n                                    });\n                                    n.prototype = x;\n                                    var A = new Ob(r, n, x, t, w, f, l, k);\n                                    A.fa && (void 0 === A.fa.Ca && (A.fa.Ca = []), A.fa.Ca.push(A));\n                                    w = new Ub(r, A, !0, !1);\n                                    H = new Ub(r + \"*\", A, !1, !1);\n                                    var J = new Ub(r + \" const*\", A, !1, !0);\n                                    xb[b] = {\n                                        pointerType: H,\n                                        ub: J\n                                    };\n                                    Vb(g, n);\n                                    return [\n                                        w,\n                                        H,\n                                        J\n                                    ];\n                                });\n                            },\n                            j: function(b, a, c, d, e, f, m) {\n                                var l = $b(c, d);\n                                a = V(a);\n                                f = Z(e, f);\n                                X([], [\n                                    b\n                                ], function(p) {\n                                    function k() {\n                                        Yb(`Cannot call ${r} due to unbound types`, l);\n                                    }\n                                    p = p[0];\n                                    var r = `${p.name}.${a}`;\n                                    a.startsWith(\"@@\") && (a = Symbol[a.substring(2)]);\n                                    var u = p.ca.constructor;\n                                    void 0 === u[a] ? (k.va = c - 1, u[a] = k) : (Mb(u, a, r), u[a].ga[c - 1] = k);\n                                    X([], l, function(t) {\n                                        t = Zb(r, [\n                                            t[0],\n                                            null\n                                        ].concat(t.slice(1)), null, f, m);\n                                        void 0 === u[a].ga ? (t.va = c - 1, u[a] = t) : u[a].ga[c - 1] = t;\n                                        if (p.ca.Ca) for (const g of p.ca.Ca)g.constructor.hasOwnProperty(a) || (g.constructor[a] = t);\n                                        return [];\n                                    });\n                                    return [];\n                                });\n                            },\n                            x: function(b, a, c, d, e, f, m, l) {\n                                a = V(a);\n                                f = Z(e, f);\n                                X([], [\n                                    b\n                                ], function(p) {\n                                    p = p[0];\n                                    var k = `${p.name}.${a}`, r = {\n                                        get () {\n                                            Yb(`Cannot access ${k} due to unbound types`, [\n                                                c\n                                            ]);\n                                        },\n                                        enumerable: !0,\n                                        configurable: !0\n                                    };\n                                    r.set = l ? ()=>{\n                                        Yb(`Cannot access ${k} due to unbound types`, [\n                                            c\n                                        ]);\n                                    } : ()=>{\n                                        R(`${k} is a read-only property`);\n                                    };\n                                    Object.defineProperty(p.ca.constructor, a, r);\n                                    X([], [\n                                        c\n                                    ], function(u) {\n                                        u = u[0];\n                                        var t = {\n                                            get () {\n                                                return u.fromWireType(f(d));\n                                            },\n                                            enumerable: !0\n                                        };\n                                        l && (l = Z(m, l), t.set = (g)=>{\n                                            var n = [];\n                                            l(d, u.toWireType(n, g));\n                                            Eb(n);\n                                        });\n                                        Object.defineProperty(p.ca.constructor, a, t);\n                                        return [];\n                                    });\n                                    return [];\n                                });\n                            },\n                            s: function(b, a, c, d, e, f) {\n                                var m = $b(a, c);\n                                e = Z(d, e);\n                                X([], [\n                                    b\n                                ], function(l) {\n                                    l = l[0];\n                                    var p = `constructor ${l.name}`;\n                                    void 0 === l.ca.sa && (l.ca.sa = []);\n                                    if (void 0 !== l.ca.sa[a - 1]) throw new bb(`Cannot register multiple constructors with identical number of parameters (${a - 1}) for class '${l.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\n                                    l.ca.sa[a - 1] = ()=>{\n                                        Yb(`Cannot construct ${l.name} due to unbound types`, m);\n                                    };\n                                    X([], m, function(k) {\n                                        k.splice(1, 0, null);\n                                        l.ca.sa[a - 1] = Zb(p, k, null, e, f);\n                                        return [];\n                                    });\n                                    return [];\n                                });\n                            },\n                            a: function(b, a, c, d, e, f, m, l) {\n                                var p = $b(c, d);\n                                a = V(a);\n                                f = Z(e, f);\n                                X([], [\n                                    b\n                                ], function(k) {\n                                    function r() {\n                                        Yb(`Cannot call ${u} due to unbound types`, p);\n                                    }\n                                    k = k[0];\n                                    var u = `${k.name}.${a}`;\n                                    a.startsWith(\"@@\") && (a = Symbol[a.substring(2)]);\n                                    l && k.ca.gb.push(a);\n                                    var t = k.ca.ma, g = t[a];\n                                    void 0 === g || void 0 === g.ga && g.className !== k.name && g.va === c - 2 ? (r.va = c - 2, r.className = k.name, t[a] = r) : (Mb(t, a, u), t[a].ga[c - 2] = r);\n                                    X([], p, function(n) {\n                                        n = Zb(u, n, k, f, m);\n                                        void 0 === t[a].ga ? (n.va = c - 2, t[a] = n) : t[a].ga[c - 2] = n;\n                                        return [];\n                                    });\n                                    return [];\n                                });\n                            },\n                            e: function(b, a, c, d, e, f, m, l, p, k) {\n                                a = V(a);\n                                e = Z(d, e);\n                                X([], [\n                                    b\n                                ], function(r) {\n                                    r = r[0];\n                                    var u = `${r.name}.${a}`, t = {\n                                        get () {\n                                            Yb(`Cannot access ${u} due to unbound types`, [\n                                                c,\n                                                m\n                                            ]);\n                                        },\n                                        enumerable: !0,\n                                        configurable: !0\n                                    };\n                                    t.set = p ? ()=>{\n                                        Yb(`Cannot access ${u} due to unbound types`, [\n                                            c,\n                                            m\n                                        ]);\n                                    } : ()=>{\n                                        R(u + \" is a read-only property\");\n                                    };\n                                    Object.defineProperty(r.ca.ma, a, t);\n                                    X([], p ? [\n                                        c,\n                                        m\n                                    ] : [\n                                        c\n                                    ], function(g) {\n                                        var n = g[0], w = {\n                                            get () {\n                                                var x = ac(this, r, u + \" getter\");\n                                                return n.fromWireType(e(f, x));\n                                            },\n                                            enumerable: !0\n                                        };\n                                        if (p) {\n                                            p = Z(l, p);\n                                            var H = g[1];\n                                            w.set = function(x) {\n                                                var A = ac(this, r, u + \" setter\"), J = [];\n                                                p(k, A, H.toWireType(J, x));\n                                                Eb(J);\n                                            };\n                                        }\n                                        Object.defineProperty(r.ca.ma, a, w);\n                                        return [];\n                                    });\n                                    return [];\n                                });\n                            },\n                            J: function(b, a) {\n                                a = V(a);\n                                Y(b, {\n                                    name: a,\n                                    fromWireType: function(c) {\n                                        var d = S(c);\n                                        bc(c);\n                                        return d;\n                                    },\n                                    toWireType: function(c, d) {\n                                        return U(d);\n                                    },\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: Fb,\n                                    ka: null\n                                });\n                            },\n                            p: function(b, a, c, d) {\n                                function e() {}\n                                c = Ib(c);\n                                a = V(a);\n                                e.values = {};\n                                Y(b, {\n                                    name: a,\n                                    constructor: e,\n                                    fromWireType: function(f) {\n                                        return this.constructor.values[f];\n                                    },\n                                    toWireType: function(f, m) {\n                                        return m.value;\n                                    },\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: cc(a, c, d),\n                                    ka: null\n                                });\n                                Nb(a, e);\n                            },\n                            d: function(b, a, c) {\n                                var d = ob(b, \"enum\");\n                                a = V(a);\n                                b = d.constructor;\n                                d = Object.create(d.constructor.prototype, {\n                                    value: {\n                                        value: c\n                                    },\n                                    constructor: {\n                                        value: $a(`${d.name}_${a}`, function() {})\n                                    }\n                                });\n                                b.values[c] = d;\n                                b[a] = d;\n                            },\n                            y: function(b, a, c) {\n                                c = Ib(c);\n                                a = V(a);\n                                Y(b, {\n                                    name: a,\n                                    fromWireType: function(d) {\n                                        return d;\n                                    },\n                                    toWireType: function(d, e) {\n                                        return e;\n                                    },\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: dc(a, c),\n                                    ka: null\n                                });\n                            },\n                            m: function(b, a, c, d, e, f) {\n                                var m = $b(a, c);\n                                b = V(b);\n                                e = Z(d, e);\n                                Nb(b, function() {\n                                    Yb(`Cannot call ${b} due to unbound types`, m);\n                                }, a - 1);\n                                X([], m, function(l) {\n                                    Vb(b, Zb(b, [\n                                        l[0],\n                                        null\n                                    ].concat(l.slice(1)), null, e, f), a - 1);\n                                    return [];\n                                });\n                            },\n                            l: function(b, a, c, d, e) {\n                                a = V(a);\n                                -1 === e && (e = 4294967295);\n                                e = Ib(c);\n                                var f = (l)=>l;\n                                if (0 === d) {\n                                    var m = 32 - 8 * c;\n                                    f = (l)=>l << m >>> m;\n                                }\n                                c = a.includes(\"unsigned\") ? function(l, p) {\n                                    return p >>> 0;\n                                } : function(l, p) {\n                                    return p;\n                                };\n                                Y(b, {\n                                    name: a,\n                                    fromWireType: f,\n                                    toWireType: c,\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: ec(a, e, 0 !== d),\n                                    ka: null\n                                });\n                            },\n                            g: function(b, a, c) {\n                                function d(f) {\n                                    f >>= 2;\n                                    var m = O;\n                                    return new e(m.buffer, m[f + 1], m[f]);\n                                }\n                                var e = [\n                                    Int8Array,\n                                    Uint8Array,\n                                    Int16Array,\n                                    Uint16Array,\n                                    Int32Array,\n                                    Uint32Array,\n                                    Float32Array,\n                                    Float64Array\n                                ][a];\n                                c = V(c);\n                                Y(b, {\n                                    name: c,\n                                    fromWireType: d,\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: d\n                                }, {\n                                    Jb: !0\n                                });\n                            },\n                            z: function(b, a) {\n                                a = V(a);\n                                var c = \"std::string\" === a;\n                                Y(b, {\n                                    name: a,\n                                    fromWireType: function(d) {\n                                        var e = O[d >> 2], f = d + 4;\n                                        if (c) for(var m = f, l = 0; l <= e; ++l){\n                                            var p = f + l;\n                                            if (l == e || 0 == L[p]) {\n                                                m = m ? ic(L, m, p - m) : \"\";\n                                                if (void 0 === k) var k = m;\n                                                else k += String.fromCharCode(0), k += m;\n                                                m = p + 1;\n                                            }\n                                        }\n                                        else {\n                                            k = Array(e);\n                                            for(l = 0; l < e; ++l)k[l] = String.fromCharCode(L[f + l]);\n                                            k = k.join(\"\");\n                                        }\n                                        nb(d);\n                                        return k;\n                                    },\n                                    toWireType: function(d, e) {\n                                        e instanceof ArrayBuffer && (e = new Uint8Array(e));\n                                        var f = \"string\" == typeof e;\n                                        f || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Int8Array || R(\"Cannot pass non-string to std::string\");\n                                        var m = c && f ? gc(e) : e.length;\n                                        var l = Ic(4 + m + 1), p = l + 4;\n                                        O[l >> 2] = m;\n                                        if (c && f) fc(e, L, p, m + 1);\n                                        else if (f) for(f = 0; f < m; ++f){\n                                            var k = e.charCodeAt(f);\n                                            255 < k && (nb(p), R(\"String has UTF-16 code units that do not fit in 8 bits\"));\n                                            L[p + f] = k;\n                                        }\n                                        else for(f = 0; f < m; ++f)L[p + f] = e[f];\n                                        null !== d && d.push(nb, l);\n                                        return l;\n                                    },\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: Fb,\n                                    ka: function(d) {\n                                        nb(d);\n                                    }\n                                });\n                            },\n                            u: function(b, a, c) {\n                                c = V(c);\n                                if (2 === a) {\n                                    var d = lc;\n                                    var e = mc;\n                                    var f = nc;\n                                    var m = ()=>Ea;\n                                    var l = 1;\n                                } else 4 === a && (d = oc, e = pc, f = qc, m = ()=>O, l = 2);\n                                Y(b, {\n                                    name: c,\n                                    fromWireType: function(p) {\n                                        for(var k = O[p >> 2], r = m(), u, t = p + 4, g = 0; g <= k; ++g){\n                                            var n = p + 4 + g * a;\n                                            if (g == k || 0 == r[n >> l]) t = d(t, n - t), void 0 === u ? u = t : (u += String.fromCharCode(0), u += t), t = n + a;\n                                        }\n                                        nb(p);\n                                        return u;\n                                    },\n                                    toWireType: function(p, k) {\n                                        \"string\" != typeof k && R(`Cannot pass non-string to C++ string type ${c}`);\n                                        var r = f(k), u = Ic(4 + r + a);\n                                        O[u >> 2] = r >> l;\n                                        e(k, u + 4, r + a);\n                                        null !== p && p.push(nb, u);\n                                        return u;\n                                    },\n                                    argPackAdvance: 8,\n                                    readValueFromPointer: Fb,\n                                    ka: function(p) {\n                                        nb(p);\n                                    }\n                                });\n                            },\n                            Q: function(b, a, c, d, e, f) {\n                                Db[b] = {\n                                    name: V(a),\n                                    Oa: Z(c, d),\n                                    ra: Z(e, f),\n                                    ab: []\n                                };\n                            },\n                            P: function(b, a, c, d, e, f, m, l, p, k) {\n                                Db[b].ab.push({\n                                    Cb: V(a),\n                                    Ib: c,\n                                    Gb: Z(d, e),\n                                    Hb: f,\n                                    Tb: m,\n                                    Sb: Z(l, p),\n                                    Ub: k\n                                });\n                            },\n                            L: function(b, a) {\n                                a = V(a);\n                                Y(b, {\n                                    Lb: !0,\n                                    name: a,\n                                    argPackAdvance: 0,\n                                    fromWireType: function() {},\n                                    toWireType: function() {}\n                                });\n                            },\n                            v: function(b, a, c) {\n                                b = S(b);\n                                a = ob(a, \"emval::as\");\n                                var d = [], e = U(d);\n                                O[c >> 2] = e;\n                                return a.toWireType(d, b);\n                            },\n                            w: function(b, a, c, d, e) {\n                                b = tc[b];\n                                a = S(a);\n                                c = sc(c);\n                                var f = [];\n                                O[d >> 2] = U(f);\n                                return b(a, c, f, e);\n                            },\n                            i: function(b, a, c, d) {\n                                b = tc[b];\n                                a = S(a);\n                                c = sc(c);\n                                b(a, c, null, d);\n                            },\n                            c: bc,\n                            h: function(b, a) {\n                                var c = vc(b, a), d = c[0];\n                                a = d.name + \"_$\" + c.slice(1).map(function(m) {\n                                    return m.name;\n                                }).join(\"_\") + \"$\";\n                                var e = wc[a];\n                                if (void 0 !== e) return e;\n                                var f = Array(b - 1);\n                                e = uc((m, l, p, k)=>{\n                                    for(var r = 0, u = 0; u < b - 1; ++u)f[u] = c[u + 1].readValueFromPointer(k + r), r += c[u + 1].argPackAdvance;\n                                    m = m[l].apply(m, f);\n                                    for(u = 0; u < b - 1; ++u)c[u + 1].xb && c[u + 1].xb(f[u]);\n                                    if (!d.Lb) return d.toWireType(p, m);\n                                });\n                                return wc[a] = e;\n                            },\n                            t: function(b) {\n                                b = sc(b);\n                                return U(h[b]);\n                            },\n                            M: function(b, a) {\n                                b = S(b);\n                                a = S(a);\n                                return U(b[a]);\n                            },\n                            n: function(b) {\n                                4 < b && (P.get(b).ib += 1);\n                            },\n                            o: function(b) {\n                                return U(sc(b));\n                            },\n                            A: function() {\n                                return U({});\n                            },\n                            q: function(b) {\n                                var a = S(b);\n                                Eb(a);\n                                bc(b);\n                            },\n                            k: function(b, a, c) {\n                                b = S(b);\n                                a = S(a);\n                                c = S(c);\n                                b[a] = c;\n                            },\n                            r: function(b, a) {\n                                b = ob(b, \"_emval_take_value\");\n                                b = b.readValueFromPointer(a);\n                                return U(b);\n                            },\n                            b: ()=>{\n                                za(\"\");\n                            },\n                            E: (b)=>{\n                                var a = L.length;\n                                b >>>= 0;\n                                if (2147483648 < b) return !1;\n                                for(var c = 1; 4 >= c; c *= 2){\n                                    var d = a * (1 + .2 / c);\n                                    d = Math.min(d, b + 100663296);\n                                    var e = Math;\n                                    d = Math.max(b, d);\n                                    a: {\n                                        e = e.min.call(e, 2147483648, d + (65536 - d % 65536) % 65536) - Aa.buffer.byteLength + 65535 >>> 16;\n                                        try {\n                                            Aa.grow(e);\n                                            Ha();\n                                            var f = 1;\n                                            break a;\n                                        } catch (m) {}\n                                        f = void 0;\n                                    }\n                                    if (f) return !0;\n                                }\n                                return !1;\n                            },\n                            F: (b, a)=>{\n                                var c = 0;\n                                zc().forEach(function(d, e) {\n                                    var f = a + c;\n                                    e = O[b + 4 * e >> 2] = f;\n                                    for(f = 0; f < d.length; ++f)Ca[e++ >> 0] = d.charCodeAt(f);\n                                    Ca[e >> 0] = 0;\n                                    c += d.length + 1;\n                                });\n                                return 0;\n                            },\n                            G: (b, a)=>{\n                                var c = zc();\n                                O[b >> 2] = c.length;\n                                var d = 0;\n                                c.forEach(function(e) {\n                                    d += e.length + 1;\n                                });\n                                O[a >> 2] = d;\n                                return 0;\n                            },\n                            H: ()=>52,\n                            B: function() {\n                                return 70;\n                            },\n                            I: (b, a, c, d)=>{\n                                for(var e = 0, f = 0; f < c; f++){\n                                    var m = O[a >> 2], l = O[a + 4 >> 2];\n                                    a += 8;\n                                    for(var p = 0; p < l; p++){\n                                        var k = L[m + p], r = Ac[b];\n                                        0 === k || 10 === k ? ((1 === b ? wa : xa)(ic(r, 0)), r.length = 0) : r.push(k);\n                                    }\n                                    e += l;\n                                }\n                                O[d >> 2] = e;\n                                return 0;\n                            },\n                            D: (b, a, c, d)=>Fc(b, a, c, d)\n                        };\n                        (function() {\n                            function b(c) {\n                                I = c = c.exports;\n                                Aa = I.R;\n                                Ha();\n                                Ia = I.X;\n                                Ka.unshift(I.S);\n                                Na--;\n                                h.monitorRunDependencies && h.monitorRunDependencies(Na);\n                                if (0 == Na && (null !== Oa && (clearInterval(Oa), Oa = null), Pa)) {\n                                    var d = Pa;\n                                    Pa = null;\n                                    d();\n                                }\n                                return c;\n                            }\n                            var a = {\n                                a: Jc\n                            };\n                            Na++;\n                            h.monitorRunDependencies && h.monitorRunDependencies(Na);\n                            if (h.instantiateWasm) try {\n                                return h.instantiateWasm(a, b);\n                            } catch (c) {\n                                xa(\"Module.instantiateWasm callback failed with error: \" + c), ca(c);\n                            }\n                            Wa(a, function(c) {\n                                b(c.instance);\n                            }).catch(ca);\n                            return {};\n                        })();\n                        var nb = (b)=>(nb = I.T)(b), Ic = (b)=>(Ic = I.U)(b), mb = (b)=>(mb = I.V)(b);\n                        h.__embind_initialize_bindings = ()=>(h.__embind_initialize_bindings = I.W)();\n                        h.dynCall_jiji = (b, a, c, d, e)=>(h.dynCall_jiji = I.Y)(b, a, c, d, e);\n                        h.dynCall_viijii = (b, a, c, d, e, f, m)=>(h.dynCall_viijii = I.Z)(b, a, c, d, e, f, m);\n                        h.dynCall_iiiiij = (b, a, c, d, e, f, m)=>(h.dynCall_iiiiij = I._)(b, a, c, d, e, f, m);\n                        h.dynCall_iiiiijj = (b, a, c, d, e, f, m, l, p)=>(h.dynCall_iiiiijj = I.$)(b, a, c, d, e, f, m, l, p);\n                        h.dynCall_iiiiiijj = (b, a, c, d, e, f, m, l, p, k)=>(h.dynCall_iiiiiijj = I.aa)(b, a, c, d, e, f, m, l, p, k);\n                        var Kc;\n                        Pa = function Lc() {\n                            Kc || Mc();\n                            Kc || (Pa = Lc);\n                        };\n                        function Mc() {\n                            function b() {\n                                if (!Kc && (Kc = !0, h.calledRun = !0, !Ba)) {\n                                    Xa(Ka);\n                                    ba(h);\n                                    if (h.onRuntimeInitialized) h.onRuntimeInitialized();\n                                    if (h.postRun) for(\"function\" == typeof h.postRun && (h.postRun = [\n                                        h.postRun\n                                    ]); h.postRun.length;){\n                                        var a = h.postRun.shift();\n                                        La.unshift(a);\n                                    }\n                                    Xa(La);\n                                }\n                            }\n                            if (!(0 < Na)) {\n                                if (h.preRun) for(\"function\" == typeof h.preRun && (h.preRun = [\n                                    h.preRun\n                                ]); h.preRun.length;)Ma();\n                                Xa(Ja);\n                                0 < Na || (h.setStatus ? (h.setStatus(\"Running...\"), setTimeout(function() {\n                                    setTimeout(function() {\n                                        h.setStatus(\"\");\n                                    }, 1);\n                                    b();\n                                }, 1)) : b());\n                            }\n                        }\n                        if (h.preInit) for(\"function\" == typeof h.preInit && (h.preInit = [\n                            h.preInit\n                        ]); 0 < h.preInit.length;)h.preInit.pop()();\n                        Mc();\n                        return moduleArg.ready;\n                    };\n                })();\n                /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = Rive;\n            /***/ },\n            /* 2 */ /***/ (module1)=>{\n                module1.exports = JSON.parse('{\"name\":\"@rive-app/canvas\",\"version\":\"2.7.0\",\"description\":\"Rive\\'s canvas based web api.\",\"main\":\"rive.js\",\"homepage\":\"https://rive.app\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/rive-app/rive-wasm/tree/master/js\"},\"keywords\":[\"rive\",\"animation\"],\"author\":\"Rive\",\"contributors\":[\"Luigi Rosso <luigi@rive.app> (https://rive.app)\",\"Maxwell Talbot <max@rive.app> (https://rive.app)\",\"Arthur Vivian <arthur@rive.app> (https://rive.app)\",\"Umberto Sonnino <umberto@rive.app> (https://rive.app)\",\"Matthew Sullivan <matt.j.sullivan@gmail.com> (mailto:matt.j.sullivan@gmail.com)\"],\"license\":\"MIT\",\"files\":[\"rive.js\",\"rive.js.map\",\"rive.wasm\",\"rive.d.ts\",\"rive_advanced.mjs.d.ts\"],\"typings\":\"rive.d.ts\",\"dependencies\":{},\"browser\":{\"fs\":false,\"path\":false}}');\n            /***/ },\n            /* 3 */ /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__)=>{\n                __webpack_require__.r(__webpack_exports__);\n                /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n                    /* harmony export */ BLANK_URL: ()=>/* reexport safe */ _sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__.BLANK_URL,\n                    /* harmony export */ registerTouchInteractions: ()=>/* reexport safe */ _registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__.registerTouchInteractions,\n                    /* harmony export */ sanitizeUrl: ()=>/* reexport safe */ _sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__.sanitizeUrl\n                });\n                /* harmony import */ var _registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n                /* harmony import */ var _sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n            /***/ },\n            /* 4 */ /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__)=>{\n                __webpack_require__.r(__webpack_exports__);\n                /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n                    /* harmony export */ registerTouchInteractions: ()=>/* binding */ registerTouchInteractions\n                });\n                var _this = undefined;\n                /**\n * Returns the clientX and clientY properties from touch or mouse events. Also\n * calls preventDefault() on the event if it is a touchstart or touchmove to prevent\n * scrolling the page on mobile devices\n * @param event - Either a TouchEvent or a MouseEvent\n * @returns - Coordinates of the clientX and clientY properties from the touch/mouse event\n */ var getClientCoordinates = function(event) {\n                    var _a, _b;\n                    if ([\n                        \"touchstart\",\n                        \"touchmove\"\n                    ].indexOf(event.type) > -1 && ((_a = event.touches) === null || _a === void 0 ? void 0 : _a.length)) {\n                        event.preventDefault();\n                        return {\n                            clientX: event.touches[0].clientX,\n                            clientY: event.touches[0].clientY\n                        };\n                    } else if (event.type === \"touchend\" && ((_b = event.changedTouches) === null || _b === void 0 ? void 0 : _b.length)) return {\n                        clientX: event.changedTouches[0].clientX,\n                        clientY: event.changedTouches[0].clientY\n                    };\n                    else return {\n                        clientX: event.clientX,\n                        clientY: event.clientY\n                    };\n                };\n                /**\n * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n * the state machine pointer move/up/down functions based on cursor interaction\n */ var registerTouchInteractions = function(_a) {\n                    var canvas = _a.canvas, artboard = _a.artboard, _b = _a.stateMachines, stateMachines = _b === void 0 ? [] : _b, renderer = _a.renderer, rive = _a.rive, fit = _a.fit, alignment = _a.alignment;\n                    if (!canvas || !stateMachines.length || !renderer || !rive || !artboard || typeof window === \"undefined\") return null;\n                    var processEventCallback = function(event) {\n                        var boundingRect = event.currentTarget.getBoundingClientRect();\n                        var _a = getClientCoordinates(event), clientX = _a.clientX, clientY = _a.clientY;\n                        if (!clientX && !clientY) return;\n                        var canvasX = clientX - boundingRect.left;\n                        var canvasY = clientY - boundingRect.top;\n                        var forwardMatrix = rive.computeAlignment(fit, alignment, {\n                            minX: 0,\n                            minY: 0,\n                            maxX: boundingRect.width,\n                            maxY: boundingRect.height\n                        }, artboard.bounds);\n                        var invertedMatrix = new rive.Mat2D();\n                        forwardMatrix.invert(invertedMatrix);\n                        var canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n                        var transformedVector = rive.mapXY(invertedMatrix, canvasCoordinatesVector);\n                        var transformedX = transformedVector.x();\n                        var transformedY = transformedVector.y();\n                        transformedVector.delete();\n                        invertedMatrix.delete();\n                        canvasCoordinatesVector.delete();\n                        forwardMatrix.delete();\n                        switch(event.type){\n                            // Pointer moving/hovering on the canvas\n                            case \"touchmove\":\n                            case \"mouseover\":\n                            case \"mouseout\":\n                            case \"mousemove\":\n                                for(var _i = 0, stateMachines_1 = stateMachines; _i < stateMachines_1.length; _i++){\n                                    var stateMachine = stateMachines_1[_i];\n                                    stateMachine.pointerMove(transformedX, transformedY);\n                                }\n                                break;\n                            // Pointer click initiated but not released yet on the canvas\n                            case \"touchstart\":\n                            case \"mousedown\":\n                                for(var _b = 0, stateMachines_2 = stateMachines; _b < stateMachines_2.length; _b++){\n                                    var stateMachine = stateMachines_2[_b];\n                                    stateMachine.pointerDown(transformedX, transformedY);\n                                }\n                                break;\n                            // Pointer click released on the canvas\n                            case \"touchend\":\n                            case \"mouseup\":\n                                for(var _c = 0, stateMachines_3 = stateMachines; _c < stateMachines_3.length; _c++){\n                                    var stateMachine = stateMachines_3[_c];\n                                    stateMachine.pointerUp(transformedX, transformedY);\n                                }\n                                break;\n                            default:\n                        }\n                    };\n                    var callback = processEventCallback.bind(_this);\n                    canvas.addEventListener(\"mouseover\", callback);\n                    canvas.addEventListener(\"mouseout\", callback);\n                    canvas.addEventListener(\"mousemove\", callback);\n                    canvas.addEventListener(\"mousedown\", callback);\n                    canvas.addEventListener(\"mouseup\", callback);\n                    canvas.addEventListener(\"touchmove\", callback);\n                    canvas.addEventListener(\"touchstart\", callback);\n                    canvas.addEventListener(\"touchend\", callback);\n                    return function() {\n                        canvas.removeEventListener(\"mouseover\", callback);\n                        canvas.removeEventListener(\"mouseout\", callback);\n                        canvas.removeEventListener(\"mousemove\", callback);\n                        canvas.removeEventListener(\"mousedown\", callback);\n                        canvas.removeEventListener(\"mouseup\", callback);\n                        canvas.removeEventListener(\"touchmove\", callback);\n                        canvas.removeEventListener(\"touchstart\", callback);\n                        canvas.removeEventListener(\"touchend\", callback);\n                    };\n                };\n            /***/ },\n            /* 5 */ /***/ (__unused_webpack_module, __webpack_exports__, __webpack_require__)=>{\n                __webpack_require__.r(__webpack_exports__);\n                /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n                    /* harmony export */ BLANK_URL: ()=>/* binding */ BLANK_URL,\n                    /* harmony export */ sanitizeUrl: ()=>/* binding */ sanitizeUrl\n                });\n                // Reference: https://github.com/braintree/sanitize-url/tree/main\n                var invalidProtocolRegex = /^([^\\w]*)(javascript|data|vbscript)/im;\n                var htmlEntitiesRegex = /&#(\\w+)(^\\w|;)?/g;\n                var htmlCtrlEntityRegex = /&(newline|tab);/gi;\n                var ctrlCharactersRegex = /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\n                var urlSchemeRegex = /^.+(:|&colon;)/gim;\n                var relativeFirstCharacters = [\n                    \".\",\n                    \"/\"\n                ];\n                var BLANK_URL = \"about:blank\";\n                function isRelativeUrlWithoutProtocol(url) {\n                    return relativeFirstCharacters.indexOf(url[0]) > -1;\n                }\n                // adapted from https://stackoverflow.com/a/29824550/2601552\n                function decodeHtmlCharacters(str) {\n                    var removedNullByte = str.replace(ctrlCharactersRegex, \"\");\n                    return removedNullByte.replace(htmlEntitiesRegex, function(match, dec) {\n                        return String.fromCharCode(dec);\n                    });\n                }\n                function sanitizeUrl(url) {\n                    if (!url) return BLANK_URL;\n                    var sanitizedUrl = decodeHtmlCharacters(url).replace(htmlCtrlEntityRegex, \"\").replace(ctrlCharactersRegex, \"\").trim();\n                    if (!sanitizedUrl) return BLANK_URL;\n                    if (isRelativeUrlWithoutProtocol(sanitizedUrl)) return sanitizedUrl;\n                    var urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n                    if (!urlSchemeParseResults) return sanitizedUrl;\n                    var urlScheme = urlSchemeParseResults[0];\n                    if (invalidProtocolRegex.test(urlScheme)) return BLANK_URL;\n                    return sanitizedUrl;\n                }\n            /***/ }\n        ];\n        /************************************************************************/ /******/ // The module cache\n        /******/ var __webpack_module_cache__ = {};\n        /******/ /******/ // The require function\n        /******/ function __webpack_require__(moduleId) {\n            /******/ // Check if module is in cache\n            /******/ var cachedModule = __webpack_module_cache__[moduleId];\n            /******/ if (cachedModule !== undefined) /******/ return cachedModule.exports;\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = __webpack_module_cache__[moduleId] = {\n                /******/ // no module.id needed\n                /******/ // no module.loaded needed\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ __webpack_modules__[moduleId](module1, module1.exports, __webpack_require__);\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /************************************************************************/ /******/ /* webpack/runtime/define property getters */ /******/ (()=>{\n            /******/ // define getter functions for harmony exports\n            /******/ __webpack_require__.d = (exports, definition)=>{\n                /******/ for(var key in definition)/******/ if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) /******/ Object.defineProperty(exports, key, {\n                    enumerable: true,\n                    get: definition[key]\n                });\n            /******/ };\n        /******/ })();\n        /******/ /******/ /* webpack/runtime/hasOwnProperty shorthand */ /******/ (()=>{\n            /******/ __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);\n        /******/ })();\n        /******/ /******/ /* webpack/runtime/make namespace object */ /******/ (()=>{\n            /******/ // define __esModule on exports\n            /******/ __webpack_require__.r = (exports)=>{\n                /******/ if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) /******/ Object.defineProperty(exports, Symbol.toStringTag, {\n                    value: \"Module\"\n                });\n                /******/ Object.defineProperty(exports, \"__esModule\", {\n                    value: true\n                });\n            /******/ };\n        /******/ })();\n        /******/ /************************************************************************/ var __webpack_exports__ = {};\n        // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n        (()=>{\n            __webpack_require__.r(__webpack_exports__);\n            /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n                /* harmony export */ Alignment: ()=>/* binding */ Alignment,\n                /* harmony export */ EventType: ()=>/* binding */ EventType,\n                /* harmony export */ Fit: ()=>/* binding */ Fit,\n                /* harmony export */ Layout: ()=>/* binding */ Layout,\n                /* harmony export */ LoopType: ()=>/* binding */ LoopType,\n                /* harmony export */ Rive: ()=>/* binding */ Rive,\n                /* harmony export */ RiveEventType: ()=>/* binding */ RiveEventType,\n                /* harmony export */ RuntimeLoader: ()=>/* binding */ RuntimeLoader,\n                /* harmony export */ StateMachineInput: ()=>/* binding */ StateMachineInput,\n                /* harmony export */ StateMachineInputType: ()=>/* binding */ StateMachineInputType,\n                /* harmony export */ Testing: ()=>/* binding */ Testing,\n                /* harmony export */ decodeFont: ()=>/* binding */ decodeFont,\n                /* harmony export */ decodeImage: ()=>/* binding */ decodeImage\n            });\n            /* harmony import */ var _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n            /* harmony import */ var package_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);\n            /* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n            var __awaiter = function(thisArg, _arguments, P, generator) {\n                function adopt(value) {\n                    return value instanceof P ? value : new P(function(resolve) {\n                        resolve(value);\n                    });\n                }\n                return new (P || (P = Promise))(function(resolve, reject) {\n                    function fulfilled(value) {\n                        try {\n                            step(generator.next(value));\n                        } catch (e) {\n                            reject(e);\n                        }\n                    }\n                    function rejected(value) {\n                        try {\n                            step(generator[\"throw\"](value));\n                        } catch (e) {\n                            reject(e);\n                        }\n                    }\n                    function step(result) {\n                        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n                    }\n                    step((generator = generator.apply(thisArg, _arguments || [])).next());\n                });\n            };\n            var __generator = function(thisArg, body) {\n                var _ = {\n                    label: 0,\n                    sent: function() {\n                        if (t[0] & 1) throw t[1];\n                        return t[1];\n                    },\n                    trys: [],\n                    ops: []\n                }, f, y, t, g;\n                return g = {\n                    next: verb(0),\n                    \"throw\": verb(1),\n                    \"return\": verb(2)\n                }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n                    return this;\n                }), g;\n                function verb(n) {\n                    return function(v) {\n                        return step([\n                            n,\n                            v\n                        ]);\n                    };\n                }\n                function step(op) {\n                    if (f) throw new TypeError(\"Generator is already executing.\");\n                    while(g && (g = 0, op[0] && (_ = 0)), _)try {\n                        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n                        if (y = 0, t) op = [\n                            op[0] & 2,\n                            t.value\n                        ];\n                        switch(op[0]){\n                            case 0:\n                            case 1:\n                                t = op;\n                                break;\n                            case 4:\n                                _.label++;\n                                return {\n                                    value: op[1],\n                                    done: false\n                                };\n                            case 5:\n                                _.label++;\n                                y = op[1];\n                                op = [\n                                    0\n                                ];\n                                continue;\n                            case 7:\n                                op = _.ops.pop();\n                                _.trys.pop();\n                                continue;\n                            default:\n                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                    _ = 0;\n                                    continue;\n                                }\n                                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                                    _.label = op[1];\n                                    break;\n                                }\n                                if (op[0] === 6 && _.label < t[1]) {\n                                    _.label = t[1];\n                                    t = op;\n                                    break;\n                                }\n                                if (t && _.label < t[2]) {\n                                    _.label = t[2];\n                                    _.ops.push(op);\n                                    break;\n                                }\n                                if (t[2]) _.ops.pop();\n                                _.trys.pop();\n                                continue;\n                        }\n                        op = body.call(thisArg, _);\n                    } catch (e) {\n                        op = [\n                            6,\n                            e\n                        ];\n                        y = 0;\n                    } finally{\n                        f = t = 0;\n                    }\n                    if (op[0] & 5) throw op[1];\n                    return {\n                        value: op[0] ? op[1] : void 0,\n                        done: true\n                    };\n                }\n            };\n            // #region layout\n            // Fit options for the canvas\n            var Fit;\n            (function(Fit) {\n                Fit[\"Cover\"] = \"cover\";\n                Fit[\"Contain\"] = \"contain\";\n                Fit[\"Fill\"] = \"fill\";\n                Fit[\"FitWidth\"] = \"fitWidth\";\n                Fit[\"FitHeight\"] = \"fitHeight\";\n                Fit[\"None\"] = \"none\";\n                Fit[\"ScaleDown\"] = \"scaleDown\";\n            })(Fit || (Fit = {}));\n            // Alignment options for the canvas\n            var Alignment;\n            (function(Alignment) {\n                Alignment[\"Center\"] = \"center\";\n                Alignment[\"TopLeft\"] = \"topLeft\";\n                Alignment[\"TopCenter\"] = \"topCenter\";\n                Alignment[\"TopRight\"] = \"topRight\";\n                Alignment[\"CenterLeft\"] = \"centerLeft\";\n                Alignment[\"CenterRight\"] = \"centerRight\";\n                Alignment[\"BottomLeft\"] = \"bottomLeft\";\n                Alignment[\"BottomCenter\"] = \"bottomCenter\";\n                Alignment[\"BottomRight\"] = \"bottomRight\";\n            })(Alignment || (Alignment = {}));\n            // Alignment options for Rive animations in a HTML canvas\n            var Layout = /** @class */ function() {\n                function Layout(params) {\n                    var _a, _b, _c, _d, _e, _f;\n                    this.fit = (_a = params === null || params === void 0 ? void 0 : params.fit) !== null && _a !== void 0 ? _a : Fit.Contain;\n                    this.alignment = (_b = params === null || params === void 0 ? void 0 : params.alignment) !== null && _b !== void 0 ? _b : Alignment.Center;\n                    this.minX = (_c = params === null || params === void 0 ? void 0 : params.minX) !== null && _c !== void 0 ? _c : 0;\n                    this.minY = (_d = params === null || params === void 0 ? void 0 : params.minY) !== null && _d !== void 0 ? _d : 0;\n                    this.maxX = (_e = params === null || params === void 0 ? void 0 : params.maxX) !== null && _e !== void 0 ? _e : 0;\n                    this.maxY = (_f = params === null || params === void 0 ? void 0 : params.maxY) !== null && _f !== void 0 ? _f : 0;\n                }\n                // Alternative constructor to build a Layout from an interface/object\n                Layout.new = function(_a) {\n                    var fit = _a.fit, alignment = _a.alignment, minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n                    console.warn(\"This function is deprecated: please use `new Layout({})` instead\");\n                    return new Layout({\n                        fit: fit,\n                        alignment: alignment,\n                        minX: minX,\n                        minY: minY,\n                        maxX: maxX,\n                        maxY: maxY\n                    });\n                };\n                /**\n     * Makes a copy of the layout, replacing any specified parameters\n     */ Layout.prototype.copyWith = function(_a) {\n                    var fit = _a.fit, alignment = _a.alignment, minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n                    return new Layout({\n                        fit: fit !== null && fit !== void 0 ? fit : this.fit,\n                        alignment: alignment !== null && alignment !== void 0 ? alignment : this.alignment,\n                        minX: minX !== null && minX !== void 0 ? minX : this.minX,\n                        minY: minY !== null && minY !== void 0 ? minY : this.minY,\n                        maxX: maxX !== null && maxX !== void 0 ? maxX : this.maxX,\n                        maxY: maxY !== null && maxY !== void 0 ? maxY : this.maxY\n                    });\n                };\n                // Returns fit for the Wasm runtime format\n                Layout.prototype.runtimeFit = function(rive) {\n                    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n                    var fit;\n                    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n                    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n                    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n                    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n                    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n                    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n                    else fit = rive.Fit.none;\n                    this.cachedRuntimeFit = fit;\n                    return fit;\n                };\n                // Returns alignment for the Wasm runtime format\n                Layout.prototype.runtimeAlignment = function(rive) {\n                    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n                    var alignment;\n                    if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;\n                    else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;\n                    else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;\n                    else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;\n                    else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;\n                    else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;\n                    else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;\n                    else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;\n                    else alignment = rive.Alignment.center;\n                    this.cachedRuntimeAlignment = alignment;\n                    return alignment;\n                };\n                return Layout;\n            }();\n            // Runtime singleton; use getInstance to provide a callback that returns the\n            // Rive runtime\n            var RuntimeLoader = /** @class */ function() {\n                // Class is never instantiated\n                function RuntimeLoader() {}\n                // Loads the runtime\n                RuntimeLoader.loadRuntime = function() {\n                    _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                        // Loads Wasm bundle\n                        locateFile: function() {\n                            return RuntimeLoader.wasmURL;\n                        }\n                    }).then(function(rive) {\n                        var _a;\n                        RuntimeLoader.runtime = rive;\n                        // Fire all the callbacks\n                        while(RuntimeLoader.callBackQueue.length > 0)(_a = RuntimeLoader.callBackQueue.shift()) === null || _a === void 0 || _a(RuntimeLoader.runtime);\n                    }).catch(function() {\n                        // In case unpkg fails or goes down, we should try to load from jsdelivr\n                        var backupJsdelivrUrl = \"https://cdn.jsdelivr.net/npm/\".concat(package_json__WEBPACK_IMPORTED_MODULE_1__.name, \"@\").concat(package_json__WEBPACK_IMPORTED_MODULE_1__.version, \"/rive.wasm\");\n                        if (RuntimeLoader.wasmURL.toLowerCase() !== backupJsdelivrUrl) {\n                            console.warn(\"Failed to load WASM from \".concat(RuntimeLoader.wasmURL, \", trying jsdelivr as a backup\"));\n                            RuntimeLoader.setWasmUrl(backupJsdelivrUrl);\n                            RuntimeLoader.loadRuntime();\n                        } else console.error(\"Could not load Rive WASM file from unpkg or jsdelivr, network connection may be down, or         you may need to call set a new WASM source via RuntimeLoader.setWasmUrl() and call         RuntimeLoader.loadRuntime() again\");\n                    });\n                };\n                // Provides a runtime instance via a callback\n                RuntimeLoader.getInstance = function(callback) {\n                    // If it's not loading, start loading runtime\n                    if (!RuntimeLoader.isLoading) {\n                        RuntimeLoader.isLoading = true;\n                        RuntimeLoader.loadRuntime();\n                    }\n                    if (!RuntimeLoader.runtime) RuntimeLoader.callBackQueue.push(callback);\n                    else callback(RuntimeLoader.runtime);\n                };\n                // Provides a runtime instance via a promise\n                RuntimeLoader.awaitInstance = function() {\n                    return new Promise(function(resolve) {\n                        return RuntimeLoader.getInstance(function(rive) {\n                            return resolve(rive);\n                        });\n                    });\n                };\n                // Manually sets the wasm url\n                RuntimeLoader.setWasmUrl = function(url) {\n                    RuntimeLoader.wasmURL = url;\n                };\n                // Flag to indicate that loading has started/completed\n                RuntimeLoader.isLoading = false;\n                // List of callbacks for the runtime that come in while loading\n                RuntimeLoader.callBackQueue = [];\n                // Path to the Wasm file; default path works for testing only;\n                // if embedded wasm is used then this is never used.\n                RuntimeLoader.wasmURL = \"https://unpkg.com/\".concat(package_json__WEBPACK_IMPORTED_MODULE_1__.name, \"@\").concat(package_json__WEBPACK_IMPORTED_MODULE_1__.version, \"/rive.wasm\");\n                return RuntimeLoader;\n            }();\n            // #endregion\n            // #region animations\n            // Wraps animations and instances from the runtime and keeps track of playback\n            // state\n            var Animation = /** @class */ function() {\n                /**\n     * Constructs a new animation\n     * @constructor\n     * @param {any} animation: runtime animation object\n     * @param {any} instance: runtime animation instance object\n     */ function Animation(animation, artboard, runtime, playing) {\n                    this.animation = animation;\n                    this.artboard = artboard;\n                    this.playing = playing;\n                    this.loopCount = 0;\n                    // Time to which the animation should move to on the next render\n                    this.scrubTo = null;\n                    this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n                }\n                Object.defineProperty(Animation.prototype, \"name\", {\n                    // Returns the animation's name\n                    get: function() {\n                        return this.animation.name;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Animation.prototype, \"time\", {\n                    // Returns the animation's current time\n                    get: function() {\n                        return this.instance.time;\n                    },\n                    // Sets the animation's current time\n                    set: function(value) {\n                        this.instance.time = value;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Animation.prototype, \"loopValue\", {\n                    // Returns the animation's loop type\n                    get: function() {\n                        return this.animation.loopValue;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Advances the animation by the give time. If the animation needs scrubbing,\n     * time is ignored and the stored scrub value is used.\n     * @param time the time to advance the animation by if no scrubbing required\n     */ Animation.prototype.advance = function(time) {\n                    if (this.scrubTo === null) this.instance.advance(time);\n                    else {\n                        this.instance.time = 0;\n                        this.instance.advance(this.scrubTo);\n                        this.scrubTo = null;\n                    }\n                };\n                /**\n     * Apply interpolated keyframe values to the artboard. This should be called after calling\n     * .advance() on an animation instance so that new values are applied to properties.\n     *\n     * Note: This does not advance the artboard, which updates all objects on the artboard\n     * @param mix - Mix value for the animation from 0 to 1\n     */ Animation.prototype.apply = function(mix) {\n                    this.instance.apply(mix);\n                };\n                Object.defineProperty(Animation.prototype, \"needsScrub\", {\n                    get: function() {\n                        return this.scrubTo !== null;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Deletes the backing Wasm animation instance; once this is called, this\n     * animation is no more.\n     */ Animation.prototype.cleanup = function() {\n                    this.instance.delete();\n                };\n                return Animation;\n            }();\n            // #endregion\n            // #region state machines\n            var StateMachineInputType;\n            (function(StateMachineInputType) {\n                StateMachineInputType[StateMachineInputType[\"Number\"] = 56] = \"Number\";\n                StateMachineInputType[StateMachineInputType[\"Trigger\"] = 58] = \"Trigger\";\n                StateMachineInputType[StateMachineInputType[\"Boolean\"] = 59] = \"Boolean\";\n            })(StateMachineInputType || (StateMachineInputType = {}));\n            /**\n * An input for a state machine\n */ var StateMachineInput = /** @class */ function() {\n                function StateMachineInput(type, runtimeInput) {\n                    this.type = type;\n                    this.runtimeInput = runtimeInput;\n                }\n                Object.defineProperty(StateMachineInput.prototype, \"name\", {\n                    /**\n         * Returns the name of the input\n         */ get: function() {\n                        return this.runtimeInput.name;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(StateMachineInput.prototype, \"value\", {\n                    /**\n         * Returns the current value of the input\n         */ get: function() {\n                        return this.runtimeInput.value;\n                    },\n                    /**\n         * Sets the value of the input\n         */ set: function(value) {\n                        this.runtimeInput.value = value;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Fires a trigger; does nothing on Number or Boolean input types\n     */ StateMachineInput.prototype.fire = function() {\n                    if (this.type === StateMachineInputType.Trigger) this.runtimeInput.fire();\n                };\n                return StateMachineInput;\n            }();\n            var RiveEventType;\n            (function(RiveEventType) {\n                RiveEventType[RiveEventType[\"General\"] = 128] = \"General\";\n                RiveEventType[RiveEventType[\"OpenUrl\"] = 131] = \"OpenUrl\";\n            })(RiveEventType || (RiveEventType = {}));\n            var StateMachine = /** @class */ function() {\n                /**\n     * @constructor\n     * @param stateMachine runtime state machine object\n     * @param instance runtime state machine instance object\n     */ function StateMachine(stateMachine, runtime, playing, artboard) {\n                    this.stateMachine = stateMachine;\n                    this.playing = playing;\n                    this.artboard = artboard;\n                    /**\n         * Caches the inputs from the runtime\n         */ this.inputs = [];\n                    this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n                    this.initInputs(runtime);\n                }\n                Object.defineProperty(StateMachine.prototype, \"name\", {\n                    get: function() {\n                        return this.stateMachine.name;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(StateMachine.prototype, \"statesChanged\", {\n                    /**\n         * Returns a list of state names that have changed on this frame\n         */ get: function() {\n                        var names = [];\n                        for(var i = 0; i < this.instance.stateChangedCount(); i++)names.push(this.instance.stateChangedNameByIndex(i));\n                        return names;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Advances the state machine instance by a given time.\n     * @param time - the time to advance the animation by in seconds\n     */ StateMachine.prototype.advance = function(time) {\n                    this.instance.advance(time);\n                };\n                /**\n     * Returns the number of events reported from the last advance call\n     * @returns Number of events reported\n     */ StateMachine.prototype.reportedEventCount = function() {\n                    return this.instance.reportedEventCount();\n                };\n                /**\n     * Returns a RiveEvent object emitted from the last advance call at the given index\n     * of a list of potentially multiple events. If an event at the index is not found,\n     * undefined is returned.\n     * @param i index of the event reported in a list of potentially multiple events\n     * @returns RiveEvent or extended RiveEvent object returned, or undefined\n     */ StateMachine.prototype.reportedEventAt = function(i) {\n                    return this.instance.reportedEventAt(i);\n                };\n                /**\n     * Fetches references to the state machine's inputs and caches them\n     * @param runtime an instance of the runtime; needed for the SMIInput types\n     */ StateMachine.prototype.initInputs = function(runtime) {\n                    // Fetch the inputs from the runtime if we don't have them\n                    for(var i = 0; i < this.instance.inputCount(); i++){\n                        var input = this.instance.input(i);\n                        this.inputs.push(this.mapRuntimeInput(input, runtime));\n                    }\n                };\n                /**\n     * Maps a runtime input to it's appropriate type\n     * @param input\n     */ StateMachine.prototype.mapRuntimeInput = function(input, runtime) {\n                    if (input.type === runtime.SMIInput.bool) return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n                    else if (input.type === runtime.SMIInput.number) return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n                    else if (input.type === runtime.SMIInput.trigger) return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n                };\n                /**\n     * Deletes the backing Wasm state machine instance; once this is called, this\n     * state machine is no more.\n     */ StateMachine.prototype.cleanup = function() {\n                    this.instance.delete();\n                };\n                return StateMachine;\n            }();\n            // #endregion\n            // #region animator\n            /**\n * Manages animation\n */ var Animator = /** @class */ function() {\n                /**\n     * Constructs a new animator\n     * @constructor\n     * @param runtime Rive runtime; needed to instance animations & state machines\n     * @param artboard the artboard that holds all animations and state machines\n     * @param animations optional list of animations\n     * @param stateMachines optional list of state machines\n     */ function Animator(runtime, artboard, eventManager, animations, stateMachines) {\n                    if (animations === void 0) animations = [];\n                    if (stateMachines === void 0) stateMachines = [];\n                    this.runtime = runtime;\n                    this.artboard = artboard;\n                    this.eventManager = eventManager;\n                    this.animations = animations;\n                    this.stateMachines = stateMachines;\n                }\n                /**\n     * Adds animations and state machines by their names. If names are shared\n     * between animations & state machines, then the first one found will be\n     * created. Best not to use the same names for these in your Rive file.\n     * @param animatable the name(s) of animations and state machines to add\n     * @returns a list of names of the playing animations and state machines\n     */ Animator.prototype.add = function(animatables, playing, fireEvent) {\n                    if (fireEvent === void 0) fireEvent = true;\n                    animatables = mapToStringArray(animatables);\n                    // If animatables is empty, play or pause everything\n                    if (animatables.length === 0) {\n                        this.animations.forEach(function(a) {\n                            return a.playing = playing;\n                        });\n                        this.stateMachines.forEach(function(m) {\n                            return m.playing = playing;\n                        });\n                    } else {\n                        // Play/pause already instanced items, or create new instances\n                        var instancedAnimationNames = this.animations.map(function(a) {\n                            return a.name;\n                        });\n                        var instancedMachineNames = this.stateMachines.map(function(m) {\n                            return m.name;\n                        });\n                        for(var i = 0; i < animatables.length; i++){\n                            var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n                            var mIndex = instancedMachineNames.indexOf(animatables[i]);\n                            if (aIndex >= 0 || mIndex >= 0) {\n                                if (aIndex >= 0) // Animation is instanced, play/pause it\n                                this.animations[aIndex].playing = playing;\n                                else // State machine is instanced, play/pause it\n                                this.stateMachines[mIndex].playing = playing;\n                            } else {\n                                // Try to create a new animation instance\n                                var anim = this.artboard.animationByName(animatables[i]);\n                                if (anim) {\n                                    var newAnimation = new Animation(anim, this.artboard, this.runtime, playing);\n                                    // Display the first frame of the specified animation\n                                    newAnimation.advance(0);\n                                    newAnimation.apply(1.0);\n                                    this.animations.push(newAnimation);\n                                } else {\n                                    // Try to create a new state machine instance\n                                    var sm = this.artboard.stateMachineByName(animatables[i]);\n                                    if (sm) {\n                                        var newStateMachine = new StateMachine(sm, this.runtime, playing, this.artboard);\n                                        this.stateMachines.push(newStateMachine);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    // Fire play/paused events for animations\n                    if (fireEvent) {\n                        if (playing) this.eventManager.fire({\n                            type: EventType.Play,\n                            data: this.playing\n                        });\n                        else this.eventManager.fire({\n                            type: EventType.Pause,\n                            data: this.paused\n                        });\n                    }\n                    return playing ? this.playing : this.paused;\n                };\n                /**\n     * Adds linear animations by their names.\n     * @param animatables the name(s) of animations to add\n     * @param playing whether animations should play on instantiation\n     */ Animator.prototype.initLinearAnimations = function(animatables, playing) {\n                    // Play/pause already instanced items, or create new instances\n                    // This validation is kept to maintain compatibility with current behavior.\n                    // But given that it this is called during artboard initialization\n                    // it should probably be safe to remove.\n                    var instancedAnimationNames = this.animations.map(function(a) {\n                        return a.name;\n                    });\n                    for(var i = 0; i < animatables.length; i++){\n                        var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n                        if (aIndex >= 0) this.animations[aIndex].playing = playing;\n                        else {\n                            // Try to create a new animation instance\n                            var anim = this.artboard.animationByName(animatables[i]);\n                            if (anim) {\n                                var newAnimation = new Animation(anim, this.artboard, this.runtime, playing);\n                                // Display the first frame of the specified animation\n                                newAnimation.advance(0);\n                                newAnimation.apply(1.0);\n                                this.animations.push(newAnimation);\n                            }\n                        }\n                    }\n                };\n                /**\n     * Adds state machines by their names.\n     * @param animatables the name(s) of state machines to add\n     * @param playing whether state machines should play on instantiation\n     */ Animator.prototype.initStateMachines = function(animatables, playing) {\n                    // Play/pause already instanced items, or create new instances\n                    // This validation is kept to maintain compatibility with current behavior.\n                    // But given that it this is called during artboard initialization\n                    // it should probably be safe to remove.\n                    var instancedStateMachineNames = this.stateMachines.map(function(a) {\n                        return a.name;\n                    });\n                    for(var i = 0; i < animatables.length; i++){\n                        var aIndex = instancedStateMachineNames.indexOf(animatables[i]);\n                        if (aIndex >= 0) this.stateMachines[aIndex].playing = playing;\n                        else {\n                            // Try to create a new state machine instance\n                            var sm = this.artboard.stateMachineByName(animatables[i]);\n                            if (sm) {\n                                var newStateMachine = new StateMachine(sm, this.runtime, playing, this.artboard);\n                                this.stateMachines.push(newStateMachine);\n                            } else // In order to maintain compatibility with current behavior, if a state machine is not found\n                            // we look for an animation with the same name\n                            this.initLinearAnimations([\n                                animatables[i]\n                            ], playing);\n                        }\n                    }\n                };\n                /**\n     * Play the named animations/state machines\n     * @param animatables the names of the animations/machines to play; plays all if empty\n     * @returns a list of the playing items\n     */ Animator.prototype.play = function(animatables) {\n                    return this.add(animatables, true);\n                };\n                /**\n     * Pauses named animations and state machines, or everything if nothing is\n     * specified\n     * @param animatables names of the animations and state machines to pause\n     * @returns a list of names of the animations and state machines paused\n     */ Animator.prototype.pause = function(animatables) {\n                    return this.add(animatables, false);\n                };\n                /**\n     * Set time of named animations\n     * @param animations names of the animations to scrub\n     * @param value time scrub value, a floating point number to which the playhead is jumped\n     * @returns a list of names of the animations that were scrubbed\n     */ Animator.prototype.scrub = function(animatables, value) {\n                    var forScrubbing = this.animations.filter(function(a) {\n                        return animatables.includes(a.name);\n                    });\n                    forScrubbing.forEach(function(a) {\n                        return a.scrubTo = value;\n                    });\n                    return forScrubbing.map(function(a) {\n                        return a.name;\n                    });\n                };\n                Object.defineProperty(Animator.prototype, \"playing\", {\n                    /**\n         * Returns a list of names of all animations and state machines currently\n         * playing\n         */ get: function() {\n                        return this.animations.filter(function(a) {\n                            return a.playing;\n                        }).map(function(a) {\n                            return a.name;\n                        }).concat(this.stateMachines.filter(function(m) {\n                            return m.playing;\n                        }).map(function(m) {\n                            return m.name;\n                        }));\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Animator.prototype, \"paused\", {\n                    /**\n         * Returns a list of names of all animations and state machines currently\n         * paused\n         */ get: function() {\n                        return this.animations.filter(function(a) {\n                            return !a.playing;\n                        }).map(function(a) {\n                            return a.name;\n                        }).concat(this.stateMachines.filter(function(m) {\n                            return !m.playing;\n                        }).map(function(m) {\n                            return m.name;\n                        }));\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Stops and removes all named animations and state machines\n     * @param animatables animations and state machines to remove\n     * @returns a list of names of removed items\n     */ Animator.prototype.stop = function(animatables) {\n                    var _this = this;\n                    animatables = mapToStringArray(animatables);\n                    // If nothing's specified, wipe them out, all of them\n                    var removedNames = [];\n                    // Stop everything\n                    if (animatables.length === 0) {\n                        removedNames = this.animations.map(function(a) {\n                            return a.name;\n                        }).concat(this.stateMachines.map(function(m) {\n                            return m.name;\n                        }));\n                        // Clean up before emptying the arrays\n                        this.animations.forEach(function(a) {\n                            return a.cleanup();\n                        });\n                        this.stateMachines.forEach(function(m) {\n                            return m.cleanup();\n                        });\n                        // Empty out the arrays\n                        this.animations.splice(0, this.animations.length);\n                        this.stateMachines.splice(0, this.stateMachines.length);\n                    } else {\n                        // Remove only the named animations/state machines\n                        var animationsToRemove = this.animations.filter(function(a) {\n                            return animatables.includes(a.name);\n                        });\n                        animationsToRemove.forEach(function(a) {\n                            a.cleanup();\n                            _this.animations.splice(_this.animations.indexOf(a), 1);\n                        });\n                        var machinesToRemove = this.stateMachines.filter(function(m) {\n                            return animatables.includes(m.name);\n                        });\n                        machinesToRemove.forEach(function(m) {\n                            m.cleanup();\n                            _this.stateMachines.splice(_this.stateMachines.indexOf(m), 1);\n                        });\n                        removedNames = animationsToRemove.map(function(a) {\n                            return a.name;\n                        }).concat(machinesToRemove.map(function(m) {\n                            return m.name;\n                        }));\n                    }\n                    this.eventManager.fire({\n                        type: EventType.Stop,\n                        data: removedNames\n                    });\n                    // Return the list of animations removed\n                    return removedNames;\n                };\n                Object.defineProperty(Animator.prototype, \"isPlaying\", {\n                    /**\n         * Returns true if at least one animation is active\n         */ get: function() {\n                        return this.animations.reduce(function(acc, curr) {\n                            return acc || curr.playing;\n                        }, false) || this.stateMachines.reduce(function(acc, curr) {\n                            return acc || curr.playing;\n                        }, false);\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Animator.prototype, \"isPaused\", {\n                    /**\n         * Returns true if all animations are paused and there's at least one animation\n         */ get: function() {\n                        return !this.isPlaying && (this.animations.length > 0 || this.stateMachines.length > 0);\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Animator.prototype, \"isStopped\", {\n                    /**\n         * Returns true if there are no playing or paused animations/state machines\n         */ get: function() {\n                        return this.animations.length === 0 && this.stateMachines.length === 0;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * If there are no animations or state machines, add the first one found\n     * @returns the name of the animation or state machine instanced\n     */ Animator.prototype.atLeastOne = function(playing, fireEvent) {\n                    if (fireEvent === void 0) fireEvent = true;\n                    var instancedName;\n                    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n                        if (this.artboard.animationCount() > 0) // Add the first animation\n                        this.add([\n                            instancedName = this.artboard.animationByIndex(0).name\n                        ], playing, fireEvent);\n                        else if (this.artboard.stateMachineCount() > 0) // Add the first state machine\n                        this.add([\n                            instancedName = this.artboard.stateMachineByIndex(0).name\n                        ], playing, fireEvent);\n                    }\n                    return instancedName;\n                };\n                /**\n     * Checks if any animations have looped and if so, fire the appropriate event\n     */ Animator.prototype.handleLooping = function() {\n                    for(var _i = 0, _a = this.animations.filter(function(a) {\n                        return a.playing;\n                    }); _i < _a.length; _i++){\n                        var animation = _a[_i];\n                        // Emit if the animation looped\n                        if (animation.loopValue === 0 && animation.loopCount) {\n                            animation.loopCount = 0;\n                            // This is a one-shot; if it has ended, delete the instance\n                            this.stop(animation.name);\n                        } else if (animation.loopValue === 1 && animation.loopCount) {\n                            this.eventManager.fire({\n                                type: EventType.Loop,\n                                data: {\n                                    animation: animation.name,\n                                    type: LoopType.Loop\n                                }\n                            });\n                            animation.loopCount = 0;\n                        } else if (animation.loopValue === 2 && animation.loopCount > 1) {\n                            this.eventManager.fire({\n                                type: EventType.Loop,\n                                data: {\n                                    animation: animation.name,\n                                    type: LoopType.PingPong\n                                }\n                            });\n                            animation.loopCount = 0;\n                        }\n                    }\n                };\n                /**\n     * Checks if states have changed in state machines and fires a statechange\n     * event\n     */ Animator.prototype.handleStateChanges = function() {\n                    var statesChanged = [];\n                    for(var _i = 0, _a = this.stateMachines.filter(function(sm) {\n                        return sm.playing;\n                    }); _i < _a.length; _i++){\n                        var stateMachine = _a[_i];\n                        statesChanged.push.apply(statesChanged, stateMachine.statesChanged);\n                    }\n                    if (statesChanged.length > 0) this.eventManager.fire({\n                        type: EventType.StateChange,\n                        data: statesChanged\n                    });\n                };\n                Animator.prototype.handleAdvancing = function(time) {\n                    this.eventManager.fire({\n                        type: EventType.Advance,\n                        data: time\n                    });\n                };\n                return Animator;\n            }();\n            // #endregion\n            // #region events\n            /**\n * Supported event types triggered in Rive\n */ var EventType;\n            (function(EventType) {\n                EventType[\"Load\"] = \"load\";\n                EventType[\"LoadError\"] = \"loaderror\";\n                EventType[\"Play\"] = \"play\";\n                EventType[\"Pause\"] = \"pause\";\n                EventType[\"Stop\"] = \"stop\";\n                EventType[\"Loop\"] = \"loop\";\n                EventType[\"Draw\"] = \"draw\";\n                EventType[\"Advance\"] = \"advance\";\n                EventType[\"StateChange\"] = \"statechange\";\n                EventType[\"RiveEvent\"] = \"riveevent\";\n            })(EventType || (EventType = {}));\n            /**\n * Looping types: one-shot, loop, and ping-pong\n */ var LoopType;\n            (function(LoopType) {\n                LoopType[\"OneShot\"] = \"oneshot\";\n                LoopType[\"Loop\"] = \"loop\";\n                LoopType[\"PingPong\"] = \"pingpong\";\n            })(LoopType || (LoopType = {}));\n            // Manages Rive events and listeners\n            var EventManager = /** @class */ function() {\n                function EventManager(listeners) {\n                    if (listeners === void 0) listeners = [];\n                    this.listeners = listeners;\n                }\n                // Gets listeners of specified type\n                EventManager.prototype.getListeners = function(type) {\n                    return this.listeners.filter(function(e) {\n                        return e.type === type;\n                    });\n                };\n                // Adds a listener\n                EventManager.prototype.add = function(listener) {\n                    if (!this.listeners.includes(listener)) this.listeners.push(listener);\n                };\n                /**\n     * Removes a listener\n     * @param listener the listener with the callback to be removed\n     */ EventManager.prototype.remove = function(listener) {\n                    // We can't simply look for the listener as it'll be a different instance to\n                    // one originally subscribed. Find all the listeners of the right type and\n                    // then check their callbacks which should match.\n                    for(var i = 0; i < this.listeners.length; i++){\n                        var currentListener = this.listeners[i];\n                        if (currentListener.type === listener.type) {\n                            if (currentListener.callback === listener.callback) {\n                                this.listeners.splice(i, 1);\n                                break;\n                            }\n                        }\n                    }\n                };\n                /**\n     * Clears all listeners of specified type, or every listener if no type is\n     * specified\n     * @param type the type of listeners to clear, or all listeners if not\n     * specified\n     */ EventManager.prototype.removeAll = function(type) {\n                    var _this = this;\n                    if (!type) this.listeners.splice(0, this.listeners.length);\n                    else this.listeners.filter(function(l) {\n                        return l.type === type;\n                    }).forEach(function(l) {\n                        return _this.remove(l);\n                    });\n                };\n                // Fires an event\n                EventManager.prototype.fire = function(event) {\n                    var eventListeners = this.getListeners(event.type);\n                    eventListeners.forEach(function(listener) {\n                        return listener.callback(event);\n                    });\n                };\n                return EventManager;\n            }();\n            // Manages a queue of tasks\n            var TaskQueueManager = /** @class */ function() {\n                function TaskQueueManager(eventManager) {\n                    this.eventManager = eventManager;\n                    this.queue = [];\n                }\n                // Adds a task top the queue\n                TaskQueueManager.prototype.add = function(task) {\n                    this.queue.push(task);\n                };\n                // Processes all tasks in the queue\n                TaskQueueManager.prototype.process = function() {\n                    while(this.queue.length > 0){\n                        var task = this.queue.shift();\n                        if (task === null || task === void 0 ? void 0 : task.action) task.action();\n                        if (task === null || task === void 0 ? void 0 : task.event) this.eventManager.fire(task.event);\n                    }\n                };\n                return TaskQueueManager;\n            }();\n            var Rive = /** @class */ function() {\n                function Rive(params) {\n                    var _a;\n                    // Tracks if a Rive file is loaded\n                    this.loaded = false;\n                    /**\n         * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n         * commands (e.g. contents) can be called as soon as the file is loaded.\n         * However, playback commands need to be queued and run in order once initial\n         * animations and autoplay has been sorted out. This applies to play, pause,\n         * and start.\n         */ this.readyForPlaying = false;\n                    // Runtime artboard\n                    this.artboard = null;\n                    // place to clear up event listeners\n                    this.eventCleanup = null;\n                    this.shouldDisableRiveListeners = false;\n                    this.automaticallyHandleEvents = false;\n                    // Allow the runtime to automatically load assets hosted in Rive's runtime.\n                    this.enableRiveAssetCDN = true;\n                    // Durations to generate a frame for the last second. Used for performance profiling.\n                    this.durations = [];\n                    this.frameTimes = [];\n                    this.frameCount = 0;\n                    /**\n         * Used be draw to track when a second of active rendering time has passed.\n         * Used for debugging purposes\n         */ this.renderSecondTimer = 0;\n                    this.canvas = params.canvas;\n                    this.src = params.src;\n                    this.buffer = params.buffer;\n                    this.layout = (_a = params.layout) !== null && _a !== void 0 ? _a : new Layout();\n                    this.shouldDisableRiveListeners = !!params.shouldDisableRiveListeners;\n                    this.automaticallyHandleEvents = !!params.automaticallyHandleEvents;\n                    this.enableRiveAssetCDN = params.enableRiveAssetCDN === undefined ? true : params.enableRiveAssetCDN;\n                    // New event management system\n                    this.eventManager = new EventManager();\n                    if (params.onLoad) this.on(EventType.Load, params.onLoad);\n                    if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n                    if (params.onPlay) this.on(EventType.Play, params.onPlay);\n                    if (params.onPause) this.on(EventType.Pause, params.onPause);\n                    if (params.onStop) this.on(EventType.Stop, params.onStop);\n                    if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n                    if (params.onStateChange) this.on(EventType.StateChange, params.onStateChange);\n                    if (params.onAdvance) this.on(EventType.Advance, params.onAdvance);\n                    /**\n         * @deprecated Use camelCase'd versions instead.\n         */ if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n                    if (params.onloaderror && !params.onLoadError) this.on(EventType.LoadError, params.onloaderror);\n                    if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n                    if (params.onpause && !params.onPause) this.on(EventType.Pause, params.onpause);\n                    if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n                    if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n                    if (params.onstatechange && !params.onStateChange) this.on(EventType.StateChange, params.onstatechange);\n                    /**\n         * Asset loading\n         */ if (params.assetLoader) this.assetLoader = params.assetLoader;\n                    // Hook up the task queue\n                    this.taskQueue = new TaskQueueManager(this.eventManager);\n                    this.init({\n                        src: this.src,\n                        buffer: this.buffer,\n                        autoplay: params.autoplay,\n                        animations: params.animations,\n                        stateMachines: params.stateMachines,\n                        artboard: params.artboard,\n                        useOffscreenRenderer: params.useOffscreenRenderer\n                    });\n                }\n                // Alternative constructor to build a Rive instance from an interface/object\n                Rive.new = function(params) {\n                    console.warn(\"This function is deprecated: please use `new Rive({})` instead\");\n                    return new Rive(params);\n                };\n                // Initializes the Rive object either from constructor or load()\n                Rive.prototype.init = function(_a) {\n                    var _this = this;\n                    var src = _a.src, buffer = _a.buffer, animations = _a.animations, stateMachines = _a.stateMachines, artboard = _a.artboard, _b = _a.autoplay, autoplay = _b === void 0 ? false : _b, _c = _a.useOffscreenRenderer, useOffscreenRenderer = _c === void 0 ? false : _c;\n                    this.src = src;\n                    this.buffer = buffer;\n                    // If no source file url specified, it's a bust\n                    if (!this.src && !this.buffer) throw new Error(Rive.missingErrorMessage);\n                    // List of animations that should be initialized.\n                    var startingAnimationNames = mapToStringArray(animations);\n                    // List of state machines that should be initialized\n                    var startingStateMachineNames = mapToStringArray(stateMachines);\n                    // Ensure loaded is marked as false if loading new file\n                    this.loaded = false;\n                    this.readyForPlaying = false;\n                    // Ensure the runtime is loaded\n                    RuntimeLoader.awaitInstance().then(function(runtime) {\n                        _this.runtime = runtime;\n                        // Get the canvas where you want to render the animation and create a renderer\n                        _this.renderer = _this.runtime.makeRenderer(_this.canvas, useOffscreenRenderer);\n                        // Initial size adjustment based on devicePixelRatio if no width/height are\n                        // specified explicitly\n                        if (!(_this.canvas.width || _this.canvas.height)) _this.resizeDrawingSurfaceToCanvas();\n                        // Load Rive data from a source uri or a data buffer\n                        _this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).then(function() {\n                            return _this.setupRiveListeners();\n                        }).catch(function(e) {\n                            console.error(e);\n                        });\n                    }).catch(function(e) {\n                        console.error(e);\n                    });\n                };\n                Rive.prototype.setupRiveListeners = function() {\n                    var _this = this;\n                    if (!this.shouldDisableRiveListeners) {\n                        var activeStateMachines = (this.animator.stateMachines || []).filter(function(sm) {\n                            return sm.playing && _this.runtime.hasListeners(sm.instance);\n                        }).map(function(sm) {\n                            return sm.instance;\n                        });\n                        this.eventCleanup = (0, _utils__WEBPACK_IMPORTED_MODULE_2__.registerTouchInteractions)({\n                            canvas: this.canvas,\n                            artboard: this.artboard,\n                            stateMachines: activeStateMachines,\n                            renderer: this.renderer,\n                            rive: this.runtime,\n                            fit: this._layout.runtimeFit(this.runtime),\n                            alignment: this._layout.runtimeAlignment(this.runtime)\n                        });\n                    }\n                };\n                // Initializes runtime with Rive data and preps for playing\n                Rive.prototype.initData = function(artboardName, animationNames, stateMachineNames, autoplay) {\n                    var _a;\n                    return __awaiter(this, void 0, void 0, function() {\n                        var _b, loader, _c, msg;\n                        return __generator(this, function(_d) {\n                            switch(_d.label){\n                                case 0:\n                                    if (!this.src) return [\n                                        3 /*break*/ ,\n                                        2\n                                    ];\n                                    _b = this;\n                                    return [\n                                        4 /*yield*/ ,\n                                        loadRiveFile(this.src)\n                                    ];\n                                case 1:\n                                    _b.buffer = _d.sent();\n                                    _d.label = 2;\n                                case 2:\n                                    if (this.assetLoader) loader = new this.runtime.CustomFileAssetLoader({\n                                        loadContents: this.assetLoader\n                                    });\n                                    // Load the Rive file\n                                    _c = this;\n                                    return [\n                                        4 /*yield*/ ,\n                                        this.runtime.load(new Uint8Array(this.buffer), loader, this.enableRiveAssetCDN)\n                                    ];\n                                case 3:\n                                    // Load the Rive file\n                                    _c.file = _d.sent();\n                                    if (this.file) {\n                                        // Initialize and draw frame\n                                        this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n                                        // Everything's set up, emit a load event\n                                        this.loaded = true;\n                                        this.eventManager.fire({\n                                            type: EventType.Load,\n                                            data: (_a = this.src) !== null && _a !== void 0 ? _a : \"buffer\"\n                                        });\n                                        // Flag ready for playback commands and clear the task queue; this order\n                                        // is important or it may infinitely recurse\n                                        this.readyForPlaying = true;\n                                        this.taskQueue.process();\n                                        this.drawFrame();\n                                        return [\n                                            2 /*return*/ ,\n                                            Promise.resolve()\n                                        ];\n                                    } else {\n                                        msg = \"Problem loading file; may be corrupt!\";\n                                        console.warn(msg);\n                                        this.eventManager.fire({\n                                            type: EventType.LoadError,\n                                            data: msg\n                                        });\n                                        return [\n                                            2 /*return*/ ,\n                                            Promise.reject(msg)\n                                        ];\n                                    }\n                                    return [\n                                        2 /*return*/ \n                                    ];\n                            }\n                        });\n                    });\n                };\n                // Initialize for playback\n                Rive.prototype.initArtboard = function(artboardName, animationNames, stateMachineNames, autoplay) {\n                    // Fetch the artboard\n                    var rootArtboard = artboardName ? this.file.artboardByName(artboardName) : this.file.defaultArtboard();\n                    // Check we have a working artboard\n                    if (!rootArtboard) {\n                        var msg = \"Invalid artboard name or no default artboard\";\n                        console.warn(msg);\n                        this.eventManager.fire({\n                            type: EventType.LoadError,\n                            data: msg\n                        });\n                        return;\n                    }\n                    this.artboard = rootArtboard;\n                    // Check that the artboard has at least 1 animation\n                    if (this.artboard.animationCount() < 1) {\n                        var msg = \"Artboard has no animations\";\n                        this.eventManager.fire({\n                            type: EventType.LoadError,\n                            data: msg\n                        });\n                        throw msg;\n                    }\n                    // Initialize the animator\n                    this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n                    // Initialize the animations; as loaded hasn't happened yet, we need to\n                    // suppress firing the play/pause events until the load event has fired. To\n                    // do this we tell the animator to suppress firing events, and add event\n                    // firing to the task queue.\n                    var instanceNames;\n                    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n                        instanceNames = animationNames.concat(stateMachineNames);\n                        this.animator.initLinearAnimations(animationNames, autoplay);\n                        this.animator.initStateMachines(stateMachineNames, autoplay);\n                    } else instanceNames = [\n                        this.animator.atLeastOne(autoplay, false)\n                    ];\n                    // Queue up firing the playback events\n                    this.taskQueue.add({\n                        event: {\n                            type: autoplay ? EventType.Play : EventType.Pause,\n                            data: instanceNames\n                        }\n                    });\n                };\n                // Draws the current artboard frame\n                Rive.prototype.drawFrame = function() {\n                    this.startRendering();\n                };\n                /**\n     * Draw rendering loop; renders animation frames at the correct time interval.\n     * @param time the time at which to render a frame\n     */ Rive.prototype.draw = function(time, onSecond) {\n                    var before = performance.now();\n                    // Clear the frameRequestId, as we're now rendering a fresh frame\n                    this.frameRequestId = null;\n                    // On the first pass, make sure lastTime has a valid value\n                    if (!this.lastRenderTime) this.lastRenderTime = time;\n                    // Handle the onSecond callback\n                    this.renderSecondTimer += time - this.lastRenderTime;\n                    if (this.renderSecondTimer > 5000) {\n                        this.renderSecondTimer = 0;\n                        onSecond === null || onSecond === void 0 || onSecond();\n                    }\n                    // Calculate the elapsed time between frames in seconds\n                    var elapsedTime = (time - this.lastRenderTime) / 1000;\n                    this.lastRenderTime = time;\n                    // - Advance non-paused animations by the elapsed number of seconds\n                    // - Advance any animations that require scrubbing\n                    // - Advance to the first frame even when autoplay is false\n                    var activeAnimations = this.animator.animations.filter(function(a) {\n                        return a.playing || a.needsScrub;\n                    })// The scrubbed animations must be applied first to prevent weird artifacts\n                    // if the playing animations conflict with the scrubbed animating attribuates.\n                    .sort(function(first) {\n                        return first.needsScrub ? -1 : 1;\n                    });\n                    for(var _i = 0, activeAnimations_1 = activeAnimations; _i < activeAnimations_1.length; _i++){\n                        var animation = activeAnimations_1[_i];\n                        animation.advance(elapsedTime);\n                        if (animation.instance.didLoop) animation.loopCount += 1;\n                        animation.apply(1.0);\n                    }\n                    // - Advance non-paused state machines by the elapsed number of seconds\n                    // - Advance to the first frame even when autoplay is false\n                    var activeStateMachines = this.animator.stateMachines.filter(function(a) {\n                        return a.playing;\n                    });\n                    for(var _a = 0, activeStateMachines_1 = activeStateMachines; _a < activeStateMachines_1.length; _a++){\n                        var stateMachine = activeStateMachines_1[_a];\n                        // Check for events before the current frame's state machine advance\n                        var numEventsReported = stateMachine.reportedEventCount();\n                        if (numEventsReported) for(var i = 0; i < numEventsReported; i++){\n                            var event_1 = stateMachine.reportedEventAt(i);\n                            if (event_1) {\n                                if (event_1.type === RiveEventType.OpenUrl) {\n                                    this.eventManager.fire({\n                                        type: EventType.RiveEvent,\n                                        data: event_1\n                                    });\n                                    // Handle the event side effect if explicitly enabled\n                                    if (this.automaticallyHandleEvents) {\n                                        var newAnchorTag = document.createElement(\"a\");\n                                        var _b = event_1, url = _b.url, target = _b.target;\n                                        var sanitizedUrl = (0, _utils__WEBPACK_IMPORTED_MODULE_2__.sanitizeUrl)(url);\n                                        url && newAnchorTag.setAttribute(\"href\", sanitizedUrl);\n                                        target && newAnchorTag.setAttribute(\"target\", target);\n                                        if (sanitizedUrl && sanitizedUrl !== _utils__WEBPACK_IMPORTED_MODULE_2__.BLANK_URL) newAnchorTag.click();\n                                    }\n                                } else this.eventManager.fire({\n                                    type: EventType.RiveEvent,\n                                    data: event_1\n                                });\n                            }\n                        }\n                        stateMachine.advance(elapsedTime);\n                    // stateMachine.instance.apply(this.artboard);\n                    }\n                    // Once the animations have been applied to the artboard, advance it\n                    // by the elapsed time.\n                    this.artboard.advance(elapsedTime);\n                    var renderer = this.renderer;\n                    // Canvas must be wiped to prevent artifacts\n                    renderer.clear();\n                    renderer.save();\n                    // Update the renderer alignment if necessary\n                    this.alignRenderer();\n                    this.artboard.draw(renderer);\n                    renderer.restore();\n                    renderer.flush();\n                    // Check for any animations that looped\n                    this.animator.handleLooping();\n                    // Check for any state machines that had a state change\n                    this.animator.handleStateChanges();\n                    // Report advanced time\n                    this.animator.handleAdvancing(elapsedTime);\n                    // Add duration to create frame to durations array\n                    this.frameCount++;\n                    var after = performance.now();\n                    this.frameTimes.push(after);\n                    this.durations.push(after - before);\n                    while(this.frameTimes[0] <= after - 1000){\n                        this.frameTimes.shift();\n                        this.durations.shift();\n                    }\n                    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n                    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n                    if (this.animator.isPlaying) // Request a new rendering frame\n                    this.startRendering();\n                    else if (this.animator.isPaused) // Reset the end time so on playback it starts at the correct frame\n                    this.lastRenderTime = 0;\n                    else if (this.animator.isStopped) // Reset animation instances, artboard and time\n                    // TODO: implement this properly when we have instancing\n                    // this.initArtboard();\n                    // this.drawFrame();\n                    this.lastRenderTime = 0;\n                };\n                /**\n     * Align the renderer\n     */ Rive.prototype.alignRenderer = function() {\n                    var _a = this, renderer = _a.renderer, runtime = _a.runtime, _layout = _a._layout, artboard = _a.artboard;\n                    // Align things up safe in the knowledge we can restore if changed\n                    renderer.align(_layout.runtimeFit(runtime), _layout.runtimeAlignment(runtime), {\n                        minX: _layout.minX,\n                        minY: _layout.minY,\n                        maxX: _layout.maxX,\n                        maxY: _layout.maxY\n                    }, artboard.bounds);\n                };\n                Object.defineProperty(Rive.prototype, \"fps\", {\n                    get: function() {\n                        return this.durations.length;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"frameTime\", {\n                    get: function() {\n                        if (this.durations.length === 0) return 0;\n                        return (this.durations.reduce(function(a, b) {\n                            return a + b;\n                        }, 0) / this.durations.length).toFixed(4);\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Cleans up all Wasm-generated objects that need to be manually destroyed:\n     * artboard instances, animation instances, state machine instances,\n     * renderer instance, file and runtime.\n     *\n     * Once this is called, you will need to initialise a new instance of the\n     * Rive class\n     */ Rive.prototype.cleanup = function() {\n                    var _a, _b;\n                    // Stop the renderer if it hasn't already been stopped.\n                    this.stopRendering();\n                    // Clean up any artboard, animation or state machine instances.\n                    this.cleanupInstances();\n                    // Delete the renderer\n                    (_a = this.renderer) === null || _a === void 0 || _a.delete();\n                    this.renderer = null;\n                    // Delete the rive file\n                    (_b = this.file) === null || _b === void 0 || _b.delete();\n                    this.file = null;\n                };\n                /**\n     * Cleans up any Wasm-generated objects that need to be manually destroyed:\n     * artboard instances, animation instances, state machine instances.\n     *\n     * Once this is called, things will need to be reinitialized or bad things\n     * might happen.\n     */ Rive.prototype.cleanupInstances = function() {\n                    if (this.eventCleanup !== null) this.eventCleanup();\n                    // Delete all animation and state machine instances\n                    this.stop();\n                    if (this.artboard) {\n                        this.artboard.delete();\n                        this.artboard = null;\n                    }\n                };\n                /**\n     * Tries to query the setup Artboard for a text run node with the given name.\n     *\n     * @param textRunName - Name of the text run node associated with a text object\n     * @returns - TextValueRun node or undefined if the text run cannot be queried\n     */ Rive.prototype.retrieveTextRun = function(textRunName) {\n                    var _a;\n                    if (!textRunName) {\n                        console.warn(\"No text run name provided\");\n                        return;\n                    }\n                    if (!this.artboard) {\n                        console.warn(\"Tried to access text run, but the Artboard is null\");\n                        return;\n                    }\n                    var textRun = this.artboard.textRun(textRunName);\n                    if (!textRun) {\n                        console.warn(\"Could not access a text run with name '\".concat(textRunName, \"' in the '\").concat((_a = this.artboard) === null || _a === void 0 ? void 0 : _a.name, \"' Artboard. Note that you must rename a text run node in the Rive editor to make it queryable at runtime.\"));\n                        return;\n                    }\n                    return textRun;\n                };\n                /**\n     * Returns a string from a given text run node name, or undefined if the text run\n     * cannot be queried.\n     *\n     * @param textRunName - Name of the text run node associated with a text object\n     * @returns - String value of the text run node or undefined\n     */ Rive.prototype.getTextRunValue = function(textRunName) {\n                    var textRun = this.retrieveTextRun(textRunName);\n                    return textRun ? textRun.text : undefined;\n                };\n                /**\n     * Sets a text value for a given text run node name if possible\n     *\n     * @param textRunName - Name of the text run node associated with a text object\n     * @param textRunValue - String value to set on the text run node\n     */ Rive.prototype.setTextRunValue = function(textRunName, textRunValue) {\n                    var textRun = this.retrieveTextRun(textRunName);\n                    if (textRun) textRun.text = textRunValue;\n                };\n                // Plays specified animations; if none specified, it unpauses everything.\n                Rive.prototype.play = function(animationNames, autoplay) {\n                    var _this = this;\n                    animationNames = mapToStringArray(animationNames);\n                    // If the file's not loaded, queue up the play\n                    if (!this.readyForPlaying) {\n                        this.taskQueue.add({\n                            action: function() {\n                                return _this.play(animationNames, autoplay);\n                            }\n                        });\n                        return;\n                    }\n                    this.animator.play(animationNames);\n                    if (this.eventCleanup) this.eventCleanup();\n                    this.setupRiveListeners();\n                    this.startRendering();\n                };\n                // Pauses specified animations; if none specified, pauses all.\n                Rive.prototype.pause = function(animationNames) {\n                    var _this = this;\n                    animationNames = mapToStringArray(animationNames);\n                    // If the file's not loaded, early out, nothing to pause\n                    if (!this.readyForPlaying) {\n                        this.taskQueue.add({\n                            action: function() {\n                                return _this.pause(animationNames);\n                            }\n                        });\n                        return;\n                    }\n                    if (this.eventCleanup) this.eventCleanup();\n                    this.animator.pause(animationNames);\n                };\n                Rive.prototype.scrub = function(animationNames, value) {\n                    var _this = this;\n                    animationNames = mapToStringArray(animationNames);\n                    // If the file's not loaded, early out, nothing to pause\n                    if (!this.readyForPlaying) {\n                        this.taskQueue.add({\n                            action: function() {\n                                return _this.scrub(animationNames, value);\n                            }\n                        });\n                        return;\n                    }\n                    // Scrub the animation time; we draw a single frame here so that if\n                    // nothing's currently playing, the scrubbed animation is still rendered/\n                    this.animator.scrub(animationNames, value || 0);\n                    this.drawFrame();\n                };\n                // Stops specified animations; if none specifies, stops them all.\n                Rive.prototype.stop = function(animationNames) {\n                    var _this = this;\n                    animationNames = mapToStringArray(animationNames);\n                    // If the file's not loaded, early out, nothing to pause\n                    if (!this.readyForPlaying) {\n                        this.taskQueue.add({\n                            action: function() {\n                                return _this.stop(animationNames);\n                            }\n                        });\n                        return;\n                    }\n                    this.animator.stop(animationNames);\n                    if (this.eventCleanup) this.eventCleanup();\n                };\n                /**\n     * Resets the animation\n     * @param artboard the name of the artboard, or default if none given\n     * @param animations the names of animations for playback\n     * @param stateMachines the names of state machines for playback\n     * @param autoplay whether to autoplay when reset, defaults to false\n     *\n     */ Rive.prototype.reset = function(params) {\n                    var _a;\n                    // Get the current artboard, animations, state machines, and playback states\n                    var artBoardName = params === null || params === void 0 ? void 0 : params.artboard;\n                    var animationNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.animations);\n                    var stateMachineNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.stateMachines);\n                    var autoplay = (_a = params === null || params === void 0 ? void 0 : params.autoplay) !== null && _a !== void 0 ? _a : false;\n                    // Stop everything and clean up\n                    this.cleanupInstances();\n                    // Reinitialize an artboard instance with the state\n                    this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n                    this.taskQueue.process();\n                };\n                // Loads a new Rive file, keeping listeners in place\n                Rive.prototype.load = function(params) {\n                    // Stop all animations\n                    this.stop();\n                    // Reinitialize\n                    this.init(params);\n                };\n                Object.defineProperty(Rive.prototype, \"layout\", {\n                    /**\n         * Returns the current layout. Note that layout should be treated as\n         * immutable. If you want to change the layout, create a new one use the\n         * layout setter\n         */ get: function() {\n                        return this._layout;\n                    },\n                    // Sets a new layout\n                    set: function(layout) {\n                        this._layout = layout;\n                        // If the maxX or maxY are 0, then set them to the canvas width and height\n                        if (!layout.maxX || !layout.maxY) this.resizeToCanvas();\n                        if (this.loaded && !this.animator.isPlaying) this.drawFrame();\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Sets the layout bounds to the current canvas size; this is typically called\n     * when the canvas is resized\n     */ Rive.prototype.resizeToCanvas = function() {\n                    this._layout = this.layout.copyWith({\n                        minX: 0,\n                        minY: 0,\n                        maxX: this.canvas.width,\n                        maxY: this.canvas.height\n                    });\n                };\n                /**\n     * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n     * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n     * and resize the layout to match the new drawing surface afterwards.\n     * Useful function for consumers to include in a window resize listener\n     */ Rive.prototype.resizeDrawingSurfaceToCanvas = function() {\n                    if (this.canvas instanceof HTMLCanvasElement && !!window) {\n                        var _a = this.canvas.getBoundingClientRect(), width = _a.width, height = _a.height;\n                        var dpr = window.devicePixelRatio || 1;\n                        this.canvas.width = dpr * width;\n                        this.canvas.height = dpr * height;\n                        this.startRendering();\n                        this.resizeToCanvas();\n                    }\n                };\n                Object.defineProperty(Rive.prototype, \"source\", {\n                    // Returns the animation source, which may be undefined\n                    get: function() {\n                        return this.src;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"activeArtboard\", {\n                    /**\n         * Returns the name of the active artboard\n         */ get: function() {\n                        return this.artboard ? this.artboard.name : \"\";\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"animationNames\", {\n                    // Returns a list of animation names on the chosen artboard\n                    get: function() {\n                        // If the file's not loaded, we got nothing to return\n                        if (!this.loaded) return [];\n                        var animationNames = [];\n                        for(var i = 0; i < this.artboard.animationCount(); i++)animationNames.push(this.artboard.animationByIndex(i).name);\n                        return animationNames;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"stateMachineNames\", {\n                    /**\n         * Returns a list of state machine names from the current artboard\n         */ get: function() {\n                        // If the file's not loaded, we got nothing to return\n                        if (!this.loaded) return [];\n                        var stateMachineNames = [];\n                        for(var i = 0; i < this.artboard.stateMachineCount(); i++)stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n                        return stateMachineNames;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Returns the inputs for the specified instanced state machine, or an empty\n     * list if the name is invalid or the state machine is not instanced\n     * @param name the state machine name\n     * @returns the inputs for the named state machine\n     */ Rive.prototype.stateMachineInputs = function(name) {\n                    // If the file's not loaded, early out, nothing to pause\n                    if (!this.loaded) return;\n                    var stateMachine = this.animator.stateMachines.find(function(m) {\n                        return m.name === name;\n                    });\n                    return stateMachine === null || stateMachine === void 0 ? void 0 : stateMachine.inputs;\n                };\n                Object.defineProperty(Rive.prototype, \"playingStateMachineNames\", {\n                    // Returns a list of playing machine names\n                    get: function() {\n                        // If the file's not loaded, we got nothing to return\n                        if (!this.loaded) return [];\n                        return this.animator.stateMachines.filter(function(m) {\n                            return m.playing;\n                        }).map(function(m) {\n                            return m.name;\n                        });\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"playingAnimationNames\", {\n                    // Returns a list of playing animation names\n                    get: function() {\n                        // If the file's not loaded, we got nothing to return\n                        if (!this.loaded) return [];\n                        return this.animator.animations.filter(function(a) {\n                            return a.playing;\n                        }).map(function(a) {\n                            return a.name;\n                        });\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"pausedAnimationNames\", {\n                    // Returns a list of paused animation names\n                    get: function() {\n                        // If the file's not loaded, we got nothing to return\n                        if (!this.loaded) return [];\n                        return this.animator.animations.filter(function(a) {\n                            return !a.playing;\n                        }).map(function(a) {\n                            return a.name;\n                        });\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"pausedStateMachineNames\", {\n                    /**\n         *  Returns a list of paused machine names\n         * @returns a list of state machine names that are paused\n         */ get: function() {\n                        // If the file's not loaded, we got nothing to return\n                        if (!this.loaded) return [];\n                        return this.animator.stateMachines.filter(function(m) {\n                            return !m.playing;\n                        }).map(function(m) {\n                            return m.name;\n                        });\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"isPlaying\", {\n                    /**\n         * @returns true if any animation is playing\n         */ get: function() {\n                        return this.animator.isPlaying;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"isPaused\", {\n                    /**\n         * @returns true if all instanced animations are paused\n         */ get: function() {\n                        return this.animator.isPaused;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"isStopped\", {\n                    /**\n         * @returns true if no animations are playing or paused\n         */ get: function() {\n                        return this.animator.isStopped;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                Object.defineProperty(Rive.prototype, \"bounds\", {\n                    /**\n         * @returns the bounds of the current artboard, or undefined if the artboard\n         * isn't loaded yet.\n         */ get: function() {\n                        return this.artboard ? this.artboard.bounds : undefined;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                /**\n     * Subscribe to Rive-generated events\n     * @param type the type of event to subscribe to\n     * @param callback callback to fire when the event occurs\n     */ Rive.prototype.on = function(type, callback) {\n                    this.eventManager.add({\n                        type: type,\n                        callback: callback\n                    });\n                };\n                /**\n     * Unsubscribes from a Rive-generated event\n     * @param type the type of event to unsubscribe from\n     * @param callback the callback to unsubscribe\n     */ Rive.prototype.off = function(type, callback) {\n                    this.eventManager.remove({\n                        type: type,\n                        callback: callback\n                    });\n                };\n                /**\n     * Unsubscribes from a Rive-generated event\n     * @deprecated\n     * @param callback the callback to unsubscribe from\n     */ Rive.prototype.unsubscribe = function(type, callback) {\n                    console.warn(\"This function is deprecated: please use `off()` instead.\");\n                    this.off(type, callback);\n                };\n                /**\n     * Unsubscribes all Rive listeners from an event type, or everything if no type is\n     * given\n     * @param type the type of event to unsubscribe from, or all types if\n     * undefined\n     */ Rive.prototype.removeAllRiveEventListeners = function(type) {\n                    this.eventManager.removeAll(type);\n                };\n                /**\n     * Unsubscribes all listeners from an event type, or everything if no type is\n     * given\n     * @deprecated\n     * @param type the type of event to unsubscribe from, or all types if\n     * undefined\n     */ Rive.prototype.unsubscribeAll = function(type) {\n                    console.warn(\"This function is deprecated: please use `removeAllRiveEventListeners()` instead.\");\n                    this.removeAllRiveEventListeners(type);\n                };\n                /**\n     * Stops the rendering loop; this is different from pausing in that it doesn't\n     * change the state of any animation. It stops rendering from occurring. This\n     * is designed for situations such as when Rive isn't visible.\n     *\n     * The only way to start rendering again is to call `startRendering`.\n     * Animations that are marked as playing will start from the position that\n     * they would have been at if rendering had not been stopped.\n     */ Rive.prototype.stopRendering = function() {\n                    if (this.loaded && this.frameRequestId) {\n                        if (this.runtime.cancelAnimationFrame) this.runtime.cancelAnimationFrame(this.frameRequestId);\n                        else cancelAnimationFrame(this.frameRequestId);\n                        this.frameRequestId = null;\n                    }\n                };\n                /**\n     * Starts the rendering loop if it has been previously stopped. If the\n     * renderer is already active, then this will have zero effect.\n     */ Rive.prototype.startRendering = function() {\n                    if (this.loaded && this.artboard && !this.frameRequestId) {\n                        if (this.runtime.requestAnimationFrame) this.frameRequestId = this.runtime.requestAnimationFrame(this.draw.bind(this));\n                        else this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n                    }\n                };\n                /**\n     * Enables frames-per-second (FPS) reporting for the runtime\n     * If no callback is provided, Rive will append a fixed-position div at the top-right corner of\n     * the page with the FPS reading\n     * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n     */ Rive.prototype.enableFPSCounter = function(fpsCallback) {\n                    this.runtime.enableFPSCounter(fpsCallback);\n                };\n                /**\n     * Disables frames-per-second (FPS) reporting for the runtime\n     */ Rive.prototype.disableFPSCounter = function() {\n                    this.runtime.disableFPSCounter();\n                };\n                Object.defineProperty(Rive.prototype, \"contents\", {\n                    /**\n         * Returns the contents of a Rive file: the artboards, animations, and state machines\n         */ get: function() {\n                        if (!this.loaded) return undefined;\n                        var riveContents = {\n                            artboards: []\n                        };\n                        for(var i = 0; i < this.file.artboardCount(); i++){\n                            var artboard = this.file.artboardByIndex(i);\n                            var artboardContents = {\n                                name: artboard.name,\n                                animations: [],\n                                stateMachines: []\n                            };\n                            for(var j = 0; j < artboard.animationCount(); j++){\n                                var animation = artboard.animationByIndex(j);\n                                artboardContents.animations.push(animation.name);\n                            }\n                            for(var k = 0; k < artboard.stateMachineCount(); k++){\n                                var stateMachine = artboard.stateMachineByIndex(k);\n                                var name_1 = stateMachine.name;\n                                var instance = new this.runtime.StateMachineInstance(stateMachine, artboard);\n                                var inputContents = [];\n                                for(var l = 0; l < instance.inputCount(); l++){\n                                    var input = instance.input(l);\n                                    inputContents.push({\n                                        name: input.name,\n                                        type: input.type\n                                    });\n                                }\n                                artboardContents.stateMachines.push({\n                                    name: name_1,\n                                    inputs: inputContents\n                                });\n                            }\n                            riveContents.artboards.push(artboardContents);\n                        }\n                        return riveContents;\n                    },\n                    enumerable: false,\n                    configurable: true\n                });\n                // Error message for missing source or buffer\n                Rive.missingErrorMessage = \"Rive source file or data buffer required\";\n                return Rive;\n            }();\n            // Loads Rive data from a URI via fetch.\n            var loadRiveFile = function(src) {\n                return __awaiter(void 0, void 0, void 0, function() {\n                    var req, res, buffer;\n                    return __generator(this, function(_a) {\n                        switch(_a.label){\n                            case 0:\n                                req = new Request(src);\n                                return [\n                                    4 /*yield*/ ,\n                                    fetch(req)\n                                ];\n                            case 1:\n                                res = _a.sent();\n                                return [\n                                    4 /*yield*/ ,\n                                    res.arrayBuffer()\n                                ];\n                            case 2:\n                                buffer = _a.sent();\n                                return [\n                                    2 /*return*/ ,\n                                    buffer\n                                ];\n                        }\n                    });\n                });\n            };\n            // #endregion\n            // #region utility functions\n            /*\n * Utility function to ensure an object is a string array\n */ var mapToStringArray = function(obj) {\n                if (typeof obj === \"string\") return [\n                    obj\n                ];\n                else if (obj instanceof Array) return obj;\n                // If obj is undefined, return empty array\n                return [];\n            };\n            // #endregion\n            // #region testing utilities\n            // Exports to only be used for tests\n            var Testing = {\n                EventManager: EventManager,\n                TaskQueueManager: TaskQueueManager\n            };\n            // #endregion\n            // #region asset loaders\n            /**\n * Decodes bytes into an image.\n *\n * Be sure to call `.dispose()` on the image once it is no longer needed. This\n * allows the engine to clean it up when it is not used by any more animations.\n */ var decodeImage = function(bytes) {\n                return new Promise(function(resolve) {\n                    return RuntimeLoader.getInstance(function(rive) {\n                        rive.decodeImage(bytes, resolve);\n                    });\n                });\n            };\n            /**\n * Decodes bytes into a font.\n *\n * Be sure to call `.dispose()` on the font once it is no longer needed. This\n * allows the engine to clean it up when it is not used by any more animations.\n */ var decodeFont = function(bytes) {\n                return new Promise(function(resolve) {\n                    return RuntimeLoader.getInstance(function(rive) {\n                        rive.decodeFont(bytes, resolve);\n                    });\n                });\n            };\n        // #endregion\n        })();\n        /******/ return __webpack_exports__;\n    /******/ })();\n});\n\n\nclass $761f97bf09d51d3e$var$WebSocketManager {\n    constructor(){\n        this.socket = new WebSocket(\"ws://\" + location.host + \"/channel\");\n        this.riveInstances = new Map();\n        this.initSocket();\n    }\n    initSocket() {\n        this.socket.addEventListener(\"open\", (event)=>{\n            console.log(\"Socket opened\");\n        });\n        this.socket.addEventListener(\"message\", (event)=>{\n            this.handleMessage(event.data);\n        });\n    }\n    handleMessage(data) {\n        console.log(\"Received message:\", data);\n        const words = data.split(\":\");\n        const MESSAGE_TYPE = words[0];\n        switch(MESSAGE_TYPE){\n            case \"addInstance\":\n                const INSTANCE_ID = words[1];\n                const INSTANCE_NAME = words[2];\n                const RIVE_SRC = words[3];\n                const X_POSITION = parseFloat(words[4]);\n                const Y_POSITION = parseFloat(words[5]);\n                const WIDTH = parseFloat(words[6]);\n                const HEIGHT = parseFloat(words[7]);\n                const SMNAME = words[8];\n                const AUTOPLAY = words[9];\n                console.log(INSTANCE_ID, INSTANCE_NAME, RIVE_SRC, X_POSITION, Y_POSITION, WIDTH, HEIGHT, SMNAME, AUTOPLAY);\n                const instexists = this.riveInstances.get(INSTANCE_ID);\n                if (!instexists) {\n                    console.log(\"Adding instance:\", INSTANCE_ID);\n                    this.addRiveInstance(INSTANCE_ID, INSTANCE_NAME, RIVE_SRC, X_POSITION, Y_POSITION, WIDTH, HEIGHT, SMNAME, AUTOPLAY);\n                } else {\n                    console.log(\"Instance already exists:\", INSTANCE_ID);\n                    this.updateRiveInstance(instexists, INSTANCE_ID, X_POSITION, Y_POSITION, WIDTH, HEIGHT, SMNAME, AUTOPLAY);\n                }\n                break;\n            case \"removeInstance\":\n                const INSTANCE_ID_TO_REMOVE = words[1];\n                this.removeRiveInstance(INSTANCE_ID_TO_REMOVE);\n                break;\n            default:\n                const INSTANCE_ID_COMMAND = words[1];\n                const INSTANCE_COMMAND = this.riveInstances.get(INSTANCE_ID_COMMAND);\n                if (!INSTANCE_COMMAND) {\n                    console.error(`Rive instance \"${INSTANCE_NAME_COMMAND}\" not found.`);\n                    return;\n                }\n                const PARAM_1 = words[2];\n                const PARAM_2 = words[3];\n                const PARAM_3 = words[4];\n                const PARAM_4 = words[5];\n                switch(MESSAGE_TYPE){\n                    case \"play\":\n                        if (PARAM_1) INSTANCE_COMMAND.play(PARAM_1);\n                        break;\n                    case \"pause\":\n                        if (PARAM_1) INSTANCE_COMMAND.pause(PARAM_1);\n                        break;\n                    case \"stop\":\n                        if (PARAM_1) INSTANCE_COMMAND.stop(PARAM_1);\n                        break;\n                    case \"setRun\":\n                        if (PARAM_1 && PARAM_2) INSTANCE_COMMAND.setTextRunValue(PARAM_1, PARAM_2);\n                        break;\n                    case \"reset\":\n                        if (PARAM_1 && PARAM_2) INSTANCE_COMMAND.resetstatemachine(PARAM_1, PARAM_2);\n                        break;\n                    case \"exitValue\":\n                        if (PARAM_1) {\n                            console.log(`exitvalue called with P1:\"${PARAM_1}\":P2:\"${PARAM_2}\"P3:\"${PARAM_3}\"P4:\"${PARAM_4}\":`);\n                            INSTANCE_COMMAND.switchArtboardIfNeeded(PARAM_1, PARAM_2, true);\n                            console.log(`Getting inputs for \"${PARAM_2}\"`);\n                            const inputs = INSTANCE_COMMAND.stateMachineInputs(PARAM_2);\n                            if (inputs != null) {\n                                console.log(\"finding inputs \", PARAM_3);\n                                const exitValue = inputs.find((i)=>i.name == PARAM_3);\n                                if (exitValue) {\n                                    console.log(\"input found\");\n                                    if (PARAM_4) {\n                                        console.log(`exitValue set to value of Param4: ${PARAM_4}`);\n                                        if (PARAM_4.toLowerCase() === \"true\") {\n                                            console.log(\"setting to true\");\n                                            exitValue.value = true;\n                                        } else if (PARAM_4.toLowerCase() === \"false\") {\n                                            console.log(\"setting to false\");\n                                            exitValue.value = false;\n                                        }\n                                        console.log(\"done with set.\");\n                                    } else {\n                                        console.log(`exitValue toggled to ${exitValue.value}`);\n                                        exitValue.value = !exitValue.value;\n                                    }\n                                } else console.error(`exitValue \"${exitValue}\" not found.`);\n                            } else console.log(\"inputs is null for statemachine\", PARAM_2);\n                        }\n                        break;\n                    default:\n                        console.log(\"Unknown message type:\", MESSAGE_TYPE);\n                }\n        }\n    }\n    addRiveInstance(uuid, name, src, x, y, width, height, smname, autoplay) {\n        const instance = new $761f97bf09d51d3e$var$RiveInstance(uuid, name, src, x, y, width, height, smname, autoplay);\n        this.riveInstances.set(uuid, instance);\n    }\n    updateRiveInstance(existing, name, x, y, width, height, smname, autoplay) {\n        const instance = existing;\n        instance.resetstatemachine(smname, autoplay);\n        instance.updateDom(name, x, y, width, height);\n    }\n    removeRiveInstance(name) {\n        const instance = this.riveInstances.get(name);\n        if (instance) {\n            instance.destroy();\n            this.riveInstances.delete(name);\n        }\n    }\n}\nclass $761f97bf09d51d3e$var$RiveInstance {\n    constructor(id, name, src, x, y, width, height, smname, autoplay){\n        //TODO: break out update logic and call it from here\n        this.uuid = id;\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.id = id;\n        this.updateDom(name, x, y, width, height);\n        document.body.appendChild(this.canvas);\n        this.riveInstance = new $691f11a73ac7a020$exports.Rive({\n            src: src,\n            canvas: this.canvas,\n            stateMachines: smname,\n            autoplay: autoplay,\n            onLoad: ()=>{\n                this.riveInstance.resizeDrawingSurfaceToCanvas();\n            }\n        });\n    }\n    destroy() {\n        this.riveInstance.cleanup();\n        this.canvas.remove();\n    }\n    updateDom(name, x, y, width, height) {\n        this.name = name;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.left = `${x}px`;\n        this.canvas.style.top = `${y}px`;\n        if (this.riveInstance != null && this.canvas != null) this.riveInstance.resizeDrawingSurfaceToCanvas();\n    }\n    play(animationName) {\n        this.riveInstance.play(animationName);\n    }\n    pause(animationName) {\n        this.riveInstance.pause(animationName);\n    }\n    stop(animationName) {\n        this.riveInstance.pause(animationName);\n    }\n    setTextRunValue(text, value) {\n        this.riveInstance.setTextRunValue(text, value);\n    }\n    switchArtboardIfNeeded(artboard, statemachine, autoplay) {\n        // TODO: if artboard is the same but statemachine is different we don't work\n        console.log(\"SwitchArtboardIfNeeded\", artboard);\n        let one = this.riveInstance.artboard.name;\n        console.log(\"currentArtboard\", one);\n        if (one.localeCompare(artboard) != 0) {\n            console.log(\"Artboard is the different\");\n            this.resetartboard(artboard, statemachine, autoplay);\n        } else console.log(\"Artboard is the same\");\n    }\n    resetstatemachine(artboard, autoplay) {\n        console.log(\"ResetStateMachine\", artboard, autoplay);\n        this.riveInstance.reset({\n            artboard: artboard,\n            //      statemachine: artboard,\n            autoplay: autoplay\n        });\n    }\n    resetartboard(artboard, statemachine, autoplay) {\n        console.log(\"ResetArtboard\", artboard, autoplay);\n        this.riveInstance.reset({\n            artboard: artboard,\n            stateMachines: statemachine,\n            autoplay: autoplay\n        });\n    }\n    stateMachineInputs(input) {\n        console.log(\"StateMachineInputs \" + input);\n        return this.riveInstance.stateMachineInputs(input);\n    }\n}\nvar $761f97bf09d51d3e$var$a = new $761f97bf09d51d3e$var$WebSocketManager();\n\n\n//# sourceMappingURL=index.2b6d4339.js.map\n","import \"./styles.css\";\n\nconst rive = require(\"@rive-app/canvas\");\n\nclass WebSocketManager {\n  constructor() {\n    this.socket = new WebSocket(\"ws://\" + location.host + \"/channel\");\n    this.riveInstances = new Map();\n    this.initSocket();\n  }\n\n  initSocket() {\n    this.socket.addEventListener(\"open\", (event) => {\n      console.log(\"Socket opened\");\n    });\n\n    this.socket.addEventListener(\"message\", (event) => {\n      this.handleMessage(event.data);\n    });\n  }\n\n  handleMessage(data) {\n    console.log(\"Received message:\", data);\n    const words = data.split(\":\");\n    const MESSAGE_TYPE = words[0];\n\n    switch (MESSAGE_TYPE) {\n      case \"addInstance\":\n        const INSTANCE_ID = words[1];\n        const INSTANCE_NAME = words[2];\n        const RIVE_SRC = words[3];\n        const X_POSITION = parseFloat(words[4]);\n        const Y_POSITION = parseFloat(words[5]);\n        const WIDTH = parseFloat(words[6]);\n        const HEIGHT = parseFloat(words[7]);\n        const SMNAME = words[8];\n        const AUTOPLAY = words[9];\n\tconsole.log(INSTANCE_ID, INSTANCE_NAME, RIVE_SRC, X_POSITION, Y_POSITION, WIDTH, HEIGHT, SMNAME, AUTOPLAY);\n        const instexists = this.riveInstances.get(INSTANCE_ID);\n        if (!instexists) {\n          console.log(\"Adding instance:\", INSTANCE_ID);\n          this.addRiveInstance(\n            INSTANCE_ID,\n            INSTANCE_NAME,\n            RIVE_SRC,\n            X_POSITION,\n            Y_POSITION,\n            WIDTH,\n            HEIGHT,\n\t    SMNAME,\n\t    AUTOPLAY\n          );\n        } else {\n          console.log(\"Instance already exists:\", INSTANCE_ID);\n          this.updateRiveInstance(\n            instexists,\n            INSTANCE_ID,\n            X_POSITION,\n            Y_POSITION,\n            WIDTH,\n            HEIGHT,\n\t    SMNAME,\n\t    AUTOPLAY\n          );\n        }\n        break;\n      case \"removeInstance\":\n        const INSTANCE_ID_TO_REMOVE = words[1];\n        this.removeRiveInstance(INSTANCE_ID_TO_REMOVE);\n        break;\n      default:\n        const INSTANCE_ID_COMMAND = words[1];\n        const INSTANCE_COMMAND = this.riveInstances.get(INSTANCE_ID_COMMAND);\n        if (!INSTANCE_COMMAND) {\n          console.error(`Rive instance \"${INSTANCE_NAME_COMMAND}\" not found.`);\n          return;\n        }\n        const PARAM_1 = words[2];\n        const PARAM_2 = words[3];\n        const PARAM_3 = words[4];\n        const PARAM_4 = words[5];\n        switch (MESSAGE_TYPE) {\n          case \"play\":\n            if (PARAM_1) {\n              INSTANCE_COMMAND.play(PARAM_1);\n            }\n            break;\n          case \"pause\":\n            if (PARAM_1) {\n              INSTANCE_COMMAND.pause(PARAM_1);\n            }\n            break;\n          case \"stop\":\n            if (PARAM_1) {\n              INSTANCE_COMMAND.stop(PARAM_1);\n            }\n            break;\n          case \"setRun\":\n            if (PARAM_1 && PARAM_2) {\n              INSTANCE_COMMAND.setTextRunValue(PARAM_1, PARAM_2);\n            }\n            break;\n          case \"reset\":\n            if (PARAM_1 && PARAM_2) {\n              INSTANCE_COMMAND.resetstatemachine(PARAM_1, PARAM_2);\n            }\n            break;\n          case \"exitValue\":\n            if (PARAM_1) {\n\t      console.log(`exitvalue called with P1:\"${PARAM_1}\":P2:\"${PARAM_2}\"P3:\"${PARAM_3}\"P4:\"${PARAM_4}\":`);\n\t\tINSTANCE_COMMAND.switchArtboardIfNeeded(PARAM_1, PARAM_2, true);\n\t      console.log(`Getting inputs for \"${PARAM_2}\"`);\n              const inputs = INSTANCE_COMMAND.stateMachineInputs(PARAM_2);\n\t      if (inputs!=null) {\n\t\tconsole.log(\"finding inputs \", PARAM_3);\n              const exitValue = inputs.find((i) => i.name == PARAM_3);\n              if (exitValue) {\n\t\tconsole.log(\"input found\");\n                if (PARAM_4) {\n                  console.log(`exitValue set to value of Param4: ${PARAM_4}`);\n\t\t  if (PARAM_4.toLowerCase() === \"true\") {\n\t\t   console.log(\"setting to true\");\n                   exitValue.value = true\n\t\t} else if (PARAM_4.toLowerCase() === \"false\") {\n\t\t   console.log(\"setting to false\");\n\t\t  exitValue.value = false\n         \t}\n\t\tconsole.log(\"done with set.\");\n                } else {\n                  console.log(`exitValue toggled to ${exitValue.value}`);\n                  exitValue.value = !exitValue.value;\n                }\n              } else {\n\t\tconsole.error(`exitValue \"${exitValue}\" not found.`);\n\t      }\n           } else { \nconsole.log(\"inputs is null for statemachine\", PARAM_2);\n\t\t\t\t\t\t\t}\n            }\n            break;\n          default:\n            console.log(\"Unknown message type:\", MESSAGE_TYPE);\n        }\n    }\n  }\n\n  addRiveInstance(uuid, name, src, x, y, width, height, smname, autoplay) {\n    const instance = new RiveInstance(uuid, name, src, x, y, width, height, smname, autoplay);\n    this.riveInstances.set(uuid, instance);\n  }\n\n  updateRiveInstance(existing, name, x, y, width, height, smname, autoplay) {\n    const instance = existing;\n    instance.resetstatemachine(smname, autoplay);\n    instance.updateDom(name, x, y, width, height);\n  }\n\n  removeRiveInstance(name) {\n    const instance = this.riveInstances.get(name);\n    if (instance) {\n      instance.destroy();\n      this.riveInstances.delete(name);\n    }\n  }\n}\n\nclass RiveInstance {\n  constructor(id, name, src, x, y, width, height, smname, autoplay) {\n    //TODO: break out update logic and call it from here\n    this.uuid = id;\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.id = id;\n    this.updateDom(name, x, y, width, height);\n    document.body.appendChild(this.canvas);\n    this.riveInstance = new rive.Rive({\n      src: src,\n      canvas: this.canvas,\n      stateMachines: smname,\n      autoplay: autoplay,\n      onLoad: () => {\n        this.riveInstance.resizeDrawingSurfaceToCanvas();\n      },\n    });\n  }\n\n  destroy() {\n    this.riveInstance.cleanup();\n    this.canvas.remove();\n  }\n\n  updateDom(name, x, y, width, height) {\n    this.name = name;\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.canvas.style.position = \"absolute\";\n    this.canvas.style.left = `${x}px`;\n    this.canvas.style.top = `${y}px`;\n    if (this.riveInstance != null && this.canvas != null) {\n      this.riveInstance.resizeDrawingSurfaceToCanvas();\n    }\n  }\n\n  play(animationName) {\n    this.riveInstance.play(animationName);\n  }\n\n  pause(animationName) {\n    this.riveInstance.pause(animationName);\n  }\n\n  stop(animationName) {\n    this.riveInstance.pause(animationName);\n  }\n\n  setTextRunValue(text, value) {\n    this.riveInstance.setTextRunValue(text, value);\n  }\n\n  switchArtboardIfNeeded(artboard, statemachine, autoplay) {\n\t\t// TODO: if artboard is the same but statemachine is different we don't work\n    console.log(\"SwitchArtboardIfNeeded\", artboard);\n    let one = this.riveInstance.artboard.name;\n    console.log(\"currentArtboard\", one);\n    if (one.localeCompare(artboard)!=0) {\n      console.log(\"Artboard is the different\");\n      this.resetartboard(artboard, statemachine, autoplay);\n    } else {\n\t\t\tconsole.log(\"Artboard is the same\");\n\t\t}\n  }\n\n  resetstatemachine(artboard, autoplay) {\n    console.log(\"ResetStateMachine\", artboard, autoplay);\n    this.riveInstance.reset({\n      artboard: artboard,\n//      statemachine: artboard,\n      autoplay: autoplay,\n    });\n  }\n\n  resetartboard(artboard, statemachine, autoplay) {\n    console.log(\"ResetArtboard\", artboard, autoplay);\n    this.riveInstance.reset({\n      artboard: artboard,\n      stateMachines: statemachine,\n      autoplay: autoplay,\n    });\n  }\n\n  stateMachineInputs(input) {\n    console.log(\"StateMachineInputs \" + input);\n    return this.riveInstance.stateMachineInputs(input);\n  }\n}\n\nvar a = new WebSocketManager();\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rive\"] = factory();\n\telse\n\t\troot[\"rive\"] = factory();\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\nvar Rive = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar h=moduleArg,ba,ca;h.ready=new Promise((b,a)=>{ba=b;ca=a});\nfunction da(){function b(m){const l=d;c=a=0;d=new Map;l.forEach(p=>{try{p(m)}catch(k){console.error(k)}});this.fb();e&&e.Db()}let a=0,c=0,d=new Map,e=null,f=null;this.requestAnimationFrame=function(m){a||(a=requestAnimationFrame(b.bind(this)));const l=++c;d.set(l,m);return l};this.cancelAnimationFrame=function(m){d.delete(m);a&&0==d.size&&(cancelAnimationFrame(a),a=0)};this.Bb=function(m){f&&(document.body.remove(f),f=null);m||(f=document.createElement(\"div\"),f.style.backgroundColor=\"black\",f.style.position=\n\"fixed\",f.style.right=0,f.style.top=0,f.style.color=\"white\",f.style.padding=\"4px\",f.innerHTML=\"RIVE FPS\",m=function(l){f.innerHTML=\"RIVE FPS \"+l.toFixed(1)},document.body.appendChild(f));e=new function(){let l=0,p=0;this.Db=function(){var k=performance.now();p?(++l,k-=p,1E3<k&&(m(1E3*l/k),l=p=0)):(p=k,l=0)}}};this.yb=function(){f&&(document.body.remove(f),f=null);e=null};this.fb=function(){}}\nfunction ea(b){console.assert(!0);const a=new Map;let c=-Infinity;this.push=function(d){d=d+((1<<b)-1)>>b;a.has(d)&&clearTimeout(a.get(d));a.set(d,setTimeout(function(){a.delete(d);0==a.length?c=-Infinity:d==c&&(c=Math.max(...a.keys()),console.assert(c<d))},1E3));c=Math.max(d,c);return c<<b}}\nconst ha=\"createConicGradient createImageData createLinearGradient createPattern createRadialGradient getContextAttributes getImageData getLineDash getTransform isContextLost isPointInPath isPointInStroke measureText\".split(\" \"),ka=new function(){function b(){if(!a){var t=document.createElement(\"canvas\"),g={alpha:1,depth:0,stencil:0,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:1,\nrenderViaOffscreenBackBuffer:1};let n=t.getContext(\"webgl2\",g);if(n)c=2;else if(n=t.getContext(\"webgl\",g))c=1;else return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1;d=Math.min(n.getParameter(n.MAX_RENDERBUFFER_SIZE),n.getParameter(n.MAX_TEXTURE_SIZE));function w(H,x,A){x=n.createShader(x);n.shaderSource(x,A);n.compileShader(x);A=n.getShaderInfoLog(x);if(0<A.length)throw A;n.attachShader(H,x)}t=n.createProgram();w(t,n.VERTEX_SHADER,\"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\nw(t,n.FRAGMENT_SHADER,\"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");n.bindAttribLocation(t,0,\"vertex\");n.bindAttribLocation(t,1,\"uv\");n.linkProgram(t);g=n.getProgramInfoLog(t);if(0<g.trim().length)throw g;e=n.getUniformLocation(t,\"mat\");f=n.getUniformLocation(t,\"translate\");n.useProgram(t);n.bindBuffer(n.ARRAY_BUFFER,n.createBuffer());\nn.enableVertexAttribArray(0);n.enableVertexAttribArray(1);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,n.createBuffer());n.uniform1i(n.getUniformLocation(t,\"image\"),0);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0);a=n}return!0}let a=null,c=0,d=0,e=null,f=null,m=0,l=0;this.Mb=function(){b();return d};this.vb=function(t){if(!b())return null;const g=a.createTexture();a.bindTexture(a.TEXTURE_2D,g);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,t);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);\na.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);2==c?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR),a.generateMipmap(a.TEXTURE_2D)):a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);return g};const p=new ea(8),k=new ea(8),r=new ea(10),u=new ea(10);this.Ab=function(t,g,n,w,H){if(b()){var x=p.push(t),A=k.push(g);if(a.canvas.width!=x||a.canvas.height!=A)a.canvas.width=x,a.canvas.height=A;\na.viewport(0,A-g,t,g);a.disable(a.SCISSOR_TEST);a.clearColor(0,0,0,0);a.clear(a.COLOR_BUFFER_BIT);a.enable(a.SCISSOR_TEST);n.sort((B,fa)=>fa.jb-B.jb);x=r.push(w);m!=x&&(a.bufferData(a.ARRAY_BUFFER,8*x,a.DYNAMIC_DRAW),m=x);x=0;for(var J of n)a.bufferSubData(a.ARRAY_BUFFER,x,J.Ra),x+=4*J.Ra.length;console.assert(x==4*w);for(var Q of n)a.bufferSubData(a.ARRAY_BUFFER,x,Q.mb),x+=4*Q.mb.length;console.assert(x==8*w);x=u.push(H);l!=x&&(a.bufferData(a.ELEMENT_ARRAY_BUFFER,2*x,a.DYNAMIC_DRAW),l=x);J=0;for(var aa of n)a.bufferSubData(a.ELEMENT_ARRAY_BUFFER,\nJ,aa.indices),J+=2*aa.indices.length;console.assert(J==2*H);aa=0;Q=!0;x=J=0;for(const B of n){B.image.Ma!=aa&&(a.bindTexture(a.TEXTURE_2D,B.image.rb||null),aa=B.image.Ma);B.Pb?(a.scissor(B.Va,A-B.Wa-B.cb,B.$b,B.cb),Q=!0):Q&&(a.scissor(0,A-g,t,g),Q=!1);n=2/t;const fa=-2/g;a.uniform4f(e,B.xa[0]*n*B.Ga,B.xa[1]*fa*B.Ha,B.xa[2]*n*B.Ga,B.xa[3]*fa*B.Ha);a.uniform2f(f,B.xa[4]*n*B.Ga+n*(B.Va-B.Nb*B.Ga)-1,B.xa[5]*fa*B.Ha+fa*(B.Wa-B.Ob*B.Ha)+1);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,x);a.vertexAttribPointer(1,\n2,a.FLOAT,!1,0,x+4*w);a.drawElements(a.TRIANGLES,B.indices.length,a.UNSIGNED_SHORT,J);x+=4*B.Ra.length;J+=2*B.indices.length}console.assert(x==4*w);console.assert(J==2*H)}};this.canvas=function(){return b()&&a.canvas}},la=h.onRuntimeInitialized;\nh.onRuntimeInitialized=function(){function b(q){switch(q){case k.srcOver:return\"source-over\";case k.screen:return\"screen\";case k.overlay:return\"overlay\";case k.darken:return\"darken\";case k.lighten:return\"lighten\";case k.colorDodge:return\"color-dodge\";case k.colorBurn:return\"color-burn\";case k.hardLight:return\"hard-light\";case k.softLight:return\"soft-light\";case k.difference:return\"difference\";case k.exclusion:return\"exclusion\";case k.multiply:return\"multiply\";case k.hue:return\"hue\";case k.saturation:return\"saturation\";\ncase k.color:return\"color\";case k.luminosity:return\"luminosity\"}}function a(q){return\"rgba(\"+((16711680&q)>>>16)+\",\"+((65280&q)>>>8)+\",\"+((255&q)>>>0)+\",\"+((4278190080&q)>>>24)/255+\")\"}function c(){0<J.length&&(ka.Ab(A.drawWidth(),A.drawHeight(),J,Q,aa),J=[],aa=Q=0,A.reset(512,512));for(const q of x){for(const v of q.ja)v();q.ja=[]}x.clear()}la&&la();var d=h.RenderPaintStyle;const e=h.RenderPath,f=h.RenderPaint,m=h.Renderer,l=h.StrokeCap,p=h.StrokeJoin,k=h.BlendMode,r=d.fill,u=d.stroke,t=h.FillRule.evenOdd;\nlet g=1;var n=h.RenderImage.extend(\"CanvasRenderImage\",{__construct:function({Aa:q,Fa:v}={}){this.__parent.__construct.call(this);this.Ma=g;g=g+1&2147483647||1;this.Aa=q;this.Fa=v},decode:function(q){var v=this;v.Fa&&v.Fa(v);var C=new Image;C.src=URL.createObjectURL(new Blob([q],{type:\"image/png\"}));C.onload=function(){v.ob=C;v.rb=ka.vb(C);v.size(C.width,C.height);v.Aa&&v.Aa(v)}}}),w=e.extend(\"CanvasRenderPath\",{__construct:function(){this.__parent.__construct.call(this);this.pa=new Path2D},rewind:function(){this.pa=\nnew Path2D},addPath:function(q,v,C,D,z,E,F){var G=this.pa,T=G.addPath;q=q.pa;const K=new DOMMatrix;K.a=v;K.b=C;K.c=D;K.d=z;K.e=E;K.f=F;T.call(G,q,K)},fillRule:function(q){this.Ta=q},moveTo:function(q,v){this.pa.moveTo(q,v)},lineTo:function(q,v){this.pa.lineTo(q,v)},cubicTo:function(q,v,C,D,z,E){this.pa.bezierCurveTo(q,v,C,D,z,E)},close:function(){this.pa.closePath()}}),H=f.extend(\"CanvasRenderPaint\",{color:function(q){this.Ua=a(q)},thickness:function(q){this.sb=q},join:function(q){switch(q){case p.miter:this.La=\n\"miter\";break;case p.round:this.La=\"round\";break;case p.bevel:this.La=\"bevel\"}},cap:function(q){switch(q){case l.butt:this.Ka=\"butt\";break;case l.round:this.Ka=\"round\";break;case l.square:this.Ka=\"square\"}},style:function(q){this.qb=q},blendMode:function(q){this.nb=b(q)},clearGradient:function(){this.za=null},linearGradient:function(q,v,C,D){this.za={kb:q,lb:v,Za:C,$a:D,Pa:[]}},radialGradient:function(q,v,C,D){this.za={kb:q,lb:v,Za:C,$a:D,Pa:[],Kb:!0}},addStop:function(q,v){this.za.Pa.push({color:q,\nstop:v})},completeGradient:function(){},draw:function(q,v,C){let D=this.qb;var z=this.Ua,E=this.za;q.globalCompositeOperation=this.nb;if(null!=E){z=E.kb;var F=E.lb;const T=E.Za;var G=E.$a;const K=E.Pa;E.Kb?(E=T-z,G-=F,z=q.createRadialGradient(z,F,0,z,F,Math.sqrt(E*E+G*G))):z=q.createLinearGradient(z,F,T,G);for(let W=0,N=K.length;W<N;W++)F=K[W],z.addColorStop(F.stop,a(F.color));this.Ua=z;this.za=null}switch(D){case u:q.strokeStyle=z;q.lineWidth=this.sb;q.lineCap=this.Ka;q.lineJoin=this.La;q.stroke(v);\nbreak;case r:q.fillStyle=z,q.fill(v,C)}}});const x=new Set;let A=null,J=[],Q=0,aa=0;var B=h.CanvasRenderer=m.extend(\"Renderer\",{__construct:function(q){this.__parent.__construct.call(this);this.oa=[1,0,0,1,0,0];this.ha=q.getContext(\"2d\");this.Sa=q;this.ja=[]},save:function(){this.oa.push(...this.oa.slice(this.oa.length-6));this.ja.push(this.ha.save.bind(this.ha))},restore:function(){const q=this.oa.length-6;if(6>q)throw\"restore() called without matching save().\";this.oa.splice(q);this.ja.push(this.ha.restore.bind(this.ha))},\ntransform:function(q,v,C,D,z,E){const F=this.oa,G=F.length-6;F.splice(G,6,F[G]*q+F[G+2]*v,F[G+1]*q+F[G+3]*v,F[G]*C+F[G+2]*D,F[G+1]*C+F[G+3]*D,F[G]*z+F[G+2]*E+F[G+4],F[G+1]*z+F[G+3]*E+F[G+5]);this.ja.push(this.ha.transform.bind(this.ha,q,v,C,D,z,E))},rotate:function(q){const v=Math.sin(q);q=Math.cos(q);this.transform(q,v,-v,q,0,0)},_drawPath:function(q,v){this.ja.push(v.draw.bind(v,this.ha,q.pa,q.Ta===t?\"evenodd\":\"nonzero\"))},_drawRiveImage:function(q,v,C){var D=q.ob;if(D){var z=this.ha,E=b(v);this.ja.push(function(){z.globalCompositeOperation=\nE;z.globalAlpha=C;z.drawImage(D,0,0);z.globalAlpha=1})}},_getMatrix:function(q){const v=this.oa,C=v.length-6;for(let D=0;6>D;++D)q[D]=v[C+D]},_drawImageMesh:function(q,v,C,D,z,E,F,G,T,K){var W=this.ha.canvas.width,N=this.ha.canvas.height;const sb=T-F,tb=K-G;F=Math.max(F,0);G=Math.max(G,0);T=Math.min(T,W);K=Math.min(K,N);const ua=T-F,va=K-G;console.assert(ua<=Math.min(sb,W));console.assert(va<=Math.min(tb,N));if(!(0>=ua||0>=va)){T=ua<sb||va<tb;W=K=1;var ia=Math.ceil(ua*K),ja=Math.ceil(va*W);N=ka.Mb();\nia>N&&(K*=N/ia,ia=N);ja>N&&(W*=N/ja,ja=N);A||(A=new h.DynamicRectanizer(N),A.reset(512,512));N=A.addRect(ia,ja);0>N&&(c(),x.add(this),N=A.addRect(ia,ja),console.assert(0<=N));var ub=N&65535,vb=N>>16;J.push({xa:this.oa.slice(this.oa.length-6),image:q,Va:ub,Wa:vb,Nb:F,Ob:G,$b:ia,cb:ja,Ga:K,Ha:W,Ra:new Float32Array(D),mb:new Float32Array(z),indices:new Uint16Array(E),Pb:T,jb:q.Ma<<1|(T?1:0)});Q+=D.length;aa+=E.length;var oa=this.ha,kc=b(v);this.ja.push(function(){oa.save();oa.resetTransform();oa.globalCompositeOperation=\nkc;oa.globalAlpha=C;oa.drawImage(ka.canvas(),ub,vb,ia,ja,F,G,ua,va);oa.restore()})}},_clipPath:function(q){this.ja.push(this.ha.clip.bind(this.ha,q.pa,q.Ta===t?\"evenodd\":\"nonzero\"))},clear:function(){x.add(this);this.ja.push(this.ha.clearRect.bind(this.ha,0,0,this.Sa.width,this.Sa.height))},flush:function(){},translate:function(q,v){this.transform(1,0,0,1,q,v)}});h.makeRenderer=function(q){const v=new B(q),C=v.ha;return new Proxy(v,{get(D,z){if(\"function\"===typeof D[z])return function(...E){return D[z].apply(D,\nE)};if(\"function\"===typeof C[z]){if(-1<ha.indexOf(z))throw Error(\"RiveException: Method call to '\"+z+\"()' is not allowed, as the renderer cannot immediately pass through the return                 values of any canvas 2d context methods.\");return function(...E){v.ja.push(C[z].bind(C,...E))}}return D[z]},set(D,z,E){if(z in C)return C[z]=E,!0}})};h.decodeImage=function(q,v){(new n({Aa:v})).decode(q)};h.renderFactory={makeRenderPaint:function(){return new H},makeRenderPath:function(){return new w},makeRenderImage:function(){let q=\nZa;return new n({Fa:()=>{q.total++},Aa:()=>{q.loaded++;if(q.loaded===q.total){const v=q.ready;v&&(v(),q.ready=null)}}})}};let fa=h.load,Za=null;h.load=function(q,v,C=!0){const D=new h.FallbackFileAssetLoader;void 0!==v&&D.addLoader(v);C&&(v=new h.CDNFileAssetLoader,D.addLoader(v));return new Promise(function(z){let E=null;Za={total:0,loaded:0,ready:function(){z(E)}};E=fa(q,D);0==Za.total&&z(E)})};d=new da;h.requestAnimationFrame=d.requestAnimationFrame.bind(d);h.cancelAnimationFrame=d.cancelAnimationFrame.bind(d);\nh.enableFPSCounter=d.Bb.bind(d);h.disableFPSCounter=d.yb;d.fb=c;h.cleanup=function(){A&&A.delete()}};const ma=h.onRuntimeInitialized;\nh.onRuntimeInitialized=function(){ma&&ma();let b=h.decodeFont;h.decodeFont=function(c,d){c=b(c);d(c)};const a=h.FileAssetLoader;h.ptrToAsset=c=>{let d=h.ptrToFileAsset(c);return d.isImage?h.ptrToImageAsset(c):d.isFont?h.ptrToFontAsset(c):d};h.CustomFileAssetLoader=a.extend(\"CustomFileAssetLoader\",{__construct:function({loadContents:c}){this.__parent.__construct.call(this);this.pb=c},loadContents:function(c,d){c=h.ptrToAsset(c);return this.pb(c,d)}});h.CDNFileAssetLoader=a.extend(\"CDNFileAssetLoader\",\n{__construct:function(){this.__parent.__construct.call(this)},loadContents:function(c){let d=h.ptrToAsset(c);c=d.cdnUuid;if(\"\"===c)return!1;(function(e,f){var m=new XMLHttpRequest;m.responseType=\"arraybuffer\";m.onreadystatechange=function(){4==m.readyState&&200==m.status&&f(m)};m.open(\"GET\",e,!0);m.send(null)})(d.cdnBaseUrl+\"/\"+c,e=>{d.decode(new Uint8Array(e.response))});return!0}});h.FallbackFileAssetLoader=a.extend(\"FallbackFileAssetLoader\",{__construct:function(){this.__parent.__construct.call(this);\nthis.eb=[]},addLoader:function(c){this.eb.push(c)},loadContents:function(c,d){for(let e of this.eb)if(e.loadContents(c,d))return!0;return!1}})};var na=Object.assign({},h),pa=\"./this.program\",qa=\"object\"==typeof window,ra=\"function\"==typeof importScripts,y=\"\",sa,ta;\nif(qa||ra)ra?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),_scriptDir&&(y=_scriptDir),0!==y.indexOf(\"blob:\")?y=y.substr(0,y.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):y=\"\",ra&&(ta=b=>{var a=new XMLHttpRequest;a.open(\"GET\",b,!1);a.responseType=\"arraybuffer\";a.send(null);return new Uint8Array(a.response)}),sa=(b,a,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",b,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?\na(d.response):c()};d.onerror=c;d.send(null)};var wa=h.print||console.log.bind(console),xa=h.printErr||console.error.bind(console);Object.assign(h,na);na=null;h.thisProgram&&(pa=h.thisProgram);var ya;h.wasmBinary&&(ya=h.wasmBinary);var noExitRuntime=h.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&za(\"no native wasm support detected\");var Aa,I,Ba=!1,Ca,L,Da,Ea,M,O,Fa,Ga;\nfunction Ha(){var b=Aa.buffer;h.HEAP8=Ca=new Int8Array(b);h.HEAP16=Da=new Int16Array(b);h.HEAP32=M=new Int32Array(b);h.HEAPU8=L=new Uint8Array(b);h.HEAPU16=Ea=new Uint16Array(b);h.HEAPU32=O=new Uint32Array(b);h.HEAPF32=Fa=new Float32Array(b);h.HEAPF64=Ga=new Float64Array(b)}var Ia,Ja=[],Ka=[],La=[];function Ma(){var b=h.preRun.shift();Ja.unshift(b)}var Na=0,Oa=null,Pa=null;\nfunction za(b){if(h.onAbort)h.onAbort(b);b=\"Aborted(\"+b+\")\";xa(b);Ba=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ca(b);throw b;}function Qa(b){return b.startsWith(\"data:application/octet-stream;base64,\")}var Ra;Ra=\"canvas_advanced.wasm\";if(!Qa(Ra)){var Sa=Ra;Ra=h.locateFile?h.locateFile(Sa,y):y+Sa}function Ta(b){if(b==Ra&&ya)return new Uint8Array(ya);if(ta)return ta(b);throw\"both async and sync fetching of the wasm failed\";}\nfunction Ua(b){if(!ya&&(qa||ra)){if(\"function\"==typeof fetch&&!b.startsWith(\"file://\"))return fetch(b,{credentials:\"same-origin\"}).then(a=>{if(!a.ok)throw\"failed to load wasm binary file at '\"+b+\"'\";return a.arrayBuffer()}).catch(()=>Ta(b));if(sa)return new Promise((a,c)=>{sa(b,d=>a(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>Ta(b))}function Va(b,a,c){return Ua(b).then(d=>WebAssembly.instantiate(d,a)).then(d=>d).then(c,d=>{xa(\"failed to asynchronously prepare wasm: \"+d);za(d)})}\nfunction Wa(b,a){var c=Ra;return ya||\"function\"!=typeof WebAssembly.instantiateStreaming||Qa(c)||c.startsWith(\"file://\")||\"function\"!=typeof fetch?Va(c,b,a):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,b).then(a,function(e){xa(\"wasm streaming compile failed: \"+e);xa(\"falling back to ArrayBuffer instantiation\");return Va(c,b,a)}))}var Xa=b=>{for(;0<b.length;)b.shift()(h)};\nfunction Ya(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?`_${b}`:b}function $a(b,a){b=Ya(b);return{[b]:function(){return a.apply(this,arguments)}}[b]}function ab(){this.qa=[void 0];this.bb=[]}var P=new ab,bb=void 0;function R(b){throw new bb(b);}\nvar S=b=>{b||R(\"Cannot use deleted val. handle = \"+b);return P.get(b).value},U=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:return P.tb({ib:1,value:b})}};\nfunction cb(b){var a=Error,c=$a(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:`${this.name}: ${this.message}`};return c}var db=void 0,eb=void 0;function V(b){for(var a=\"\";L[b];)a+=eb[L[b++]];return a}var fb=[];\nfunction gb(){for(;fb.length;){var b=fb.pop();b.ba.wa=!1;b[\"delete\"]()}}var hb=void 0,ib={};function jb(b,a){for(void 0===a&&R(\"ptr should not be undefined\");b.fa;)a=b.Ba(a),b=b.fa;return a}var kb={};function lb(b){b=mb(b);var a=V(b);nb(b);return a}function ob(b,a){var c=kb[b];void 0===c&&R(a+\" has unknown type \"+lb(b));return c}function pb(){}var qb=!1;function rb(b){--b.count.value;0===b.count.value&&(b.ia?b.la.ra(b.ia):b.ea.ca.ra(b.da))}\nfunction wb(b,a,c){if(a===c)return b;if(void 0===c.fa)return null;b=wb(b,a,c.fa);return null===b?null:c.zb(b)}var xb={};function yb(b,a){a=jb(b,a);return ib[a]}var zb=void 0;function Ab(b){throw new zb(b);}function Bb(b,a){a.ea&&a.da||Ab(\"makeClassHandle requires ptr and ptrType\");!!a.la!==!!a.ia&&Ab(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return Cb(Object.create(b,{ba:{value:a}}))}\nfunction Cb(b){if(\"undefined\"===typeof FinalizationRegistry)return Cb=a=>a,b;qb=new FinalizationRegistry(a=>{rb(a.ba)});Cb=a=>{var c=a.ba;c.ia&&qb.register(a,{ba:c},a);return a};pb=a=>{qb.unregister(a)};return Cb(b)}var Db={};function Eb(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function Fb(b){return this.fromWireType(M[b>>2])}var Gb={},Hb={};\nfunction X(b,a,c){function d(l){l=c(l);l.length!==b.length&&Ab(\"Mismatched type converter count\");for(var p=0;p<b.length;++p)Y(b[p],l[p])}b.forEach(function(l){Hb[l]=a});var e=Array(a.length),f=[],m=0;a.forEach((l,p)=>{kb.hasOwnProperty(l)?e[p]=kb[l]:(f.push(l),Gb.hasOwnProperty(l)||(Gb[l]=[]),Gb[l].push(()=>{e[p]=kb[l];++m;m===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction Ib(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(`Unknown type size: ${b}`);}}function Jb(b,a,c={}){var d=a.name;b||R(`type \"${d}\" must have a positive integer typeid pointer`);if(kb.hasOwnProperty(b)){if(c.Jb)return;R(`Cannot register type '${d}' twice`)}kb[b]=a;delete Hb[b];Gb.hasOwnProperty(b)&&(a=Gb[b],delete Gb[b],a.forEach(e=>e()))}\nfunction Y(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");Jb(b,a,c)}function Kb(b){R(b.ba.ea.ca.name+\" instance already deleted\")}function Lb(){}\nfunction Mb(b,a,c){if(void 0===b[a].ga){var d=b[a];b[a]=function(){b[a].ga.hasOwnProperty(arguments.length)||R(`Function '${c}' called with an invalid number of arguments (${arguments.length}) - expects one of (${b[a].ga})!`);return b[a].ga[arguments.length].apply(this,arguments)};b[a].ga=[];b[a].ga[d.va]=d}}\nfunction Nb(b,a,c){h.hasOwnProperty(b)?((void 0===c||void 0!==h[b].ga&&void 0!==h[b].ga[c])&&R(`Cannot register public name '${b}' twice`),Mb(h,b,b),h.hasOwnProperty(c)&&R(`Cannot register multiple overloads of a function with the same number of arguments (${c})!`),h[b].ga[c]=a):(h[b]=a,void 0!==c&&(h[b].ac=c))}function Ob(b,a,c,d,e,f,m,l){this.name=b;this.constructor=a;this.ma=c;this.ra=d;this.fa=e;this.Eb=f;this.Ba=m;this.zb=l;this.gb=[]}\nfunction Pb(b,a,c){for(;a!==c;)a.Ba||R(`Expected null or instance of ${c.name}, got an instance of ${a.name}`),b=a.Ba(b),a=a.fa;return b}function Qb(b,a){if(null===a)return this.Na&&R(`null is not a valid ${this.name}`),0;a.ba||R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);a.ba.da||R(`Cannot pass deleted object as a pointer of type ${this.name}`);return Pb(a.ba.da,a.ba.ea.ca,this.ca)}\nfunction Sb(b,a){if(null===a){this.Na&&R(`null is not a valid ${this.name}`);if(this.Ea){var c=this.Oa();null!==b&&b.push(this.ra,c);return c}return 0}a.ba||R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);a.ba.da||R(`Cannot pass deleted object as a pointer of type ${this.name}`);!this.Da&&a.ba.ea.Da&&R(`Cannot convert argument of type ${a.ba.la?a.ba.la.name:a.ba.ea.name} to parameter type ${this.name}`);c=Pb(a.ba.da,a.ba.ea.ca,this.ca);if(this.Ea)switch(void 0===a.ba.ia&&R(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Vb){case 0:a.ba.la===this?c=a.ba.ia:R(`Cannot convert argument of type ${a.ba.la?a.ba.la.name:a.ba.ea.name} to parameter type ${this.name}`);break;case 1:c=a.ba.ia;break;case 2:if(a.ba.la===this)c=a.ba.ia;else{var d=a.clone();c=this.Rb(c,U(function(){d[\"delete\"]()}));null!==b&&b.push(this.ra,c)}break;default:R(\"Unsupporting sharing policy\")}return c}\nfunction Tb(b,a){if(null===a)return this.Na&&R(`null is not a valid ${this.name}`),0;a.ba||R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);a.ba.da||R(`Cannot pass deleted object as a pointer of type ${this.name}`);a.ba.ea.Da&&R(`Cannot convert argument of type ${a.ba.ea.name} to parameter type ${this.name}`);return Pb(a.ba.da,a.ba.ea.ca,this.ca)}\nfunction Ub(b,a,c,d){this.name=b;this.ca=a;this.Na=c;this.Da=d;this.Ea=!1;this.ra=this.Rb=this.Oa=this.hb=this.Vb=this.Qb=void 0;void 0!==a.fa?this.toWireType=Sb:(this.toWireType=d?Qb:Tb,this.ka=null)}function Vb(b,a,c){h.hasOwnProperty(b)||Ab(\"Replacing nonexistant public symbol\");void 0!==h[b].ga&&void 0!==c?h[b].ga[c]=a:(h[b]=a,h[b].va=c)}\nvar Wb=(b,a)=>{var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=h[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=Ia.get(a).apply(null,c);return d}};function Z(b,a){b=V(b);var c=b.includes(\"j\")?Wb(b,a):Ia.get(a);\"function\"!=typeof c&&R(`unknown function pointer with signature ${b}: ${a}`);return c}var Xb=void 0;\nfunction Yb(b,a){function c(f){e[f]||kb[f]||(Hb[f]?Hb[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new Xb(`${b}: `+d.map(lb).join([\", \"]));}\nfunction Zb(b,a,c,d,e){var f=a.length;2>f&&R(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var m=null!==a[1]&&null!==c,l=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].ka){l=!0;break}var p=\"void\"!==a[0].name,k=f-2,r=Array(k),u=[],t=[];return function(){arguments.length!==k&&R(`function ${b} called with ${arguments.length} arguments, expected ${k} args!`);t.length=0;u.length=m?2:1;u[0]=e;if(m){var g=a[1].toWireType(t,this);u[1]=g}for(var n=0;n<k;++n)r[n]=\na[n+2].toWireType(t,arguments[n]),u.push(r[n]);n=d.apply(null,u);if(l)Eb(t);else for(var w=m?1:2;w<a.length;w++){var H=1===w?g:r[w-2];null!==a[w].ka&&a[w].ka(H)}g=p?a[0].fromWireType(n):void 0;return g}}function $b(b,a){for(var c=[],d=0;d<b;d++)c.push(O[a+4*d>>2]);return c}\nfunction ac(b,a,c){b instanceof Object||R(`${c} with invalid \"this\": ${b}`);b instanceof a.ca.constructor||R(`${c} incompatible with \"this\" of type ${b.constructor.name}`);b.ba.da||R(`cannot call emscripten binding method ${c} on deleted object`);return Pb(b.ba.da,b.ba.ea.ca,a.ca)}function bc(b){b>=P.Xa&&0===--P.get(b).ib&&P.wb(b)}\nfunction cc(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?Ca:L)[d])};case 1:return function(d){return this.fromWireType((c?Da:Ea)[d>>1])};case 2:return function(d){return this.fromWireType((c?M:O)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function Rb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction dc(b,a){switch(a){case 2:return function(c){return this.fromWireType(Fa[c>>2])};case 3:return function(c){return this.fromWireType(Ga[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction ec(b,a,c){switch(a){case 0:return c?function(d){return Ca[d]}:function(d){return L[d]};case 1:return c?function(d){return Da[d>>1]}:function(d){return Ea[d>>1]};case 2:return c?function(d){return M[d>>2]}:function(d){return O[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}\nvar fc=(b,a,c,d)=>{if(0<d){d=c+d-1;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var m=b.charCodeAt(++e);f=65536+((f&1023)<<10)|m&1023}if(127>=f){if(c>=d)break;a[c++]=f}else{if(2047>=f){if(c+1>=d)break;a[c++]=192|f>>6}else{if(65535>=f){if(c+2>=d)break;a[c++]=224|f>>12}else{if(c+3>=d)break;a[c++]=240|f>>18;a[c++]=128|f>>12&63}a[c++]=128|f>>6&63}a[c++]=128|f&63}}a[c]=0}},gc=b=>{for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);127>=d?a++:2047>=d?a+=2:55296<=d&&57343>=\nd?(a+=4,++c):a+=3}return a},hc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,ic=(b,a,c)=>{var d=a+c;for(c=a;b[c]&&!(c>=d);)++c;if(16<c-a&&b.buffer&&hc)return hc.decode(b.subarray(a,c));for(d=\"\";a<c;){var e=b[a++];if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var m=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|m:(e&7)<<18|f<<12|m<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},\njc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,lc=(b,a)=>{var c=b>>1;for(var d=c+a/2;!(c>=d)&&Ea[c];)++c;c<<=1;if(32<c-b&&jc)return jc.decode(L.subarray(b,c));c=\"\";for(d=0;!(d>=a/2);++d){var e=Da[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c},mc=(b,a,c)=>{void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)Da[a>>1]=b.charCodeAt(e),a+=2;Da[a>>1]=0;return a-d},nc=b=>2*b.length,oc=(b,a)=>{for(var c=0,d=\"\";!(c>=a/\n4);){var e=M[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d},pc=(b,a,c)=>{void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var m=b.charCodeAt(++e);f=65536+((f&1023)<<10)|m&1023}M[a>>2]=f;a+=4;if(a+4>c)break}M[a>>2]=0;return a-d},qc=b=>{for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a},rc={};\nfunction sc(b){var a=rc[b];return void 0===a?V(b):a}var tc=[];function uc(b){var a=tc.length;tc.push(b);return a}function vc(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=ob(O[a+4*d>>2],\"parameter \"+d);return c}\nvar wc=[],xc={},zc=()=>{if(!yc){var b={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:pa||\"./this.program\"},a;for(a in xc)void 0===xc[a]?delete b[a]:b[a]=xc[a];var c=[];for(a in b)c.push(`${a}=${b[a]}`);yc=c}return yc},yc,Ac=[null,[],[]],Bc=b=>0===b%4&&(0!==b%100||0===b%400),Cc=[31,29,31,30,31,30,31,31,30,31,30,31],Dc=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Ec(b){var a=Array(gc(b)+1);fc(b,a,0,a.length);return a}\nvar Fc=(b,a,c,d)=>{function e(g,n,w){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<n;)g=w[0]+g;return g}function f(g,n){return e(g,n,\"0\")}function m(g,n){function w(x){return 0>x?-1:0<x?1:0}var H;0===(H=w(g.getFullYear()-n.getFullYear()))&&0===(H=w(g.getMonth()-n.getMonth()))&&(H=w(g.getDate()-n.getDate()));return H}function l(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function p(g){var n=g.ta;for(g=new Date((new Date(g.ua+1900,0,1)).getTime());0<n;){var w=g.getMonth(),H=(Bc(g.getFullYear())?Cc:Dc)[w];if(n>H-g.getDate())n-=H-g.getDate()+1,g.setDate(1),11>w?g.setMonth(w+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+n);break}}w=new Date(g.getFullYear()+1,0,4);n=l(new Date(g.getFullYear(),\n0,4));w=l(w);return 0>=m(n,g)?0>=m(w,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var k=M[d+40>>2];d={Yb:M[d>>2],Xb:M[d+4>>2],Ia:M[d+8>>2],Qa:M[d+12>>2],Ja:M[d+16>>2],ua:M[d+20>>2],na:M[d+24>>2],ta:M[d+28>>2],bc:M[d+32>>2],Wb:M[d+36>>2],Zb:k?k?ic(L,k):\"\":\"\"};c=c?ic(L,c):\"\";k={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\n\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in k)c=c.replace(new RegExp(r,\"g\"),k[r]);var u=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),t=\"January February March April May June July August September October November December\".split(\" \");k={\"%a\":g=>u[g.na].substring(0,3),\"%A\":g=>u[g.na],\"%b\":g=>t[g.Ja].substring(0,3),\"%B\":g=>t[g.Ja],\"%C\":g=>f((g.ua+1900)/\n100|0,2),\"%d\":g=>f(g.Qa,2),\"%e\":g=>e(g.Qa,2,\" \"),\"%g\":g=>p(g).toString().substring(2),\"%G\":g=>p(g),\"%H\":g=>f(g.Ia,2),\"%I\":g=>{g=g.Ia;0==g?g=12:12<g&&(g-=12);return f(g,2)},\"%j\":g=>{for(var n=0,w=0;w<=g.Ja-1;n+=(Bc(g.ua+1900)?Cc:Dc)[w++]);return f(g.Qa+n,3)},\"%m\":g=>f(g.Ja+1,2),\"%M\":g=>f(g.Xb,2),\"%n\":()=>\"\\n\",\"%p\":g=>0<=g.Ia&&12>g.Ia?\"AM\":\"PM\",\"%S\":g=>f(g.Yb,2),\"%t\":()=>\"\\t\",\"%u\":g=>g.na||7,\"%U\":g=>f(Math.floor((g.ta+7-g.na)/7),2),\"%V\":g=>{var n=Math.floor((g.ta+7-(g.na+6)%7)/7);2>=(g.na+371-g.ta-\n2)%7&&n++;if(n)53==n&&(w=(g.na+371-g.ta)%7,4==w||3==w&&Bc(g.ua)||(n=1));else{n=52;var w=(g.na+7-g.ta-1)%7;(4==w||5==w&&Bc(g.ua%400-1))&&n++}return f(n,2)},\"%w\":g=>g.na,\"%W\":g=>f(Math.floor((g.ta+7-(g.na+6)%7)/7),2),\"%y\":g=>(g.ua+1900).toString().substring(2),\"%Y\":g=>g.ua+1900,\"%z\":g=>{g=g.Wb;var n=0<=g;g=Math.abs(g)/60;return(n?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":g=>g.Zb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(r in k)c.includes(r)&&(c=c.replace(new RegExp(r,\"g\"),k[r](d)));\nc=c.replace(/\\0\\0/g,\"%\");r=Ec(c);if(r.length>a)return 0;Ca.set(r,b);return r.length-1};Object.assign(ab.prototype,{get(b){return this.qa[b]},has(b){return void 0!==this.qa[b]},tb(b){var a=this.bb.pop()||this.qa.length;this.qa[a]=b;return a},wb(b){this.qa[b]=void 0;this.bb.push(b)}});bb=h.BindingError=class extends Error{constructor(b){super(b);this.name=\"BindingError\"}};P.qa.push({value:void 0},{value:null},{value:!0},{value:!1});P.Xa=P.qa.length;\nh.count_emval_handles=function(){for(var b=0,a=P.Xa;a<P.qa.length;++a)void 0!==P.qa[a]&&++b;return b};db=h.PureVirtualError=cb(\"PureVirtualError\");for(var Gc=Array(256),Hc=0;256>Hc;++Hc)Gc[Hc]=String.fromCharCode(Hc);eb=Gc;h.getInheritedInstanceCount=function(){return Object.keys(ib).length};h.getLiveInheritedInstances=function(){var b=[],a;for(a in ib)ib.hasOwnProperty(a)&&b.push(ib[a]);return b};h.flushPendingDeletes=gb;h.setDelayFunction=function(b){hb=b;fb.length&&hb&&hb(gb)};\nzb=h.InternalError=class extends Error{constructor(b){super(b);this.name=\"InternalError\"}};Lb.prototype.isAliasOf=function(b){if(!(this instanceof Lb&&b instanceof Lb))return!1;var a=this.ba.ea.ca,c=this.ba.da,d=b.ba.ea.ca;for(b=b.ba.da;a.fa;)c=a.Ba(c),a=a.fa;for(;d.fa;)b=d.Ba(b),d=d.fa;return a===d&&c===b};\nLb.prototype.clone=function(){this.ba.da||Kb(this);if(this.ba.ya)return this.ba.count.value+=1,this;var b=Cb,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.ba;b=b(c.call(a,d,{ba:{value:{count:e.count,wa:e.wa,ya:e.ya,da:e.da,ea:e.ea,ia:e.ia,la:e.la}}}));b.ba.count.value+=1;b.ba.wa=!1;return b};Lb.prototype[\"delete\"]=function(){this.ba.da||Kb(this);this.ba.wa&&!this.ba.ya&&R(\"Object already scheduled for deletion\");pb(this);rb(this.ba);this.ba.ya||(this.ba.ia=void 0,this.ba.da=void 0)};\nLb.prototype.isDeleted=function(){return!this.ba.da};Lb.prototype.deleteLater=function(){this.ba.da||Kb(this);this.ba.wa&&!this.ba.ya&&R(\"Object already scheduled for deletion\");fb.push(this);1===fb.length&&hb&&hb(gb);this.ba.wa=!0;return this};Ub.prototype.Fb=function(b){this.hb&&(b=this.hb(b));return b};Ub.prototype.Ya=function(b){this.ra&&this.ra(b)};Ub.prototype.argPackAdvance=8;Ub.prototype.readValueFromPointer=Fb;Ub.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nUb.prototype.fromWireType=function(b){function a(){return this.Ea?Bb(this.ca.ma,{ea:this.Qb,da:c,la:this,ia:b}):Bb(this.ca.ma,{ea:this,da:b})}var c=this.Fb(b);if(!c)return this.Ya(b),null;var d=yb(this.ca,c);if(void 0!==d){if(0===d.ba.count.value)return d.ba.da=c,d.ba.ia=b,d.clone();d=d.clone();this.Ya(b);return d}d=this.ca.Eb(c);d=xb[d];if(!d)return a.call(this);d=this.Da?d.ub:d.pointerType;var e=wb(c,this.ca,d.ca);return null===e?a.call(this):this.Ea?Bb(d.ca.ma,{ea:d,da:e,la:this,ia:b}):Bb(d.ca.ma,\n{ea:d,da:e})};Xb=h.UnboundTypeError=cb(\"UnboundTypeError\");\nvar Jc={N:function(b,a,c){b=V(b);a=ob(a,\"wrapper\");c=S(c);var d=[].slice,e=a.ca,f=e.ma,m=e.fa.ma,l=e.fa.constructor;b=$a(b,function(){e.fa.gb.forEach(function(k){if(this[k]===m[k])throw new db(`Pure virtual function ${k} must be implemented in JavaScript`);}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&R(\"Pass correct 'this' to __construct\");var k=l.implement.apply(void 0,[this].concat(d.call(arguments)));\npb(k);var r=k.ba;k.notifyOnDestruction();r.ya=!0;Object.defineProperties(this,{ba:{value:r}});Cb(this);k=r.da;k=jb(e,k);ib.hasOwnProperty(k)?R(`Tried to register registered instance: ${k}`):ib[k]=this};f.__destruct=function(){this===f&&R(\"Pass correct 'this' to __destruct\");pb(this);var k=this.ba.da;k=jb(e,k);ib.hasOwnProperty(k)?delete ib[k]:R(`Tried to unregister unregistered instance: ${k}`)};b.prototype=Object.create(f);for(var p in c)b.prototype[p]=c[p];return U(b)},O:function(b){var a=Db[b];\ndelete Db[b];var c=a.Oa,d=a.ra,e=a.ab,f=e.map(m=>m.Ib).concat(e.map(m=>m.Tb));X([b],f,m=>{var l={};e.forEach((p,k)=>{var r=m[k],u=p.Gb,t=p.Hb,g=m[k+e.length],n=p.Sb,w=p.Ub;l[p.Cb]={read:H=>r.fromWireType(u(t,H)),write:(H,x)=>{var A=[];n(w,H,g.toWireType(A,x));Eb(A)}}});return[{name:a.name,fromWireType:function(p){var k={},r;for(r in l)k[r]=l[r].read(p);d(p);return k},toWireType:function(p,k){for(var r in l)if(!(r in k))throw new TypeError(`Missing field: \"${r}\"`);var u=c();for(r in l)l[r].write(u,\nk[r]);null!==p&&p.push(d,u);return u},argPackAdvance:8,readValueFromPointer:Fb,ka:d}]})},C:function(){},K:function(b,a,c,d,e){var f=Ib(c);a=V(a);Y(b,{name:a,fromWireType:function(m){return!!m},toWireType:function(m,l){return l?d:e},argPackAdvance:8,readValueFromPointer:function(m){if(1===c)var l=Ca;else if(2===c)l=Da;else if(4===c)l=M;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(l[m>>f])},ka:null})},f:function(b,a,c,d,e,f,m,l,p,k,r,u,t){r=V(r);f=Z(e,f);l&&(l=\nZ(m,l));k&&(k=Z(p,k));t=Z(u,t);var g=Ya(r);Nb(g,function(){Yb(`Cannot construct ${r} due to unbound types`,[d])});X([b,a,c],d?[d]:[],function(n){n=n[0];if(d){var w=n.ca;var H=w.ma}else H=Lb.prototype;n=$a(g,function(){if(Object.getPrototypeOf(this)!==x)throw new bb(\"Use 'new' to construct \"+r);if(void 0===A.sa)throw new bb(r+\" has no accessible constructor\");var Q=A.sa[arguments.length];if(void 0===Q)throw new bb(`Tried to invoke ctor of ${r} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(A.sa).toString()}) parameters instead!`);\nreturn Q.apply(this,arguments)});var x=Object.create(H,{constructor:{value:n}});n.prototype=x;var A=new Ob(r,n,x,t,w,f,l,k);A.fa&&(void 0===A.fa.Ca&&(A.fa.Ca=[]),A.fa.Ca.push(A));w=new Ub(r,A,!0,!1);H=new Ub(r+\"*\",A,!1,!1);var J=new Ub(r+\" const*\",A,!1,!0);xb[b]={pointerType:H,ub:J};Vb(g,n);return[w,H,J]})},j:function(b,a,c,d,e,f,m){var l=$b(c,d);a=V(a);f=Z(e,f);X([],[b],function(p){function k(){Yb(`Cannot call ${r} due to unbound types`,l)}p=p[0];var r=`${p.name}.${a}`;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\nvar u=p.ca.constructor;void 0===u[a]?(k.va=c-1,u[a]=k):(Mb(u,a,r),u[a].ga[c-1]=k);X([],l,function(t){t=Zb(r,[t[0],null].concat(t.slice(1)),null,f,m);void 0===u[a].ga?(t.va=c-1,u[a]=t):u[a].ga[c-1]=t;if(p.ca.Ca)for(const g of p.ca.Ca)g.constructor.hasOwnProperty(a)||(g.constructor[a]=t);return[]});return[]})},x:function(b,a,c,d,e,f,m,l){a=V(a);f=Z(e,f);X([],[b],function(p){p=p[0];var k=`${p.name}.${a}`,r={get(){Yb(`Cannot access ${k} due to unbound types`,[c])},enumerable:!0,configurable:!0};r.set=\nl?()=>{Yb(`Cannot access ${k} due to unbound types`,[c])}:()=>{R(`${k} is a read-only property`)};Object.defineProperty(p.ca.constructor,a,r);X([],[c],function(u){u=u[0];var t={get(){return u.fromWireType(f(d))},enumerable:!0};l&&(l=Z(m,l),t.set=g=>{var n=[];l(d,u.toWireType(n,g));Eb(n)});Object.defineProperty(p.ca.constructor,a,t);return[]});return[]})},s:function(b,a,c,d,e,f){var m=$b(a,c);e=Z(d,e);X([],[b],function(l){l=l[0];var p=`constructor ${l.name}`;void 0===l.ca.sa&&(l.ca.sa=[]);if(void 0!==\nl.ca.sa[a-1])throw new bb(`Cannot register multiple constructors with identical number of parameters (${a-1}) for class '${l.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);l.ca.sa[a-1]=()=>{Yb(`Cannot construct ${l.name} due to unbound types`,m)};X([],m,function(k){k.splice(1,0,null);l.ca.sa[a-1]=Zb(p,k,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,m,l){var p=$b(c,d);a=V(a);f=Z(e,f);X([],[b],function(k){function r(){Yb(`Cannot call ${u} due to unbound types`,\np)}k=k[0];var u=`${k.name}.${a}`;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);l&&k.ca.gb.push(a);var t=k.ca.ma,g=t[a];void 0===g||void 0===g.ga&&g.className!==k.name&&g.va===c-2?(r.va=c-2,r.className=k.name,t[a]=r):(Mb(t,a,u),t[a].ga[c-2]=r);X([],p,function(n){n=Zb(u,n,k,f,m);void 0===t[a].ga?(n.va=c-2,t[a]=n):t[a].ga[c-2]=n;return[]});return[]})},e:function(b,a,c,d,e,f,m,l,p,k){a=V(a);e=Z(d,e);X([],[b],function(r){r=r[0];var u=`${r.name}.${a}`,t={get(){Yb(`Cannot access ${u} due to unbound types`,\n[c,m])},enumerable:!0,configurable:!0};t.set=p?()=>{Yb(`Cannot access ${u} due to unbound types`,[c,m])}:()=>{R(u+\" is a read-only property\")};Object.defineProperty(r.ca.ma,a,t);X([],p?[c,m]:[c],function(g){var n=g[0],w={get(){var x=ac(this,r,u+\" getter\");return n.fromWireType(e(f,x))},enumerable:!0};if(p){p=Z(l,p);var H=g[1];w.set=function(x){var A=ac(this,r,u+\" setter\"),J=[];p(k,A,H.toWireType(J,x));Eb(J)}}Object.defineProperty(r.ca.ma,a,w);return[]});return[]})},J:function(b,a){a=V(a);Y(b,{name:a,\nfromWireType:function(c){var d=S(c);bc(c);return d},toWireType:function(c,d){return U(d)},argPackAdvance:8,readValueFromPointer:Fb,ka:null})},p:function(b,a,c,d){function e(){}c=Ib(c);a=V(a);e.values={};Y(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,m){return m.value},argPackAdvance:8,readValueFromPointer:cc(a,c,d),ka:null});Nb(a,e)},d:function(b,a,c){var d=ob(b,\"enum\");a=V(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},\nconstructor:{value:$a(`${d.name}_${a}`,function(){})}});b.values[c]=d;b[a]=d},y:function(b,a,c){c=Ib(c);a=V(a);Y(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:dc(a,c),ka:null})},m:function(b,a,c,d,e,f){var m=$b(a,c);b=V(b);e=Z(d,e);Nb(b,function(){Yb(`Cannot call ${b} due to unbound types`,m)},a-1);X([],m,function(l){Vb(b,Zb(b,[l[0],null].concat(l.slice(1)),null,e,f),a-1);return[]})},l:function(b,a,c,d,e){a=V(a);-1===e&&(e=4294967295);\ne=Ib(c);var f=l=>l;if(0===d){var m=32-8*c;f=l=>l<<m>>>m}c=a.includes(\"unsigned\")?function(l,p){return p>>>0}:function(l,p){return p};Y(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:ec(a,e,0!==d),ka:null})},g:function(b,a,c){function d(f){f>>=2;var m=O;return new e(m.buffer,m[f+1],m[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][a];c=V(c);Y(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{Jb:!0})},\nz:function(b,a){a=V(a);var c=\"std::string\"===a;Y(b,{name:a,fromWireType:function(d){var e=O[d>>2],f=d+4;if(c)for(var m=f,l=0;l<=e;++l){var p=f+l;if(l==e||0==L[p]){m=m?ic(L,m,p-m):\"\";if(void 0===k)var k=m;else k+=String.fromCharCode(0),k+=m;m=p+1}}else{k=Array(e);for(l=0;l<e;++l)k[l]=String.fromCharCode(L[f+l]);k=k.join(\"\")}nb(d);return k},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f=\"string\"==typeof e;f||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof\nInt8Array||R(\"Cannot pass non-string to std::string\");var m=c&&f?gc(e):e.length;var l=Ic(4+m+1),p=l+4;O[l>>2]=m;if(c&&f)fc(e,L,p,m+1);else if(f)for(f=0;f<m;++f){var k=e.charCodeAt(f);255<k&&(nb(p),R(\"String has UTF-16 code units that do not fit in 8 bits\"));L[p+f]=k}else for(f=0;f<m;++f)L[p+f]=e[f];null!==d&&d.push(nb,l);return l},argPackAdvance:8,readValueFromPointer:Fb,ka:function(d){nb(d)}})},u:function(b,a,c){c=V(c);if(2===a){var d=lc;var e=mc;var f=nc;var m=()=>Ea;var l=1}else 4===a&&(d=oc,e=\npc,f=qc,m=()=>O,l=2);Y(b,{name:c,fromWireType:function(p){for(var k=O[p>>2],r=m(),u,t=p+4,g=0;g<=k;++g){var n=p+4+g*a;if(g==k||0==r[n>>l])t=d(t,n-t),void 0===u?u=t:(u+=String.fromCharCode(0),u+=t),t=n+a}nb(p);return u},toWireType:function(p,k){\"string\"!=typeof k&&R(`Cannot pass non-string to C++ string type ${c}`);var r=f(k),u=Ic(4+r+a);O[u>>2]=r>>l;e(k,u+4,r+a);null!==p&&p.push(nb,u);return u},argPackAdvance:8,readValueFromPointer:Fb,ka:function(p){nb(p)}})},Q:function(b,a,c,d,e,f){Db[b]={name:V(a),\nOa:Z(c,d),ra:Z(e,f),ab:[]}},P:function(b,a,c,d,e,f,m,l,p,k){Db[b].ab.push({Cb:V(a),Ib:c,Gb:Z(d,e),Hb:f,Tb:m,Sb:Z(l,p),Ub:k})},L:function(b,a){a=V(a);Y(b,{Lb:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},v:function(b,a,c){b=S(b);a=ob(a,\"emval::as\");var d=[],e=U(d);O[c>>2]=e;return a.toWireType(d,b)},w:function(b,a,c,d,e){b=tc[b];a=S(a);c=sc(c);var f=[];O[d>>2]=U(f);return b(a,c,f,e)},i:function(b,a,c,d){b=tc[b];a=S(a);c=sc(c);b(a,c,null,d)},c:bc,h:function(b,a){var c=\nvc(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(m){return m.name}).join(\"_\")+\"$\";var e=wc[a];if(void 0!==e)return e;var f=Array(b-1);e=uc((m,l,p,k)=>{for(var r=0,u=0;u<b-1;++u)f[u]=c[u+1].readValueFromPointer(k+r),r+=c[u+1].argPackAdvance;m=m[l].apply(m,f);for(u=0;u<b-1;++u)c[u+1].xb&&c[u+1].xb(f[u]);if(!d.Lb)return d.toWireType(p,m)});return wc[a]=e},t:function(b){b=sc(b);return U(h[b])},M:function(b,a){b=S(b);a=S(a);return U(b[a])},n:function(b){4<b&&(P.get(b).ib+=1)},o:function(b){return U(sc(b))},\nA:function(){return U({})},q:function(b){var a=S(b);Eb(a);bc(b)},k:function(b,a,c){b=S(b);a=S(a);c=S(c);b[a]=c},r:function(b,a){b=ob(b,\"_emval_take_value\");b=b.readValueFromPointer(a);return U(b)},b:()=>{za(\"\")},E:b=>{var a=L.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);a:{e=e.min.call(e,2147483648,d+(65536-d%65536)%65536)-Aa.buffer.byteLength+65535>>>16;try{Aa.grow(e);Ha();var f=1;break a}catch(m){}f=void 0}if(f)return!0}return!1},\nF:(b,a)=>{var c=0;zc().forEach(function(d,e){var f=a+c;e=O[b+4*e>>2]=f;for(f=0;f<d.length;++f)Ca[e++>>0]=d.charCodeAt(f);Ca[e>>0]=0;c+=d.length+1});return 0},G:(b,a)=>{var c=zc();O[b>>2]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});O[a>>2]=d;return 0},H:()=>52,B:function(){return 70},I:(b,a,c,d)=>{for(var e=0,f=0;f<c;f++){var m=O[a>>2],l=O[a+4>>2];a+=8;for(var p=0;p<l;p++){var k=L[m+p],r=Ac[b];0===k||10===k?((1===b?wa:xa)(ic(r,0)),r.length=0):r.push(k)}e+=l}O[d>>2]=e;return 0},D:(b,a,c,\nd)=>Fc(b,a,c,d)};(function(){function b(c){I=c=c.exports;Aa=I.R;Ha();Ia=I.X;Ka.unshift(I.S);Na--;h.monitorRunDependencies&&h.monitorRunDependencies(Na);if(0==Na&&(null!==Oa&&(clearInterval(Oa),Oa=null),Pa)){var d=Pa;Pa=null;d()}return c}var a={a:Jc};Na++;h.monitorRunDependencies&&h.monitorRunDependencies(Na);if(h.instantiateWasm)try{return h.instantiateWasm(a,b)}catch(c){xa(\"Module.instantiateWasm callback failed with error: \"+c),ca(c)}Wa(a,function(c){b(c.instance)}).catch(ca);return{}})();\nvar nb=b=>(nb=I.T)(b),Ic=b=>(Ic=I.U)(b),mb=b=>(mb=I.V)(b);h.__embind_initialize_bindings=()=>(h.__embind_initialize_bindings=I.W)();h.dynCall_jiji=(b,a,c,d,e)=>(h.dynCall_jiji=I.Y)(b,a,c,d,e);h.dynCall_viijii=(b,a,c,d,e,f,m)=>(h.dynCall_viijii=I.Z)(b,a,c,d,e,f,m);h.dynCall_iiiiij=(b,a,c,d,e,f,m)=>(h.dynCall_iiiiij=I._)(b,a,c,d,e,f,m);h.dynCall_iiiiijj=(b,a,c,d,e,f,m,l,p)=>(h.dynCall_iiiiijj=I.$)(b,a,c,d,e,f,m,l,p);\nh.dynCall_iiiiiijj=(b,a,c,d,e,f,m,l,p,k)=>(h.dynCall_iiiiiijj=I.aa)(b,a,c,d,e,f,m,l,p,k);var Kc;Pa=function Lc(){Kc||Mc();Kc||(Pa=Lc)};\nfunction Mc(){function b(){if(!Kc&&(Kc=!0,h.calledRun=!0,!Ba)){Xa(Ka);ba(h);if(h.onRuntimeInitialized)h.onRuntimeInitialized();if(h.postRun)for(\"function\"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;){var a=h.postRun.shift();La.unshift(a)}Xa(La)}}if(!(0<Na)){if(h.preRun)for(\"function\"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)Ma();Xa(Ja);0<Na||(h.setStatus?(h.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){h.setStatus(\"\")},1);b()},1)):b())}}\nif(h.preInit)for(\"function\"==typeof h.preInit&&(h.preInit=[h.preInit]);0<h.preInit.length;)h.preInit.pop()();Mc();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rive);\n\n/***/ }),\n/* 2 */\n/***/ ((module) => {\n\nmodule.exports = JSON.parse('{\"name\":\"@rive-app/canvas\",\"version\":\"2.7.0\",\"description\":\"Rive\\'s canvas based web api.\",\"main\":\"rive.js\",\"homepage\":\"https://rive.app\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/rive-app/rive-wasm/tree/master/js\"},\"keywords\":[\"rive\",\"animation\"],\"author\":\"Rive\",\"contributors\":[\"Luigi Rosso <luigi@rive.app> (https://rive.app)\",\"Maxwell Talbot <max@rive.app> (https://rive.app)\",\"Arthur Vivian <arthur@rive.app> (https://rive.app)\",\"Umberto Sonnino <umberto@rive.app> (https://rive.app)\",\"Matthew Sullivan <matt.j.sullivan@gmail.com> (mailto:matt.j.sullivan@gmail.com)\"],\"license\":\"MIT\",\"files\":[\"rive.js\",\"rive.js.map\",\"rive.wasm\",\"rive.d.ts\",\"rive_advanced.mjs.d.ts\"],\"typings\":\"rive.d.ts\",\"dependencies\":{},\"browser\":{\"fs\":false,\"path\":false}}');\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLANK_URL: () => (/* reexport safe */ _sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__.BLANK_URL),\n/* harmony export */   registerTouchInteractions: () => (/* reexport safe */ _registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__.registerTouchInteractions),\n/* harmony export */   sanitizeUrl: () => (/* reexport safe */ _sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__.sanitizeUrl)\n/* harmony export */ });\n/* harmony import */ var _registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n\n\n\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerTouchInteractions: () => (/* binding */ registerTouchInteractions)\n/* harmony export */ });\nvar _this = undefined;\n/**\n * Returns the clientX and clientY properties from touch or mouse events. Also\n * calls preventDefault() on the event if it is a touchstart or touchmove to prevent\n * scrolling the page on mobile devices\n * @param event - Either a TouchEvent or a MouseEvent\n * @returns - Coordinates of the clientX and clientY properties from the touch/mouse event\n */\nvar getClientCoordinates = function (event) {\n    var _a, _b;\n    if ([\"touchstart\", \"touchmove\"].indexOf(event.type) > -1 &&\n        ((_a = event.touches) === null || _a === void 0 ? void 0 : _a.length)) {\n        event.preventDefault();\n        return {\n            clientX: event.touches[0].clientX,\n            clientY: event.touches[0].clientY,\n        };\n    }\n    else if (event.type === \"touchend\" &&\n        ((_b = event.changedTouches) === null || _b === void 0 ? void 0 : _b.length)) {\n        return {\n            clientX: event.changedTouches[0].clientX,\n            clientY: event.changedTouches[0].clientY,\n        };\n    }\n    else {\n        return {\n            clientX: event.clientX,\n            clientY: event.clientY,\n        };\n    }\n};\n/**\n * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n * the state machine pointer move/up/down functions based on cursor interaction\n */\nvar registerTouchInteractions = function (_a) {\n    var canvas = _a.canvas, artboard = _a.artboard, _b = _a.stateMachines, stateMachines = _b === void 0 ? [] : _b, renderer = _a.renderer, rive = _a.rive, fit = _a.fit, alignment = _a.alignment;\n    if (!canvas ||\n        !stateMachines.length ||\n        !renderer ||\n        !rive ||\n        !artboard ||\n        typeof window === \"undefined\") {\n        return null;\n    }\n    var processEventCallback = function (event) {\n        var boundingRect = event.currentTarget.getBoundingClientRect();\n        var _a = getClientCoordinates(event), clientX = _a.clientX, clientY = _a.clientY;\n        if (!clientX && !clientY) {\n            return;\n        }\n        var canvasX = clientX - boundingRect.left;\n        var canvasY = clientY - boundingRect.top;\n        var forwardMatrix = rive.computeAlignment(fit, alignment, {\n            minX: 0,\n            minY: 0,\n            maxX: boundingRect.width,\n            maxY: boundingRect.height,\n        }, artboard.bounds);\n        var invertedMatrix = new rive.Mat2D();\n        forwardMatrix.invert(invertedMatrix);\n        var canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n        var transformedVector = rive.mapXY(invertedMatrix, canvasCoordinatesVector);\n        var transformedX = transformedVector.x();\n        var transformedY = transformedVector.y();\n        transformedVector.delete();\n        invertedMatrix.delete();\n        canvasCoordinatesVector.delete();\n        forwardMatrix.delete();\n        switch (event.type) {\n            // Pointer moving/hovering on the canvas\n            case \"touchmove\":\n            case \"mouseover\":\n            case \"mouseout\":\n            case \"mousemove\": {\n                for (var _i = 0, stateMachines_1 = stateMachines; _i < stateMachines_1.length; _i++) {\n                    var stateMachine = stateMachines_1[_i];\n                    stateMachine.pointerMove(transformedX, transformedY);\n                }\n                break;\n            }\n            // Pointer click initiated but not released yet on the canvas\n            case \"touchstart\":\n            case \"mousedown\": {\n                for (var _b = 0, stateMachines_2 = stateMachines; _b < stateMachines_2.length; _b++) {\n                    var stateMachine = stateMachines_2[_b];\n                    stateMachine.pointerDown(transformedX, transformedY);\n                }\n                break;\n            }\n            // Pointer click released on the canvas\n            case \"touchend\":\n            case \"mouseup\": {\n                for (var _c = 0, stateMachines_3 = stateMachines; _c < stateMachines_3.length; _c++) {\n                    var stateMachine = stateMachines_3[_c];\n                    stateMachine.pointerUp(transformedX, transformedY);\n                }\n                break;\n            }\n            default:\n        }\n    };\n    var callback = processEventCallback.bind(_this);\n    canvas.addEventListener(\"mouseover\", callback);\n    canvas.addEventListener(\"mouseout\", callback);\n    canvas.addEventListener(\"mousemove\", callback);\n    canvas.addEventListener(\"mousedown\", callback);\n    canvas.addEventListener(\"mouseup\", callback);\n    canvas.addEventListener(\"touchmove\", callback);\n    canvas.addEventListener(\"touchstart\", callback);\n    canvas.addEventListener(\"touchend\", callback);\n    return function () {\n        canvas.removeEventListener(\"mouseover\", callback);\n        canvas.removeEventListener(\"mouseout\", callback);\n        canvas.removeEventListener(\"mousemove\", callback);\n        canvas.removeEventListener(\"mousedown\", callback);\n        canvas.removeEventListener(\"mouseup\", callback);\n        canvas.removeEventListener(\"touchmove\", callback);\n        canvas.removeEventListener(\"touchstart\", callback);\n        canvas.removeEventListener(\"touchend\", callback);\n    };\n};\n\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLANK_URL: () => (/* binding */ BLANK_URL),\n/* harmony export */   sanitizeUrl: () => (/* binding */ sanitizeUrl)\n/* harmony export */ });\n// Reference: https://github.com/braintree/sanitize-url/tree/main\nvar invalidProtocolRegex = /^([^\\w]*)(javascript|data|vbscript)/im;\nvar htmlEntitiesRegex = /&#(\\w+)(^\\w|;)?/g;\nvar htmlCtrlEntityRegex = /&(newline|tab);/gi;\nvar ctrlCharactersRegex = /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\nvar urlSchemeRegex = /^.+(:|&colon;)/gim;\nvar relativeFirstCharacters = [\".\", \"/\"];\nvar BLANK_URL = \"about:blank\";\nfunction isRelativeUrlWithoutProtocol(url) {\n    return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n// adapted from https://stackoverflow.com/a/29824550/2601552\nfunction decodeHtmlCharacters(str) {\n    var removedNullByte = str.replace(ctrlCharactersRegex, \"\");\n    return removedNullByte.replace(htmlEntitiesRegex, function (match, dec) {\n        return String.fromCharCode(dec);\n    });\n}\nfunction sanitizeUrl(url) {\n    if (!url) {\n        return BLANK_URL;\n    }\n    var sanitizedUrl = decodeHtmlCharacters(url)\n        .replace(htmlCtrlEntityRegex, \"\")\n        .replace(ctrlCharactersRegex, \"\")\n        .trim();\n    if (!sanitizedUrl) {\n        return BLANK_URL;\n    }\n    if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n        return sanitizedUrl;\n    }\n    var urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n    if (!urlSchemeParseResults) {\n        return sanitizedUrl;\n    }\n    var urlScheme = urlSchemeParseResults[0];\n    if (invalidProtocolRegex.test(urlScheme)) {\n        return BLANK_URL;\n    }\n    return sanitizedUrl;\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alignment: () => (/* binding */ Alignment),\n/* harmony export */   EventType: () => (/* binding */ EventType),\n/* harmony export */   Fit: () => (/* binding */ Fit),\n/* harmony export */   Layout: () => (/* binding */ Layout),\n/* harmony export */   LoopType: () => (/* binding */ LoopType),\n/* harmony export */   Rive: () => (/* binding */ Rive),\n/* harmony export */   RiveEventType: () => (/* binding */ RiveEventType),\n/* harmony export */   RuntimeLoader: () => (/* binding */ RuntimeLoader),\n/* harmony export */   StateMachineInput: () => (/* binding */ StateMachineInput),\n/* harmony export */   StateMachineInputType: () => (/* binding */ StateMachineInputType),\n/* harmony export */   Testing: () => (/* binding */ Testing),\n/* harmony export */   decodeFont: () => (/* binding */ decodeFont),\n/* harmony export */   decodeImage: () => (/* binding */ decodeImage)\n/* harmony export */ });\n/* harmony import */ var _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var package_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n// #region layout\n// Fit options for the canvas\nvar Fit;\n(function (Fit) {\n    Fit[\"Cover\"] = \"cover\";\n    Fit[\"Contain\"] = \"contain\";\n    Fit[\"Fill\"] = \"fill\";\n    Fit[\"FitWidth\"] = \"fitWidth\";\n    Fit[\"FitHeight\"] = \"fitHeight\";\n    Fit[\"None\"] = \"none\";\n    Fit[\"ScaleDown\"] = \"scaleDown\";\n})(Fit || (Fit = {}));\n// Alignment options for the canvas\nvar Alignment;\n(function (Alignment) {\n    Alignment[\"Center\"] = \"center\";\n    Alignment[\"TopLeft\"] = \"topLeft\";\n    Alignment[\"TopCenter\"] = \"topCenter\";\n    Alignment[\"TopRight\"] = \"topRight\";\n    Alignment[\"CenterLeft\"] = \"centerLeft\";\n    Alignment[\"CenterRight\"] = \"centerRight\";\n    Alignment[\"BottomLeft\"] = \"bottomLeft\";\n    Alignment[\"BottomCenter\"] = \"bottomCenter\";\n    Alignment[\"BottomRight\"] = \"bottomRight\";\n})(Alignment || (Alignment = {}));\n// Alignment options for Rive animations in a HTML canvas\nvar Layout = /** @class */ (function () {\n    function Layout(params) {\n        var _a, _b, _c, _d, _e, _f;\n        this.fit = (_a = params === null || params === void 0 ? void 0 : params.fit) !== null && _a !== void 0 ? _a : Fit.Contain;\n        this.alignment = (_b = params === null || params === void 0 ? void 0 : params.alignment) !== null && _b !== void 0 ? _b : Alignment.Center;\n        this.minX = (_c = params === null || params === void 0 ? void 0 : params.minX) !== null && _c !== void 0 ? _c : 0;\n        this.minY = (_d = params === null || params === void 0 ? void 0 : params.minY) !== null && _d !== void 0 ? _d : 0;\n        this.maxX = (_e = params === null || params === void 0 ? void 0 : params.maxX) !== null && _e !== void 0 ? _e : 0;\n        this.maxY = (_f = params === null || params === void 0 ? void 0 : params.maxY) !== null && _f !== void 0 ? _f : 0;\n    }\n    // Alternative constructor to build a Layout from an interface/object\n    Layout.new = function (_a) {\n        var fit = _a.fit, alignment = _a.alignment, minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n        console.warn(\"This function is deprecated: please use `new Layout({})` instead\");\n        return new Layout({ fit: fit, alignment: alignment, minX: minX, minY: minY, maxX: maxX, maxY: maxY });\n    };\n    /**\n     * Makes a copy of the layout, replacing any specified parameters\n     */\n    Layout.prototype.copyWith = function (_a) {\n        var fit = _a.fit, alignment = _a.alignment, minX = _a.minX, minY = _a.minY, maxX = _a.maxX, maxY = _a.maxY;\n        return new Layout({\n            fit: fit !== null && fit !== void 0 ? fit : this.fit,\n            alignment: alignment !== null && alignment !== void 0 ? alignment : this.alignment,\n            minX: minX !== null && minX !== void 0 ? minX : this.minX,\n            minY: minY !== null && minY !== void 0 ? minY : this.minY,\n            maxX: maxX !== null && maxX !== void 0 ? maxX : this.maxX,\n            maxY: maxY !== null && maxY !== void 0 ? maxY : this.maxY,\n        });\n    };\n    // Returns fit for the Wasm runtime format\n    Layout.prototype.runtimeFit = function (rive) {\n        if (this.cachedRuntimeFit)\n            return this.cachedRuntimeFit;\n        var fit;\n        if (this.fit === Fit.Cover)\n            fit = rive.Fit.cover;\n        else if (this.fit === Fit.Contain)\n            fit = rive.Fit.contain;\n        else if (this.fit === Fit.Fill)\n            fit = rive.Fit.fill;\n        else if (this.fit === Fit.FitWidth)\n            fit = rive.Fit.fitWidth;\n        else if (this.fit === Fit.FitHeight)\n            fit = rive.Fit.fitHeight;\n        else if (this.fit === Fit.ScaleDown)\n            fit = rive.Fit.scaleDown;\n        else\n            fit = rive.Fit.none;\n        this.cachedRuntimeFit = fit;\n        return fit;\n    };\n    // Returns alignment for the Wasm runtime format\n    Layout.prototype.runtimeAlignment = function (rive) {\n        if (this.cachedRuntimeAlignment)\n            return this.cachedRuntimeAlignment;\n        var alignment;\n        if (this.alignment === Alignment.TopLeft)\n            alignment = rive.Alignment.topLeft;\n        else if (this.alignment === Alignment.TopCenter)\n            alignment = rive.Alignment.topCenter;\n        else if (this.alignment === Alignment.TopRight)\n            alignment = rive.Alignment.topRight;\n        else if (this.alignment === Alignment.CenterLeft)\n            alignment = rive.Alignment.centerLeft;\n        else if (this.alignment === Alignment.CenterRight)\n            alignment = rive.Alignment.centerRight;\n        else if (this.alignment === Alignment.BottomLeft)\n            alignment = rive.Alignment.bottomLeft;\n        else if (this.alignment === Alignment.BottomCenter)\n            alignment = rive.Alignment.bottomCenter;\n        else if (this.alignment === Alignment.BottomRight)\n            alignment = rive.Alignment.bottomRight;\n        else\n            alignment = rive.Alignment.center;\n        this.cachedRuntimeAlignment = alignment;\n        return alignment;\n    };\n    return Layout;\n}());\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nvar RuntimeLoader = /** @class */ (function () {\n    // Class is never instantiated\n    function RuntimeLoader() {\n    }\n    // Loads the runtime\n    RuntimeLoader.loadRuntime = function () {\n        _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            // Loads Wasm bundle\n            locateFile: function () { return RuntimeLoader.wasmURL; },\n        })\n            .then(function (rive) {\n            var _a;\n            RuntimeLoader.runtime = rive;\n            // Fire all the callbacks\n            while (RuntimeLoader.callBackQueue.length > 0) {\n                (_a = RuntimeLoader.callBackQueue.shift()) === null || _a === void 0 ? void 0 : _a(RuntimeLoader.runtime);\n            }\n        })\n            .catch(function () {\n            // In case unpkg fails or goes down, we should try to load from jsdelivr\n            var backupJsdelivrUrl = \"https://cdn.jsdelivr.net/npm/\".concat(package_json__WEBPACK_IMPORTED_MODULE_1__.name, \"@\").concat(package_json__WEBPACK_IMPORTED_MODULE_1__.version, \"/rive.wasm\");\n            if (RuntimeLoader.wasmURL.toLowerCase() !== backupJsdelivrUrl) {\n                console.warn(\"Failed to load WASM from \".concat(RuntimeLoader.wasmURL, \", trying jsdelivr as a backup\"));\n                RuntimeLoader.setWasmUrl(backupJsdelivrUrl);\n                RuntimeLoader.loadRuntime();\n            }\n            else {\n                console.error(\"Could not load Rive WASM file from unpkg or jsdelivr, network connection may be down, or \\\n        you may need to call set a new WASM source via RuntimeLoader.setWasmUrl() and call \\\n        RuntimeLoader.loadRuntime() again\");\n            }\n        });\n    };\n    // Provides a runtime instance via a callback\n    RuntimeLoader.getInstance = function (callback) {\n        // If it's not loading, start loading runtime\n        if (!RuntimeLoader.isLoading) {\n            RuntimeLoader.isLoading = true;\n            RuntimeLoader.loadRuntime();\n        }\n        if (!RuntimeLoader.runtime) {\n            RuntimeLoader.callBackQueue.push(callback);\n        }\n        else {\n            callback(RuntimeLoader.runtime);\n        }\n    };\n    // Provides a runtime instance via a promise\n    RuntimeLoader.awaitInstance = function () {\n        return new Promise(function (resolve) {\n            return RuntimeLoader.getInstance(function (rive) { return resolve(rive); });\n        });\n    };\n    // Manually sets the wasm url\n    RuntimeLoader.setWasmUrl = function (url) {\n        RuntimeLoader.wasmURL = url;\n    };\n    // Flag to indicate that loading has started/completed\n    RuntimeLoader.isLoading = false;\n    // List of callbacks for the runtime that come in while loading\n    RuntimeLoader.callBackQueue = [];\n    // Path to the Wasm file; default path works for testing only;\n    // if embedded wasm is used then this is never used.\n    RuntimeLoader.wasmURL = \"https://unpkg.com/\".concat(package_json__WEBPACK_IMPORTED_MODULE_1__.name, \"@\").concat(package_json__WEBPACK_IMPORTED_MODULE_1__.version, \"/rive.wasm\");\n    return RuntimeLoader;\n}());\n\n// #endregion\n// #region animations\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nvar Animation = /** @class */ (function () {\n    /**\n     * Constructs a new animation\n     * @constructor\n     * @param {any} animation: runtime animation object\n     * @param {any} instance: runtime animation instance object\n     */\n    function Animation(animation, artboard, runtime, playing) {\n        this.animation = animation;\n        this.artboard = artboard;\n        this.playing = playing;\n        this.loopCount = 0;\n        // Time to which the animation should move to on the next render\n        this.scrubTo = null;\n        this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n    }\n    Object.defineProperty(Animation.prototype, \"name\", {\n        // Returns the animation's name\n        get: function () {\n            return this.animation.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Animation.prototype, \"time\", {\n        // Returns the animation's current time\n        get: function () {\n            return this.instance.time;\n        },\n        // Sets the animation's current time\n        set: function (value) {\n            this.instance.time = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Animation.prototype, \"loopValue\", {\n        // Returns the animation's loop type\n        get: function () {\n            return this.animation.loopValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Advances the animation by the give time. If the animation needs scrubbing,\n     * time is ignored and the stored scrub value is used.\n     * @param time the time to advance the animation by if no scrubbing required\n     */\n    Animation.prototype.advance = function (time) {\n        if (this.scrubTo === null) {\n            this.instance.advance(time);\n        }\n        else {\n            this.instance.time = 0;\n            this.instance.advance(this.scrubTo);\n            this.scrubTo = null;\n        }\n    };\n    /**\n     * Apply interpolated keyframe values to the artboard. This should be called after calling\n     * .advance() on an animation instance so that new values are applied to properties.\n     *\n     * Note: This does not advance the artboard, which updates all objects on the artboard\n     * @param mix - Mix value for the animation from 0 to 1\n     */\n    Animation.prototype.apply = function (mix) {\n        this.instance.apply(mix);\n    };\n    Object.defineProperty(Animation.prototype, \"needsScrub\", {\n        get: function () {\n            return this.scrubTo !== null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Deletes the backing Wasm animation instance; once this is called, this\n     * animation is no more.\n     */\n    Animation.prototype.cleanup = function () {\n        this.instance.delete();\n    };\n    return Animation;\n}());\n// #endregion\n// #region state machines\nvar StateMachineInputType;\n(function (StateMachineInputType) {\n    StateMachineInputType[StateMachineInputType[\"Number\"] = 56] = \"Number\";\n    StateMachineInputType[StateMachineInputType[\"Trigger\"] = 58] = \"Trigger\";\n    StateMachineInputType[StateMachineInputType[\"Boolean\"] = 59] = \"Boolean\";\n})(StateMachineInputType || (StateMachineInputType = {}));\n/**\n * An input for a state machine\n */\nvar StateMachineInput = /** @class */ (function () {\n    function StateMachineInput(type, runtimeInput) {\n        this.type = type;\n        this.runtimeInput = runtimeInput;\n    }\n    Object.defineProperty(StateMachineInput.prototype, \"name\", {\n        /**\n         * Returns the name of the input\n         */\n        get: function () {\n            return this.runtimeInput.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StateMachineInput.prototype, \"value\", {\n        /**\n         * Returns the current value of the input\n         */\n        get: function () {\n            return this.runtimeInput.value;\n        },\n        /**\n         * Sets the value of the input\n         */\n        set: function (value) {\n            this.runtimeInput.value = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Fires a trigger; does nothing on Number or Boolean input types\n     */\n    StateMachineInput.prototype.fire = function () {\n        if (this.type === StateMachineInputType.Trigger) {\n            this.runtimeInput.fire();\n        }\n    };\n    return StateMachineInput;\n}());\n\nvar RiveEventType;\n(function (RiveEventType) {\n    RiveEventType[RiveEventType[\"General\"] = 128] = \"General\";\n    RiveEventType[RiveEventType[\"OpenUrl\"] = 131] = \"OpenUrl\";\n})(RiveEventType || (RiveEventType = {}));\nvar StateMachine = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param stateMachine runtime state machine object\n     * @param instance runtime state machine instance object\n     */\n    function StateMachine(stateMachine, runtime, playing, artboard) {\n        this.stateMachine = stateMachine;\n        this.playing = playing;\n        this.artboard = artboard;\n        /**\n         * Caches the inputs from the runtime\n         */\n        this.inputs = [];\n        this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n        this.initInputs(runtime);\n    }\n    Object.defineProperty(StateMachine.prototype, \"name\", {\n        get: function () {\n            return this.stateMachine.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StateMachine.prototype, \"statesChanged\", {\n        /**\n         * Returns a list of state names that have changed on this frame\n         */\n        get: function () {\n            var names = [];\n            for (var i = 0; i < this.instance.stateChangedCount(); i++) {\n                names.push(this.instance.stateChangedNameByIndex(i));\n            }\n            return names;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Advances the state machine instance by a given time.\n     * @param time - the time to advance the animation by in seconds\n     */\n    StateMachine.prototype.advance = function (time) {\n        this.instance.advance(time);\n    };\n    /**\n     * Returns the number of events reported from the last advance call\n     * @returns Number of events reported\n     */\n    StateMachine.prototype.reportedEventCount = function () {\n        return this.instance.reportedEventCount();\n    };\n    /**\n     * Returns a RiveEvent object emitted from the last advance call at the given index\n     * of a list of potentially multiple events. If an event at the index is not found,\n     * undefined is returned.\n     * @param i index of the event reported in a list of potentially multiple events\n     * @returns RiveEvent or extended RiveEvent object returned, or undefined\n     */\n    StateMachine.prototype.reportedEventAt = function (i) {\n        return this.instance.reportedEventAt(i);\n    };\n    /**\n     * Fetches references to the state machine's inputs and caches them\n     * @param runtime an instance of the runtime; needed for the SMIInput types\n     */\n    StateMachine.prototype.initInputs = function (runtime) {\n        // Fetch the inputs from the runtime if we don't have them\n        for (var i = 0; i < this.instance.inputCount(); i++) {\n            var input = this.instance.input(i);\n            this.inputs.push(this.mapRuntimeInput(input, runtime));\n        }\n    };\n    /**\n     * Maps a runtime input to it's appropriate type\n     * @param input\n     */\n    StateMachine.prototype.mapRuntimeInput = function (input, runtime) {\n        if (input.type === runtime.SMIInput.bool) {\n            return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n        }\n        else if (input.type === runtime.SMIInput.number) {\n            return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n        }\n        else if (input.type === runtime.SMIInput.trigger) {\n            return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n        }\n    };\n    /**\n     * Deletes the backing Wasm state machine instance; once this is called, this\n     * state machine is no more.\n     */\n    StateMachine.prototype.cleanup = function () {\n        this.instance.delete();\n    };\n    return StateMachine;\n}());\n// #endregion\n// #region animator\n/**\n * Manages animation\n */\nvar Animator = /** @class */ (function () {\n    /**\n     * Constructs a new animator\n     * @constructor\n     * @param runtime Rive runtime; needed to instance animations & state machines\n     * @param artboard the artboard that holds all animations and state machines\n     * @param animations optional list of animations\n     * @param stateMachines optional list of state machines\n     */\n    function Animator(runtime, artboard, eventManager, animations, stateMachines) {\n        if (animations === void 0) { animations = []; }\n        if (stateMachines === void 0) { stateMachines = []; }\n        this.runtime = runtime;\n        this.artboard = artboard;\n        this.eventManager = eventManager;\n        this.animations = animations;\n        this.stateMachines = stateMachines;\n    }\n    /**\n     * Adds animations and state machines by their names. If names are shared\n     * between animations & state machines, then the first one found will be\n     * created. Best not to use the same names for these in your Rive file.\n     * @param animatable the name(s) of animations and state machines to add\n     * @returns a list of names of the playing animations and state machines\n     */\n    Animator.prototype.add = function (animatables, playing, fireEvent) {\n        if (fireEvent === void 0) { fireEvent = true; }\n        animatables = mapToStringArray(animatables);\n        // If animatables is empty, play or pause everything\n        if (animatables.length === 0) {\n            this.animations.forEach(function (a) { return (a.playing = playing); });\n            this.stateMachines.forEach(function (m) { return (m.playing = playing); });\n        }\n        else {\n            // Play/pause already instanced items, or create new instances\n            var instancedAnimationNames = this.animations.map(function (a) { return a.name; });\n            var instancedMachineNames = this.stateMachines.map(function (m) { return m.name; });\n            for (var i = 0; i < animatables.length; i++) {\n                var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n                var mIndex = instancedMachineNames.indexOf(animatables[i]);\n                if (aIndex >= 0 || mIndex >= 0) {\n                    if (aIndex >= 0) {\n                        // Animation is instanced, play/pause it\n                        this.animations[aIndex].playing = playing;\n                    }\n                    else {\n                        // State machine is instanced, play/pause it\n                        this.stateMachines[mIndex].playing = playing;\n                    }\n                }\n                else {\n                    // Try to create a new animation instance\n                    var anim = this.artboard.animationByName(animatables[i]);\n                    if (anim) {\n                        var newAnimation = new Animation(anim, this.artboard, this.runtime, playing);\n                        // Display the first frame of the specified animation\n                        newAnimation.advance(0);\n                        newAnimation.apply(1.0);\n                        this.animations.push(newAnimation);\n                    }\n                    else {\n                        // Try to create a new state machine instance\n                        var sm = this.artboard.stateMachineByName(animatables[i]);\n                        if (sm) {\n                            var newStateMachine = new StateMachine(sm, this.runtime, playing, this.artboard);\n                            this.stateMachines.push(newStateMachine);\n                        }\n                    }\n                }\n            }\n        }\n        // Fire play/paused events for animations\n        if (fireEvent) {\n            if (playing) {\n                this.eventManager.fire({\n                    type: EventType.Play,\n                    data: this.playing,\n                });\n            }\n            else {\n                this.eventManager.fire({\n                    type: EventType.Pause,\n                    data: this.paused,\n                });\n            }\n        }\n        return playing ? this.playing : this.paused;\n    };\n    /**\n     * Adds linear animations by their names.\n     * @param animatables the name(s) of animations to add\n     * @param playing whether animations should play on instantiation\n     */\n    Animator.prototype.initLinearAnimations = function (animatables, playing) {\n        // Play/pause already instanced items, or create new instances\n        // This validation is kept to maintain compatibility with current behavior.\n        // But given that it this is called during artboard initialization\n        // it should probably be safe to remove.\n        var instancedAnimationNames = this.animations.map(function (a) { return a.name; });\n        for (var i = 0; i < animatables.length; i++) {\n            var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n            if (aIndex >= 0) {\n                this.animations[aIndex].playing = playing;\n            }\n            else {\n                // Try to create a new animation instance\n                var anim = this.artboard.animationByName(animatables[i]);\n                if (anim) {\n                    var newAnimation = new Animation(anim, this.artboard, this.runtime, playing);\n                    // Display the first frame of the specified animation\n                    newAnimation.advance(0);\n                    newAnimation.apply(1.0);\n                    this.animations.push(newAnimation);\n                }\n            }\n        }\n    };\n    /**\n     * Adds state machines by their names.\n     * @param animatables the name(s) of state machines to add\n     * @param playing whether state machines should play on instantiation\n     */\n    Animator.prototype.initStateMachines = function (animatables, playing) {\n        // Play/pause already instanced items, or create new instances\n        // This validation is kept to maintain compatibility with current behavior.\n        // But given that it this is called during artboard initialization\n        // it should probably be safe to remove.\n        var instancedStateMachineNames = this.stateMachines.map(function (a) { return a.name; });\n        for (var i = 0; i < animatables.length; i++) {\n            var aIndex = instancedStateMachineNames.indexOf(animatables[i]);\n            if (aIndex >= 0) {\n                this.stateMachines[aIndex].playing = playing;\n            }\n            else {\n                // Try to create a new state machine instance\n                var sm = this.artboard.stateMachineByName(animatables[i]);\n                if (sm) {\n                    var newStateMachine = new StateMachine(sm, this.runtime, playing, this.artboard);\n                    this.stateMachines.push(newStateMachine);\n                }\n                else {\n                    // In order to maintain compatibility with current behavior, if a state machine is not found\n                    // we look for an animation with the same name\n                    this.initLinearAnimations([animatables[i]], playing);\n                }\n            }\n        }\n    };\n    /**\n     * Play the named animations/state machines\n     * @param animatables the names of the animations/machines to play; plays all if empty\n     * @returns a list of the playing items\n     */\n    Animator.prototype.play = function (animatables) {\n        return this.add(animatables, true);\n    };\n    /**\n     * Pauses named animations and state machines, or everything if nothing is\n     * specified\n     * @param animatables names of the animations and state machines to pause\n     * @returns a list of names of the animations and state machines paused\n     */\n    Animator.prototype.pause = function (animatables) {\n        return this.add(animatables, false);\n    };\n    /**\n     * Set time of named animations\n     * @param animations names of the animations to scrub\n     * @param value time scrub value, a floating point number to which the playhead is jumped\n     * @returns a list of names of the animations that were scrubbed\n     */\n    Animator.prototype.scrub = function (animatables, value) {\n        var forScrubbing = this.animations.filter(function (a) {\n            return animatables.includes(a.name);\n        });\n        forScrubbing.forEach(function (a) { return (a.scrubTo = value); });\n        return forScrubbing.map(function (a) { return a.name; });\n    };\n    Object.defineProperty(Animator.prototype, \"playing\", {\n        /**\n         * Returns a list of names of all animations and state machines currently\n         * playing\n         */\n        get: function () {\n            return this.animations\n                .filter(function (a) { return a.playing; })\n                .map(function (a) { return a.name; })\n                .concat(this.stateMachines.filter(function (m) { return m.playing; }).map(function (m) { return m.name; }));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Animator.prototype, \"paused\", {\n        /**\n         * Returns a list of names of all animations and state machines currently\n         * paused\n         */\n        get: function () {\n            return this.animations\n                .filter(function (a) { return !a.playing; })\n                .map(function (a) { return a.name; })\n                .concat(this.stateMachines.filter(function (m) { return !m.playing; }).map(function (m) { return m.name; }));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Stops and removes all named animations and state machines\n     * @param animatables animations and state machines to remove\n     * @returns a list of names of removed items\n     */\n    Animator.prototype.stop = function (animatables) {\n        var _this = this;\n        animatables = mapToStringArray(animatables);\n        // If nothing's specified, wipe them out, all of them\n        var removedNames = [];\n        // Stop everything\n        if (animatables.length === 0) {\n            removedNames = this.animations\n                .map(function (a) { return a.name; })\n                .concat(this.stateMachines.map(function (m) { return m.name; }));\n            // Clean up before emptying the arrays\n            this.animations.forEach(function (a) { return a.cleanup(); });\n            this.stateMachines.forEach(function (m) { return m.cleanup(); });\n            // Empty out the arrays\n            this.animations.splice(0, this.animations.length);\n            this.stateMachines.splice(0, this.stateMachines.length);\n        }\n        else {\n            // Remove only the named animations/state machines\n            var animationsToRemove = this.animations.filter(function (a) {\n                return animatables.includes(a.name);\n            });\n            animationsToRemove.forEach(function (a) {\n                a.cleanup();\n                _this.animations.splice(_this.animations.indexOf(a), 1);\n            });\n            var machinesToRemove = this.stateMachines.filter(function (m) {\n                return animatables.includes(m.name);\n            });\n            machinesToRemove.forEach(function (m) {\n                m.cleanup();\n                _this.stateMachines.splice(_this.stateMachines.indexOf(m), 1);\n            });\n            removedNames = animationsToRemove\n                .map(function (a) { return a.name; })\n                .concat(machinesToRemove.map(function (m) { return m.name; }));\n        }\n        this.eventManager.fire({\n            type: EventType.Stop,\n            data: removedNames,\n        });\n        // Return the list of animations removed\n        return removedNames;\n    };\n    Object.defineProperty(Animator.prototype, \"isPlaying\", {\n        /**\n         * Returns true if at least one animation is active\n         */\n        get: function () {\n            return (this.animations.reduce(function (acc, curr) { return acc || curr.playing; }, false) ||\n                this.stateMachines.reduce(function (acc, curr) { return acc || curr.playing; }, false));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Animator.prototype, \"isPaused\", {\n        /**\n         * Returns true if all animations are paused and there's at least one animation\n         */\n        get: function () {\n            return (!this.isPlaying &&\n                (this.animations.length > 0 || this.stateMachines.length > 0));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Animator.prototype, \"isStopped\", {\n        /**\n         * Returns true if there are no playing or paused animations/state machines\n         */\n        get: function () {\n            return this.animations.length === 0 && this.stateMachines.length === 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * If there are no animations or state machines, add the first one found\n     * @returns the name of the animation or state machine instanced\n     */\n    Animator.prototype.atLeastOne = function (playing, fireEvent) {\n        if (fireEvent === void 0) { fireEvent = true; }\n        var instancedName;\n        if (this.animations.length === 0 && this.stateMachines.length === 0) {\n            if (this.artboard.animationCount() > 0) {\n                // Add the first animation\n                this.add([(instancedName = this.artboard.animationByIndex(0).name)], playing, fireEvent);\n            }\n            else if (this.artboard.stateMachineCount() > 0) {\n                // Add the first state machine\n                this.add([(instancedName = this.artboard.stateMachineByIndex(0).name)], playing, fireEvent);\n            }\n        }\n        return instancedName;\n    };\n    /**\n     * Checks if any animations have looped and if so, fire the appropriate event\n     */\n    Animator.prototype.handleLooping = function () {\n        for (var _i = 0, _a = this.animations.filter(function (a) { return a.playing; }); _i < _a.length; _i++) {\n            var animation = _a[_i];\n            // Emit if the animation looped\n            if (animation.loopValue === 0 && animation.loopCount) {\n                animation.loopCount = 0;\n                // This is a one-shot; if it has ended, delete the instance\n                this.stop(animation.name);\n            }\n            else if (animation.loopValue === 1 && animation.loopCount) {\n                this.eventManager.fire({\n                    type: EventType.Loop,\n                    data: { animation: animation.name, type: LoopType.Loop },\n                });\n                animation.loopCount = 0;\n            }\n            // Wasm indicates a loop at each time the animation\n            // changes direction, so a full loop/lap occurs every\n            // two loop counts\n            else if (animation.loopValue === 2 && animation.loopCount > 1) {\n                this.eventManager.fire({\n                    type: EventType.Loop,\n                    data: { animation: animation.name, type: LoopType.PingPong },\n                });\n                animation.loopCount = 0;\n            }\n        }\n    };\n    /**\n     * Checks if states have changed in state machines and fires a statechange\n     * event\n     */\n    Animator.prototype.handleStateChanges = function () {\n        var statesChanged = [];\n        for (var _i = 0, _a = this.stateMachines.filter(function (sm) { return sm.playing; }); _i < _a.length; _i++) {\n            var stateMachine = _a[_i];\n            statesChanged.push.apply(statesChanged, stateMachine.statesChanged);\n        }\n        if (statesChanged.length > 0) {\n            this.eventManager.fire({\n                type: EventType.StateChange,\n                data: statesChanged,\n            });\n        }\n    };\n    Animator.prototype.handleAdvancing = function (time) {\n        this.eventManager.fire({\n            type: EventType.Advance,\n            data: time,\n        });\n    };\n    return Animator;\n}());\n// #endregion\n// #region events\n/**\n * Supported event types triggered in Rive\n */\nvar EventType;\n(function (EventType) {\n    EventType[\"Load\"] = \"load\";\n    EventType[\"LoadError\"] = \"loaderror\";\n    EventType[\"Play\"] = \"play\";\n    EventType[\"Pause\"] = \"pause\";\n    EventType[\"Stop\"] = \"stop\";\n    EventType[\"Loop\"] = \"loop\";\n    EventType[\"Draw\"] = \"draw\";\n    EventType[\"Advance\"] = \"advance\";\n    EventType[\"StateChange\"] = \"statechange\";\n    EventType[\"RiveEvent\"] = \"riveevent\";\n})(EventType || (EventType = {}));\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nvar LoopType;\n(function (LoopType) {\n    LoopType[\"OneShot\"] = \"oneshot\";\n    LoopType[\"Loop\"] = \"loop\";\n    LoopType[\"PingPong\"] = \"pingpong\";\n})(LoopType || (LoopType = {}));\n// Manages Rive events and listeners\nvar EventManager = /** @class */ (function () {\n    function EventManager(listeners) {\n        if (listeners === void 0) { listeners = []; }\n        this.listeners = listeners;\n    }\n    // Gets listeners of specified type\n    EventManager.prototype.getListeners = function (type) {\n        return this.listeners.filter(function (e) { return e.type === type; });\n    };\n    // Adds a listener\n    EventManager.prototype.add = function (listener) {\n        if (!this.listeners.includes(listener)) {\n            this.listeners.push(listener);\n        }\n    };\n    /**\n     * Removes a listener\n     * @param listener the listener with the callback to be removed\n     */\n    EventManager.prototype.remove = function (listener) {\n        // We can't simply look for the listener as it'll be a different instance to\n        // one originally subscribed. Find all the listeners of the right type and\n        // then check their callbacks which should match.\n        for (var i = 0; i < this.listeners.length; i++) {\n            var currentListener = this.listeners[i];\n            if (currentListener.type === listener.type) {\n                if (currentListener.callback === listener.callback) {\n                    this.listeners.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Clears all listeners of specified type, or every listener if no type is\n     * specified\n     * @param type the type of listeners to clear, or all listeners if not\n     * specified\n     */\n    EventManager.prototype.removeAll = function (type) {\n        var _this = this;\n        if (!type) {\n            this.listeners.splice(0, this.listeners.length);\n        }\n        else {\n            this.listeners\n                .filter(function (l) { return l.type === type; })\n                .forEach(function (l) { return _this.remove(l); });\n        }\n    };\n    // Fires an event\n    EventManager.prototype.fire = function (event) {\n        var eventListeners = this.getListeners(event.type);\n        eventListeners.forEach(function (listener) { return listener.callback(event); });\n    };\n    return EventManager;\n}());\n// Manages a queue of tasks\nvar TaskQueueManager = /** @class */ (function () {\n    function TaskQueueManager(eventManager) {\n        this.eventManager = eventManager;\n        this.queue = [];\n    }\n    // Adds a task top the queue\n    TaskQueueManager.prototype.add = function (task) {\n        this.queue.push(task);\n    };\n    // Processes all tasks in the queue\n    TaskQueueManager.prototype.process = function () {\n        while (this.queue.length > 0) {\n            var task = this.queue.shift();\n            if (task === null || task === void 0 ? void 0 : task.action) {\n                task.action();\n            }\n            if (task === null || task === void 0 ? void 0 : task.event) {\n                this.eventManager.fire(task.event);\n            }\n        }\n    };\n    return TaskQueueManager;\n}());\nvar Rive = /** @class */ (function () {\n    function Rive(params) {\n        var _a;\n        // Tracks if a Rive file is loaded\n        this.loaded = false;\n        /**\n         * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n         * commands (e.g. contents) can be called as soon as the file is loaded.\n         * However, playback commands need to be queued and run in order once initial\n         * animations and autoplay has been sorted out. This applies to play, pause,\n         * and start.\n         */\n        this.readyForPlaying = false;\n        // Runtime artboard\n        this.artboard = null;\n        // place to clear up event listeners\n        this.eventCleanup = null;\n        this.shouldDisableRiveListeners = false;\n        this.automaticallyHandleEvents = false;\n        // Allow the runtime to automatically load assets hosted in Rive's runtime.\n        this.enableRiveAssetCDN = true;\n        // Durations to generate a frame for the last second. Used for performance profiling.\n        this.durations = [];\n        this.frameTimes = [];\n        this.frameCount = 0;\n        /**\n         * Used be draw to track when a second of active rendering time has passed.\n         * Used for debugging purposes\n         */\n        this.renderSecondTimer = 0;\n        this.canvas = params.canvas;\n        this.src = params.src;\n        this.buffer = params.buffer;\n        this.layout = (_a = params.layout) !== null && _a !== void 0 ? _a : new Layout();\n        this.shouldDisableRiveListeners = !!params.shouldDisableRiveListeners;\n        this.automaticallyHandleEvents = !!params.automaticallyHandleEvents;\n        this.enableRiveAssetCDN =\n            params.enableRiveAssetCDN === undefined\n                ? true\n                : params.enableRiveAssetCDN;\n        // New event management system\n        this.eventManager = new EventManager();\n        if (params.onLoad)\n            this.on(EventType.Load, params.onLoad);\n        if (params.onLoadError)\n            this.on(EventType.LoadError, params.onLoadError);\n        if (params.onPlay)\n            this.on(EventType.Play, params.onPlay);\n        if (params.onPause)\n            this.on(EventType.Pause, params.onPause);\n        if (params.onStop)\n            this.on(EventType.Stop, params.onStop);\n        if (params.onLoop)\n            this.on(EventType.Loop, params.onLoop);\n        if (params.onStateChange)\n            this.on(EventType.StateChange, params.onStateChange);\n        if (params.onAdvance)\n            this.on(EventType.Advance, params.onAdvance);\n        /**\n         * @deprecated Use camelCase'd versions instead.\n         */\n        if (params.onload && !params.onLoad)\n            this.on(EventType.Load, params.onload);\n        if (params.onloaderror && !params.onLoadError)\n            this.on(EventType.LoadError, params.onloaderror);\n        if (params.onplay && !params.onPlay)\n            this.on(EventType.Play, params.onplay);\n        if (params.onpause && !params.onPause)\n            this.on(EventType.Pause, params.onpause);\n        if (params.onstop && !params.onStop)\n            this.on(EventType.Stop, params.onstop);\n        if (params.onloop && !params.onLoop)\n            this.on(EventType.Loop, params.onloop);\n        if (params.onstatechange && !params.onStateChange)\n            this.on(EventType.StateChange, params.onstatechange);\n        /**\n         * Asset loading\n         */\n        if (params.assetLoader)\n            this.assetLoader = params.assetLoader;\n        // Hook up the task queue\n        this.taskQueue = new TaskQueueManager(this.eventManager);\n        this.init({\n            src: this.src,\n            buffer: this.buffer,\n            autoplay: params.autoplay,\n            animations: params.animations,\n            stateMachines: params.stateMachines,\n            artboard: params.artboard,\n            useOffscreenRenderer: params.useOffscreenRenderer,\n        });\n    }\n    // Alternative constructor to build a Rive instance from an interface/object\n    Rive.new = function (params) {\n        console.warn(\"This function is deprecated: please use `new Rive({})` instead\");\n        return new Rive(params);\n    };\n    // Initializes the Rive object either from constructor or load()\n    Rive.prototype.init = function (_a) {\n        var _this = this;\n        var src = _a.src, buffer = _a.buffer, animations = _a.animations, stateMachines = _a.stateMachines, artboard = _a.artboard, _b = _a.autoplay, autoplay = _b === void 0 ? false : _b, _c = _a.useOffscreenRenderer, useOffscreenRenderer = _c === void 0 ? false : _c;\n        this.src = src;\n        this.buffer = buffer;\n        // If no source file url specified, it's a bust\n        if (!this.src && !this.buffer) {\n            throw new Error(Rive.missingErrorMessage);\n        }\n        // List of animations that should be initialized.\n        var startingAnimationNames = mapToStringArray(animations);\n        // List of state machines that should be initialized\n        var startingStateMachineNames = mapToStringArray(stateMachines);\n        // Ensure loaded is marked as false if loading new file\n        this.loaded = false;\n        this.readyForPlaying = false;\n        // Ensure the runtime is loaded\n        RuntimeLoader.awaitInstance()\n            .then(function (runtime) {\n            _this.runtime = runtime;\n            // Get the canvas where you want to render the animation and create a renderer\n            _this.renderer = _this.runtime.makeRenderer(_this.canvas, useOffscreenRenderer);\n            // Initial size adjustment based on devicePixelRatio if no width/height are\n            // specified explicitly\n            if (!(_this.canvas.width || _this.canvas.height)) {\n                _this.resizeDrawingSurfaceToCanvas();\n            }\n            // Load Rive data from a source uri or a data buffer\n            _this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay)\n                .then(function () { return _this.setupRiveListeners(); })\n                .catch(function (e) {\n                console.error(e);\n            });\n        })\n            .catch(function (e) {\n            console.error(e);\n        });\n    };\n    Rive.prototype.setupRiveListeners = function () {\n        var _this = this;\n        if (!this.shouldDisableRiveListeners) {\n            var activeStateMachines = (this.animator.stateMachines || [])\n                .filter(function (sm) { return sm.playing && _this.runtime.hasListeners(sm.instance); })\n                .map(function (sm) { return sm.instance; });\n            this.eventCleanup = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.registerTouchInteractions)({\n                canvas: this.canvas,\n                artboard: this.artboard,\n                stateMachines: activeStateMachines,\n                renderer: this.renderer,\n                rive: this.runtime,\n                fit: this._layout.runtimeFit(this.runtime),\n                alignment: this._layout.runtimeAlignment(this.runtime),\n            });\n        }\n    };\n    // Initializes runtime with Rive data and preps for playing\n    Rive.prototype.initData = function (artboardName, animationNames, stateMachineNames, autoplay) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, loader, _c, msg;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.src) return [3 /*break*/, 2];\n                        _b = this;\n                        return [4 /*yield*/, loadRiveFile(this.src)];\n                    case 1:\n                        _b.buffer = _d.sent();\n                        _d.label = 2;\n                    case 2:\n                        if (this.assetLoader) {\n                            loader = new this.runtime.CustomFileAssetLoader({\n                                loadContents: this.assetLoader,\n                            });\n                        }\n                        // Load the Rive file\n                        _c = this;\n                        return [4 /*yield*/, this.runtime.load(new Uint8Array(this.buffer), loader, this.enableRiveAssetCDN)];\n                    case 3:\n                        // Load the Rive file\n                        _c.file = _d.sent();\n                        if (this.file) {\n                            // Initialize and draw frame\n                            this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n                            // Everything's set up, emit a load event\n                            this.loaded = true;\n                            this.eventManager.fire({\n                                type: EventType.Load,\n                                data: (_a = this.src) !== null && _a !== void 0 ? _a : \"buffer\",\n                            });\n                            // Flag ready for playback commands and clear the task queue; this order\n                            // is important or it may infinitely recurse\n                            this.readyForPlaying = true;\n                            this.taskQueue.process();\n                            this.drawFrame();\n                            return [2 /*return*/, Promise.resolve()];\n                        }\n                        else {\n                            msg = \"Problem loading file; may be corrupt!\";\n                            console.warn(msg);\n                            this.eventManager.fire({ type: EventType.LoadError, data: msg });\n                            return [2 /*return*/, Promise.reject(msg)];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Initialize for playback\n    Rive.prototype.initArtboard = function (artboardName, animationNames, stateMachineNames, autoplay) {\n        // Fetch the artboard\n        var rootArtboard = artboardName\n            ? this.file.artboardByName(artboardName)\n            : this.file.defaultArtboard();\n        // Check we have a working artboard\n        if (!rootArtboard) {\n            var msg = \"Invalid artboard name or no default artboard\";\n            console.warn(msg);\n            this.eventManager.fire({ type: EventType.LoadError, data: msg });\n            return;\n        }\n        this.artboard = rootArtboard;\n        // Check that the artboard has at least 1 animation\n        if (this.artboard.animationCount() < 1) {\n            var msg = \"Artboard has no animations\";\n            this.eventManager.fire({ type: EventType.LoadError, data: msg });\n            throw msg;\n        }\n        // Initialize the animator\n        this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n        // Initialize the animations; as loaded hasn't happened yet, we need to\n        // suppress firing the play/pause events until the load event has fired. To\n        // do this we tell the animator to suppress firing events, and add event\n        // firing to the task queue.\n        var instanceNames;\n        if (animationNames.length > 0 || stateMachineNames.length > 0) {\n            instanceNames = animationNames.concat(stateMachineNames);\n            this.animator.initLinearAnimations(animationNames, autoplay);\n            this.animator.initStateMachines(stateMachineNames, autoplay);\n        }\n        else {\n            instanceNames = [this.animator.atLeastOne(autoplay, false)];\n        }\n        // Queue up firing the playback events\n        this.taskQueue.add({\n            event: {\n                type: autoplay ? EventType.Play : EventType.Pause,\n                data: instanceNames,\n            },\n        });\n    };\n    // Draws the current artboard frame\n    Rive.prototype.drawFrame = function () {\n        this.startRendering();\n    };\n    /**\n     * Draw rendering loop; renders animation frames at the correct time interval.\n     * @param time the time at which to render a frame\n     */\n    Rive.prototype.draw = function (time, onSecond) {\n        var before = performance.now();\n        // Clear the frameRequestId, as we're now rendering a fresh frame\n        this.frameRequestId = null;\n        // On the first pass, make sure lastTime has a valid value\n        if (!this.lastRenderTime) {\n            this.lastRenderTime = time;\n        }\n        // Handle the onSecond callback\n        this.renderSecondTimer += time - this.lastRenderTime;\n        if (this.renderSecondTimer > 5000) {\n            this.renderSecondTimer = 0;\n            onSecond === null || onSecond === void 0 ? void 0 : onSecond();\n        }\n        // Calculate the elapsed time between frames in seconds\n        var elapsedTime = (time - this.lastRenderTime) / 1000;\n        this.lastRenderTime = time;\n        // - Advance non-paused animations by the elapsed number of seconds\n        // - Advance any animations that require scrubbing\n        // - Advance to the first frame even when autoplay is false\n        var activeAnimations = this.animator.animations\n            .filter(function (a) { return a.playing || a.needsScrub; })\n            // The scrubbed animations must be applied first to prevent weird artifacts\n            // if the playing animations conflict with the scrubbed animating attribuates.\n            .sort(function (first) { return (first.needsScrub ? -1 : 1); });\n        for (var _i = 0, activeAnimations_1 = activeAnimations; _i < activeAnimations_1.length; _i++) {\n            var animation = activeAnimations_1[_i];\n            animation.advance(elapsedTime);\n            if (animation.instance.didLoop) {\n                animation.loopCount += 1;\n            }\n            animation.apply(1.0);\n        }\n        // - Advance non-paused state machines by the elapsed number of seconds\n        // - Advance to the first frame even when autoplay is false\n        var activeStateMachines = this.animator.stateMachines.filter(function (a) { return a.playing; });\n        for (var _a = 0, activeStateMachines_1 = activeStateMachines; _a < activeStateMachines_1.length; _a++) {\n            var stateMachine = activeStateMachines_1[_a];\n            // Check for events before the current frame's state machine advance\n            var numEventsReported = stateMachine.reportedEventCount();\n            if (numEventsReported) {\n                for (var i = 0; i < numEventsReported; i++) {\n                    var event_1 = stateMachine.reportedEventAt(i);\n                    if (event_1) {\n                        if (event_1.type === RiveEventType.OpenUrl) {\n                            this.eventManager.fire({\n                                type: EventType.RiveEvent,\n                                data: event_1,\n                            });\n                            // Handle the event side effect if explicitly enabled\n                            if (this.automaticallyHandleEvents) {\n                                var newAnchorTag = document.createElement(\"a\");\n                                var _b = event_1, url = _b.url, target = _b.target;\n                                var sanitizedUrl = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.sanitizeUrl)(url);\n                                url && newAnchorTag.setAttribute(\"href\", sanitizedUrl);\n                                target && newAnchorTag.setAttribute(\"target\", target);\n                                if (sanitizedUrl && sanitizedUrl !== _utils__WEBPACK_IMPORTED_MODULE_2__.BLANK_URL) {\n                                    newAnchorTag.click();\n                                }\n                            }\n                        }\n                        else {\n                            this.eventManager.fire({\n                                type: EventType.RiveEvent,\n                                data: event_1,\n                            });\n                        }\n                    }\n                }\n            }\n            stateMachine.advance(elapsedTime);\n            // stateMachine.instance.apply(this.artboard);\n        }\n        // Once the animations have been applied to the artboard, advance it\n        // by the elapsed time.\n        this.artboard.advance(elapsedTime);\n        var renderer = this.renderer;\n        // Canvas must be wiped to prevent artifacts\n        renderer.clear();\n        renderer.save();\n        // Update the renderer alignment if necessary\n        this.alignRenderer();\n        this.artboard.draw(renderer);\n        renderer.restore();\n        renderer.flush();\n        // Check for any animations that looped\n        this.animator.handleLooping();\n        // Check for any state machines that had a state change\n        this.animator.handleStateChanges();\n        // Report advanced time\n        this.animator.handleAdvancing(elapsedTime);\n        // Add duration to create frame to durations array\n        this.frameCount++;\n        var after = performance.now();\n        this.frameTimes.push(after);\n        this.durations.push(after - before);\n        while (this.frameTimes[0] <= after - 1000) {\n            this.frameTimes.shift();\n            this.durations.shift();\n        }\n        // Calling requestAnimationFrame will rerun draw() at the correct rate:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n        if (this.animator.isPlaying) {\n            // Request a new rendering frame\n            this.startRendering();\n        }\n        else if (this.animator.isPaused) {\n            // Reset the end time so on playback it starts at the correct frame\n            this.lastRenderTime = 0;\n        }\n        else if (this.animator.isStopped) {\n            // Reset animation instances, artboard and time\n            // TODO: implement this properly when we have instancing\n            // this.initArtboard();\n            // this.drawFrame();\n            this.lastRenderTime = 0;\n        }\n    };\n    /**\n     * Align the renderer\n     */\n    Rive.prototype.alignRenderer = function () {\n        var _a = this, renderer = _a.renderer, runtime = _a.runtime, _layout = _a._layout, artboard = _a.artboard;\n        // Align things up safe in the knowledge we can restore if changed\n        renderer.align(_layout.runtimeFit(runtime), _layout.runtimeAlignment(runtime), {\n            minX: _layout.minX,\n            minY: _layout.minY,\n            maxX: _layout.maxX,\n            maxY: _layout.maxY,\n        }, artboard.bounds);\n    };\n    Object.defineProperty(Rive.prototype, \"fps\", {\n        get: function () {\n            return this.durations.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"frameTime\", {\n        get: function () {\n            if (this.durations.length === 0) {\n                return 0;\n            }\n            return (this.durations.reduce(function (a, b) { return a + b; }, 0) / this.durations.length).toFixed(4);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Cleans up all Wasm-generated objects that need to be manually destroyed:\n     * artboard instances, animation instances, state machine instances,\n     * renderer instance, file and runtime.\n     *\n     * Once this is called, you will need to initialise a new instance of the\n     * Rive class\n     */\n    Rive.prototype.cleanup = function () {\n        var _a, _b;\n        // Stop the renderer if it hasn't already been stopped.\n        this.stopRendering();\n        // Clean up any artboard, animation or state machine instances.\n        this.cleanupInstances();\n        // Delete the renderer\n        (_a = this.renderer) === null || _a === void 0 ? void 0 : _a.delete();\n        this.renderer = null;\n        // Delete the rive file\n        (_b = this.file) === null || _b === void 0 ? void 0 : _b.delete();\n        this.file = null;\n    };\n    /**\n     * Cleans up any Wasm-generated objects that need to be manually destroyed:\n     * artboard instances, animation instances, state machine instances.\n     *\n     * Once this is called, things will need to be reinitialized or bad things\n     * might happen.\n     */\n    Rive.prototype.cleanupInstances = function () {\n        if (this.eventCleanup !== null) {\n            this.eventCleanup();\n        }\n        // Delete all animation and state machine instances\n        this.stop();\n        if (this.artboard) {\n            this.artboard.delete();\n            this.artboard = null;\n        }\n    };\n    /**\n     * Tries to query the setup Artboard for a text run node with the given name.\n     *\n     * @param textRunName - Name of the text run node associated with a text object\n     * @returns - TextValueRun node or undefined if the text run cannot be queried\n     */\n    Rive.prototype.retrieveTextRun = function (textRunName) {\n        var _a;\n        if (!textRunName) {\n            console.warn(\"No text run name provided\");\n            return;\n        }\n        if (!this.artboard) {\n            console.warn(\"Tried to access text run, but the Artboard is null\");\n            return;\n        }\n        var textRun = this.artboard.textRun(textRunName);\n        if (!textRun) {\n            console.warn(\"Could not access a text run with name '\".concat(textRunName, \"' in the '\").concat((_a = this.artboard) === null || _a === void 0 ? void 0 : _a.name, \"' Artboard. Note that you must rename a text run node in the Rive editor to make it queryable at runtime.\"));\n            return;\n        }\n        return textRun;\n    };\n    /**\n     * Returns a string from a given text run node name, or undefined if the text run\n     * cannot be queried.\n     *\n     * @param textRunName - Name of the text run node associated with a text object\n     * @returns - String value of the text run node or undefined\n     */\n    Rive.prototype.getTextRunValue = function (textRunName) {\n        var textRun = this.retrieveTextRun(textRunName);\n        return textRun ? textRun.text : undefined;\n    };\n    /**\n     * Sets a text value for a given text run node name if possible\n     *\n     * @param textRunName - Name of the text run node associated with a text object\n     * @param textRunValue - String value to set on the text run node\n     */\n    Rive.prototype.setTextRunValue = function (textRunName, textRunValue) {\n        var textRun = this.retrieveTextRun(textRunName);\n        if (textRun) {\n            textRun.text = textRunValue;\n        }\n    };\n    // Plays specified animations; if none specified, it unpauses everything.\n    Rive.prototype.play = function (animationNames, autoplay) {\n        var _this = this;\n        animationNames = mapToStringArray(animationNames);\n        // If the file's not loaded, queue up the play\n        if (!this.readyForPlaying) {\n            this.taskQueue.add({\n                action: function () { return _this.play(animationNames, autoplay); },\n            });\n            return;\n        }\n        this.animator.play(animationNames);\n        if (this.eventCleanup) {\n            this.eventCleanup();\n        }\n        this.setupRiveListeners();\n        this.startRendering();\n    };\n    // Pauses specified animations; if none specified, pauses all.\n    Rive.prototype.pause = function (animationNames) {\n        var _this = this;\n        animationNames = mapToStringArray(animationNames);\n        // If the file's not loaded, early out, nothing to pause\n        if (!this.readyForPlaying) {\n            this.taskQueue.add({\n                action: function () { return _this.pause(animationNames); },\n            });\n            return;\n        }\n        if (this.eventCleanup) {\n            this.eventCleanup();\n        }\n        this.animator.pause(animationNames);\n    };\n    Rive.prototype.scrub = function (animationNames, value) {\n        var _this = this;\n        animationNames = mapToStringArray(animationNames);\n        // If the file's not loaded, early out, nothing to pause\n        if (!this.readyForPlaying) {\n            this.taskQueue.add({\n                action: function () { return _this.scrub(animationNames, value); },\n            });\n            return;\n        }\n        // Scrub the animation time; we draw a single frame here so that if\n        // nothing's currently playing, the scrubbed animation is still rendered/\n        this.animator.scrub(animationNames, value || 0);\n        this.drawFrame();\n    };\n    // Stops specified animations; if none specifies, stops them all.\n    Rive.prototype.stop = function (animationNames) {\n        var _this = this;\n        animationNames = mapToStringArray(animationNames);\n        // If the file's not loaded, early out, nothing to pause\n        if (!this.readyForPlaying) {\n            this.taskQueue.add({\n                action: function () { return _this.stop(animationNames); },\n            });\n            return;\n        }\n        this.animator.stop(animationNames);\n        if (this.eventCleanup) {\n            this.eventCleanup();\n        }\n    };\n    /**\n     * Resets the animation\n     * @param artboard the name of the artboard, or default if none given\n     * @param animations the names of animations for playback\n     * @param stateMachines the names of state machines for playback\n     * @param autoplay whether to autoplay when reset, defaults to false\n     *\n     */\n    Rive.prototype.reset = function (params) {\n        var _a;\n        // Get the current artboard, animations, state machines, and playback states\n        var artBoardName = params === null || params === void 0 ? void 0 : params.artboard;\n        var animationNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.animations);\n        var stateMachineNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.stateMachines);\n        var autoplay = (_a = params === null || params === void 0 ? void 0 : params.autoplay) !== null && _a !== void 0 ? _a : false;\n        // Stop everything and clean up\n        this.cleanupInstances();\n        // Reinitialize an artboard instance with the state\n        this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n        this.taskQueue.process();\n    };\n    // Loads a new Rive file, keeping listeners in place\n    Rive.prototype.load = function (params) {\n        // Stop all animations\n        this.stop();\n        // Reinitialize\n        this.init(params);\n    };\n    Object.defineProperty(Rive.prototype, \"layout\", {\n        /**\n         * Returns the current layout. Note that layout should be treated as\n         * immutable. If you want to change the layout, create a new one use the\n         * layout setter\n         */\n        get: function () {\n            return this._layout;\n        },\n        // Sets a new layout\n        set: function (layout) {\n            this._layout = layout;\n            // If the maxX or maxY are 0, then set them to the canvas width and height\n            if (!layout.maxX || !layout.maxY) {\n                this.resizeToCanvas();\n            }\n            if (this.loaded && !this.animator.isPlaying) {\n                this.drawFrame();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets the layout bounds to the current canvas size; this is typically called\n     * when the canvas is resized\n     */\n    Rive.prototype.resizeToCanvas = function () {\n        this._layout = this.layout.copyWith({\n            minX: 0,\n            minY: 0,\n            maxX: this.canvas.width,\n            maxY: this.canvas.height,\n        });\n    };\n    /**\n     * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n     * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n     * and resize the layout to match the new drawing surface afterwards.\n     * Useful function for consumers to include in a window resize listener\n     */\n    Rive.prototype.resizeDrawingSurfaceToCanvas = function () {\n        if (this.canvas instanceof HTMLCanvasElement && !!window) {\n            var _a = this.canvas.getBoundingClientRect(), width = _a.width, height = _a.height;\n            var dpr = window.devicePixelRatio || 1;\n            this.canvas.width = dpr * width;\n            this.canvas.height = dpr * height;\n            this.startRendering();\n            this.resizeToCanvas();\n        }\n    };\n    Object.defineProperty(Rive.prototype, \"source\", {\n        // Returns the animation source, which may be undefined\n        get: function () {\n            return this.src;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"activeArtboard\", {\n        /**\n         * Returns the name of the active artboard\n         */\n        get: function () {\n            return this.artboard ? this.artboard.name : \"\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"animationNames\", {\n        // Returns a list of animation names on the chosen artboard\n        get: function () {\n            // If the file's not loaded, we got nothing to return\n            if (!this.loaded) {\n                return [];\n            }\n            var animationNames = [];\n            for (var i = 0; i < this.artboard.animationCount(); i++) {\n                animationNames.push(this.artboard.animationByIndex(i).name);\n            }\n            return animationNames;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"stateMachineNames\", {\n        /**\n         * Returns a list of state machine names from the current artboard\n         */\n        get: function () {\n            // If the file's not loaded, we got nothing to return\n            if (!this.loaded) {\n                return [];\n            }\n            var stateMachineNames = [];\n            for (var i = 0; i < this.artboard.stateMachineCount(); i++) {\n                stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n            }\n            return stateMachineNames;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns the inputs for the specified instanced state machine, or an empty\n     * list if the name is invalid or the state machine is not instanced\n     * @param name the state machine name\n     * @returns the inputs for the named state machine\n     */\n    Rive.prototype.stateMachineInputs = function (name) {\n        // If the file's not loaded, early out, nothing to pause\n        if (!this.loaded) {\n            return;\n        }\n        var stateMachine = this.animator.stateMachines.find(function (m) { return m.name === name; });\n        return stateMachine === null || stateMachine === void 0 ? void 0 : stateMachine.inputs;\n    };\n    Object.defineProperty(Rive.prototype, \"playingStateMachineNames\", {\n        // Returns a list of playing machine names\n        get: function () {\n            // If the file's not loaded, we got nothing to return\n            if (!this.loaded) {\n                return [];\n            }\n            return this.animator.stateMachines\n                .filter(function (m) { return m.playing; })\n                .map(function (m) { return m.name; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"playingAnimationNames\", {\n        // Returns a list of playing animation names\n        get: function () {\n            // If the file's not loaded, we got nothing to return\n            if (!this.loaded) {\n                return [];\n            }\n            return this.animator.animations.filter(function (a) { return a.playing; }).map(function (a) { return a.name; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"pausedAnimationNames\", {\n        // Returns a list of paused animation names\n        get: function () {\n            // If the file's not loaded, we got nothing to return\n            if (!this.loaded) {\n                return [];\n            }\n            return this.animator.animations\n                .filter(function (a) { return !a.playing; })\n                .map(function (a) { return a.name; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"pausedStateMachineNames\", {\n        /**\n         *  Returns a list of paused machine names\n         * @returns a list of state machine names that are paused\n         */\n        get: function () {\n            // If the file's not loaded, we got nothing to return\n            if (!this.loaded) {\n                return [];\n            }\n            return this.animator.stateMachines\n                .filter(function (m) { return !m.playing; })\n                .map(function (m) { return m.name; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"isPlaying\", {\n        /**\n         * @returns true if any animation is playing\n         */\n        get: function () {\n            return this.animator.isPlaying;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"isPaused\", {\n        /**\n         * @returns true if all instanced animations are paused\n         */\n        get: function () {\n            return this.animator.isPaused;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"isStopped\", {\n        /**\n         * @returns true if no animations are playing or paused\n         */\n        get: function () {\n            return this.animator.isStopped;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rive.prototype, \"bounds\", {\n        /**\n         * @returns the bounds of the current artboard, or undefined if the artboard\n         * isn't loaded yet.\n         */\n        get: function () {\n            return this.artboard ? this.artboard.bounds : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Subscribe to Rive-generated events\n     * @param type the type of event to subscribe to\n     * @param callback callback to fire when the event occurs\n     */\n    Rive.prototype.on = function (type, callback) {\n        this.eventManager.add({\n            type: type,\n            callback: callback,\n        });\n    };\n    /**\n     * Unsubscribes from a Rive-generated event\n     * @param type the type of event to unsubscribe from\n     * @param callback the callback to unsubscribe\n     */\n    Rive.prototype.off = function (type, callback) {\n        this.eventManager.remove({\n            type: type,\n            callback: callback,\n        });\n    };\n    /**\n     * Unsubscribes from a Rive-generated event\n     * @deprecated\n     * @param callback the callback to unsubscribe from\n     */\n    Rive.prototype.unsubscribe = function (type, callback) {\n        console.warn(\"This function is deprecated: please use `off()` instead.\");\n        this.off(type, callback);\n    };\n    /**\n     * Unsubscribes all Rive listeners from an event type, or everything if no type is\n     * given\n     * @param type the type of event to unsubscribe from, or all types if\n     * undefined\n     */\n    Rive.prototype.removeAllRiveEventListeners = function (type) {\n        this.eventManager.removeAll(type);\n    };\n    /**\n     * Unsubscribes all listeners from an event type, or everything if no type is\n     * given\n     * @deprecated\n     * @param type the type of event to unsubscribe from, or all types if\n     * undefined\n     */\n    Rive.prototype.unsubscribeAll = function (type) {\n        console.warn(\"This function is deprecated: please use `removeAllRiveEventListeners()` instead.\");\n        this.removeAllRiveEventListeners(type);\n    };\n    /**\n     * Stops the rendering loop; this is different from pausing in that it doesn't\n     * change the state of any animation. It stops rendering from occurring. This\n     * is designed for situations such as when Rive isn't visible.\n     *\n     * The only way to start rendering again is to call `startRendering`.\n     * Animations that are marked as playing will start from the position that\n     * they would have been at if rendering had not been stopped.\n     */\n    Rive.prototype.stopRendering = function () {\n        if (this.loaded && this.frameRequestId) {\n            if (this.runtime.cancelAnimationFrame) {\n                this.runtime.cancelAnimationFrame(this.frameRequestId);\n            }\n            else {\n                cancelAnimationFrame(this.frameRequestId);\n            }\n            this.frameRequestId = null;\n        }\n    };\n    /**\n     * Starts the rendering loop if it has been previously stopped. If the\n     * renderer is already active, then this will have zero effect.\n     */\n    Rive.prototype.startRendering = function () {\n        if (this.loaded && this.artboard && !this.frameRequestId) {\n            if (this.runtime.requestAnimationFrame) {\n                this.frameRequestId = this.runtime.requestAnimationFrame(this.draw.bind(this));\n            }\n            else {\n                this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n            }\n        }\n    };\n    /**\n     * Enables frames-per-second (FPS) reporting for the runtime\n     * If no callback is provided, Rive will append a fixed-position div at the top-right corner of\n     * the page with the FPS reading\n     * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n     */\n    Rive.prototype.enableFPSCounter = function (fpsCallback) {\n        this.runtime.enableFPSCounter(fpsCallback);\n    };\n    /**\n     * Disables frames-per-second (FPS) reporting for the runtime\n     */\n    Rive.prototype.disableFPSCounter = function () {\n        this.runtime.disableFPSCounter();\n    };\n    Object.defineProperty(Rive.prototype, \"contents\", {\n        /**\n         * Returns the contents of a Rive file: the artboards, animations, and state machines\n         */\n        get: function () {\n            if (!this.loaded) {\n                return undefined;\n            }\n            var riveContents = {\n                artboards: [],\n            };\n            for (var i = 0; i < this.file.artboardCount(); i++) {\n                var artboard = this.file.artboardByIndex(i);\n                var artboardContents = {\n                    name: artboard.name,\n                    animations: [],\n                    stateMachines: [],\n                };\n                for (var j = 0; j < artboard.animationCount(); j++) {\n                    var animation = artboard.animationByIndex(j);\n                    artboardContents.animations.push(animation.name);\n                }\n                for (var k = 0; k < artboard.stateMachineCount(); k++) {\n                    var stateMachine = artboard.stateMachineByIndex(k);\n                    var name_1 = stateMachine.name;\n                    var instance = new this.runtime.StateMachineInstance(stateMachine, artboard);\n                    var inputContents = [];\n                    for (var l = 0; l < instance.inputCount(); l++) {\n                        var input = instance.input(l);\n                        inputContents.push({ name: input.name, type: input.type });\n                    }\n                    artboardContents.stateMachines.push({\n                        name: name_1,\n                        inputs: inputContents,\n                    });\n                }\n                riveContents.artboards.push(artboardContents);\n            }\n            return riveContents;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Error message for missing source or buffer\n    Rive.missingErrorMessage = \"Rive source file or data buffer required\";\n    return Rive;\n}());\n\n// Loads Rive data from a URI via fetch.\nvar loadRiveFile = function (src) { return __awaiter(void 0, void 0, void 0, function () {\n    var req, res, buffer;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                req = new Request(src);\n                return [4 /*yield*/, fetch(req)];\n            case 1:\n                res = _a.sent();\n                return [4 /*yield*/, res.arrayBuffer()];\n            case 2:\n                buffer = _a.sent();\n                return [2 /*return*/, buffer];\n        }\n    });\n}); };\n// #endregion\n// #region utility functions\n/*\n * Utility function to ensure an object is a string array\n */\nvar mapToStringArray = function (obj) {\n    if (typeof obj === \"string\") {\n        return [obj];\n    }\n    else if (obj instanceof Array) {\n        return obj;\n    }\n    // If obj is undefined, return empty array\n    return [];\n};\n// #endregion\n// #region testing utilities\n// Exports to only be used for tests\nvar Testing = {\n    EventManager: EventManager,\n    TaskQueueManager: TaskQueueManager,\n};\n// #endregion\n// #region asset loaders\n/**\n * Decodes bytes into an image.\n *\n * Be sure to call `.dispose()` on the image once it is no longer needed. This\n * allows the engine to clean it up when it is not used by any more animations.\n */\nvar decodeImage = function (bytes) {\n    return new Promise(function (resolve) {\n        return RuntimeLoader.getInstance(function (rive) {\n            rive.decodeImage(bytes, resolve);\n        });\n    });\n};\n/**\n * Decodes bytes into a font.\n *\n * Be sure to call `.dispose()` on the font once it is no longer needed. This\n * allows the engine to clean it up when it is not used by any more animations.\n */\nvar decodeFont = function (bytes) {\n    return new Promise(function (resolve) {\n        return RuntimeLoader.getInstance(function (rive) {\n            rive.decodeFont(bytes, resolve);\n        });\n    });\n};\n// #endregion\n\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=rive.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rive\"] = factory();\n\telse\n\t\troot[\"rive\"] = factory();\n})(this, () => {\nreturn ","\nvar Rive = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\nvar h=moduleArg,ba,ca;h.ready=new Promise((b,a)=>{ba=b;ca=a});\nfunction da(){function b(m){const l=d;c=a=0;d=new Map;l.forEach(p=>{try{p(m)}catch(k){console.error(k)}});this.fb();e&&e.Db()}let a=0,c=0,d=new Map,e=null,f=null;this.requestAnimationFrame=function(m){a||(a=requestAnimationFrame(b.bind(this)));const l=++c;d.set(l,m);return l};this.cancelAnimationFrame=function(m){d.delete(m);a&&0==d.size&&(cancelAnimationFrame(a),a=0)};this.Bb=function(m){f&&(document.body.remove(f),f=null);m||(f=document.createElement(\"div\"),f.style.backgroundColor=\"black\",f.style.position=\n\"fixed\",f.style.right=0,f.style.top=0,f.style.color=\"white\",f.style.padding=\"4px\",f.innerHTML=\"RIVE FPS\",m=function(l){f.innerHTML=\"RIVE FPS \"+l.toFixed(1)},document.body.appendChild(f));e=new function(){let l=0,p=0;this.Db=function(){var k=performance.now();p?(++l,k-=p,1E3<k&&(m(1E3*l/k),l=p=0)):(p=k,l=0)}}};this.yb=function(){f&&(document.body.remove(f),f=null);e=null};this.fb=function(){}}\nfunction ea(b){console.assert(!0);const a=new Map;let c=-Infinity;this.push=function(d){d=d+((1<<b)-1)>>b;a.has(d)&&clearTimeout(a.get(d));a.set(d,setTimeout(function(){a.delete(d);0==a.length?c=-Infinity:d==c&&(c=Math.max(...a.keys()),console.assert(c<d))},1E3));c=Math.max(d,c);return c<<b}}\nconst ha=\"createConicGradient createImageData createLinearGradient createPattern createRadialGradient getContextAttributes getImageData getLineDash getTransform isContextLost isPointInPath isPointInStroke measureText\".split(\" \"),ka=new function(){function b(){if(!a){var t=document.createElement(\"canvas\"),g={alpha:1,depth:0,stencil:0,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:1,\nrenderViaOffscreenBackBuffer:1};let n=t.getContext(\"webgl2\",g);if(n)c=2;else if(n=t.getContext(\"webgl\",g))c=1;else return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1;d=Math.min(n.getParameter(n.MAX_RENDERBUFFER_SIZE),n.getParameter(n.MAX_TEXTURE_SIZE));function w(H,x,A){x=n.createShader(x);n.shaderSource(x,A);n.compileShader(x);A=n.getShaderInfoLog(x);if(0<A.length)throw A;n.attachShader(H,x)}t=n.createProgram();w(t,n.VERTEX_SHADER,\"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\nw(t,n.FRAGMENT_SHADER,\"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");n.bindAttribLocation(t,0,\"vertex\");n.bindAttribLocation(t,1,\"uv\");n.linkProgram(t);g=n.getProgramInfoLog(t);if(0<g.trim().length)throw g;e=n.getUniformLocation(t,\"mat\");f=n.getUniformLocation(t,\"translate\");n.useProgram(t);n.bindBuffer(n.ARRAY_BUFFER,n.createBuffer());\nn.enableVertexAttribArray(0);n.enableVertexAttribArray(1);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,n.createBuffer());n.uniform1i(n.getUniformLocation(t,\"image\"),0);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0);a=n}return!0}let a=null,c=0,d=0,e=null,f=null,m=0,l=0;this.Mb=function(){b();return d};this.vb=function(t){if(!b())return null;const g=a.createTexture();a.bindTexture(a.TEXTURE_2D,g);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,t);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);\na.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);2==c?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR),a.generateMipmap(a.TEXTURE_2D)):a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);return g};const p=new ea(8),k=new ea(8),r=new ea(10),u=new ea(10);this.Ab=function(t,g,n,w,H){if(b()){var x=p.push(t),A=k.push(g);if(a.canvas.width!=x||a.canvas.height!=A)a.canvas.width=x,a.canvas.height=A;\na.viewport(0,A-g,t,g);a.disable(a.SCISSOR_TEST);a.clearColor(0,0,0,0);a.clear(a.COLOR_BUFFER_BIT);a.enable(a.SCISSOR_TEST);n.sort((B,fa)=>fa.jb-B.jb);x=r.push(w);m!=x&&(a.bufferData(a.ARRAY_BUFFER,8*x,a.DYNAMIC_DRAW),m=x);x=0;for(var J of n)a.bufferSubData(a.ARRAY_BUFFER,x,J.Ra),x+=4*J.Ra.length;console.assert(x==4*w);for(var Q of n)a.bufferSubData(a.ARRAY_BUFFER,x,Q.mb),x+=4*Q.mb.length;console.assert(x==8*w);x=u.push(H);l!=x&&(a.bufferData(a.ELEMENT_ARRAY_BUFFER,2*x,a.DYNAMIC_DRAW),l=x);J=0;for(var aa of n)a.bufferSubData(a.ELEMENT_ARRAY_BUFFER,\nJ,aa.indices),J+=2*aa.indices.length;console.assert(J==2*H);aa=0;Q=!0;x=J=0;for(const B of n){B.image.Ma!=aa&&(a.bindTexture(a.TEXTURE_2D,B.image.rb||null),aa=B.image.Ma);B.Pb?(a.scissor(B.Va,A-B.Wa-B.cb,B.$b,B.cb),Q=!0):Q&&(a.scissor(0,A-g,t,g),Q=!1);n=2/t;const fa=-2/g;a.uniform4f(e,B.xa[0]*n*B.Ga,B.xa[1]*fa*B.Ha,B.xa[2]*n*B.Ga,B.xa[3]*fa*B.Ha);a.uniform2f(f,B.xa[4]*n*B.Ga+n*(B.Va-B.Nb*B.Ga)-1,B.xa[5]*fa*B.Ha+fa*(B.Wa-B.Ob*B.Ha)+1);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,x);a.vertexAttribPointer(1,\n2,a.FLOAT,!1,0,x+4*w);a.drawElements(a.TRIANGLES,B.indices.length,a.UNSIGNED_SHORT,J);x+=4*B.Ra.length;J+=2*B.indices.length}console.assert(x==4*w);console.assert(J==2*H)}};this.canvas=function(){return b()&&a.canvas}},la=h.onRuntimeInitialized;\nh.onRuntimeInitialized=function(){function b(q){switch(q){case k.srcOver:return\"source-over\";case k.screen:return\"screen\";case k.overlay:return\"overlay\";case k.darken:return\"darken\";case k.lighten:return\"lighten\";case k.colorDodge:return\"color-dodge\";case k.colorBurn:return\"color-burn\";case k.hardLight:return\"hard-light\";case k.softLight:return\"soft-light\";case k.difference:return\"difference\";case k.exclusion:return\"exclusion\";case k.multiply:return\"multiply\";case k.hue:return\"hue\";case k.saturation:return\"saturation\";\ncase k.color:return\"color\";case k.luminosity:return\"luminosity\"}}function a(q){return\"rgba(\"+((16711680&q)>>>16)+\",\"+((65280&q)>>>8)+\",\"+((255&q)>>>0)+\",\"+((4278190080&q)>>>24)/255+\")\"}function c(){0<J.length&&(ka.Ab(A.drawWidth(),A.drawHeight(),J,Q,aa),J=[],aa=Q=0,A.reset(512,512));for(const q of x){for(const v of q.ja)v();q.ja=[]}x.clear()}la&&la();var d=h.RenderPaintStyle;const e=h.RenderPath,f=h.RenderPaint,m=h.Renderer,l=h.StrokeCap,p=h.StrokeJoin,k=h.BlendMode,r=d.fill,u=d.stroke,t=h.FillRule.evenOdd;\nlet g=1;var n=h.RenderImage.extend(\"CanvasRenderImage\",{__construct:function({Aa:q,Fa:v}={}){this.__parent.__construct.call(this);this.Ma=g;g=g+1&2147483647||1;this.Aa=q;this.Fa=v},decode:function(q){var v=this;v.Fa&&v.Fa(v);var C=new Image;C.src=URL.createObjectURL(new Blob([q],{type:\"image/png\"}));C.onload=function(){v.ob=C;v.rb=ka.vb(C);v.size(C.width,C.height);v.Aa&&v.Aa(v)}}}),w=e.extend(\"CanvasRenderPath\",{__construct:function(){this.__parent.__construct.call(this);this.pa=new Path2D},rewind:function(){this.pa=\nnew Path2D},addPath:function(q,v,C,D,z,E,F){var G=this.pa,T=G.addPath;q=q.pa;const K=new DOMMatrix;K.a=v;K.b=C;K.c=D;K.d=z;K.e=E;K.f=F;T.call(G,q,K)},fillRule:function(q){this.Ta=q},moveTo:function(q,v){this.pa.moveTo(q,v)},lineTo:function(q,v){this.pa.lineTo(q,v)},cubicTo:function(q,v,C,D,z,E){this.pa.bezierCurveTo(q,v,C,D,z,E)},close:function(){this.pa.closePath()}}),H=f.extend(\"CanvasRenderPaint\",{color:function(q){this.Ua=a(q)},thickness:function(q){this.sb=q},join:function(q){switch(q){case p.miter:this.La=\n\"miter\";break;case p.round:this.La=\"round\";break;case p.bevel:this.La=\"bevel\"}},cap:function(q){switch(q){case l.butt:this.Ka=\"butt\";break;case l.round:this.Ka=\"round\";break;case l.square:this.Ka=\"square\"}},style:function(q){this.qb=q},blendMode:function(q){this.nb=b(q)},clearGradient:function(){this.za=null},linearGradient:function(q,v,C,D){this.za={kb:q,lb:v,Za:C,$a:D,Pa:[]}},radialGradient:function(q,v,C,D){this.za={kb:q,lb:v,Za:C,$a:D,Pa:[],Kb:!0}},addStop:function(q,v){this.za.Pa.push({color:q,\nstop:v})},completeGradient:function(){},draw:function(q,v,C){let D=this.qb;var z=this.Ua,E=this.za;q.globalCompositeOperation=this.nb;if(null!=E){z=E.kb;var F=E.lb;const T=E.Za;var G=E.$a;const K=E.Pa;E.Kb?(E=T-z,G-=F,z=q.createRadialGradient(z,F,0,z,F,Math.sqrt(E*E+G*G))):z=q.createLinearGradient(z,F,T,G);for(let W=0,N=K.length;W<N;W++)F=K[W],z.addColorStop(F.stop,a(F.color));this.Ua=z;this.za=null}switch(D){case u:q.strokeStyle=z;q.lineWidth=this.sb;q.lineCap=this.Ka;q.lineJoin=this.La;q.stroke(v);\nbreak;case r:q.fillStyle=z,q.fill(v,C)}}});const x=new Set;let A=null,J=[],Q=0,aa=0;var B=h.CanvasRenderer=m.extend(\"Renderer\",{__construct:function(q){this.__parent.__construct.call(this);this.oa=[1,0,0,1,0,0];this.ha=q.getContext(\"2d\");this.Sa=q;this.ja=[]},save:function(){this.oa.push(...this.oa.slice(this.oa.length-6));this.ja.push(this.ha.save.bind(this.ha))},restore:function(){const q=this.oa.length-6;if(6>q)throw\"restore() called without matching save().\";this.oa.splice(q);this.ja.push(this.ha.restore.bind(this.ha))},\ntransform:function(q,v,C,D,z,E){const F=this.oa,G=F.length-6;F.splice(G,6,F[G]*q+F[G+2]*v,F[G+1]*q+F[G+3]*v,F[G]*C+F[G+2]*D,F[G+1]*C+F[G+3]*D,F[G]*z+F[G+2]*E+F[G+4],F[G+1]*z+F[G+3]*E+F[G+5]);this.ja.push(this.ha.transform.bind(this.ha,q,v,C,D,z,E))},rotate:function(q){const v=Math.sin(q);q=Math.cos(q);this.transform(q,v,-v,q,0,0)},_drawPath:function(q,v){this.ja.push(v.draw.bind(v,this.ha,q.pa,q.Ta===t?\"evenodd\":\"nonzero\"))},_drawRiveImage:function(q,v,C){var D=q.ob;if(D){var z=this.ha,E=b(v);this.ja.push(function(){z.globalCompositeOperation=\nE;z.globalAlpha=C;z.drawImage(D,0,0);z.globalAlpha=1})}},_getMatrix:function(q){const v=this.oa,C=v.length-6;for(let D=0;6>D;++D)q[D]=v[C+D]},_drawImageMesh:function(q,v,C,D,z,E,F,G,T,K){var W=this.ha.canvas.width,N=this.ha.canvas.height;const sb=T-F,tb=K-G;F=Math.max(F,0);G=Math.max(G,0);T=Math.min(T,W);K=Math.min(K,N);const ua=T-F,va=K-G;console.assert(ua<=Math.min(sb,W));console.assert(va<=Math.min(tb,N));if(!(0>=ua||0>=va)){T=ua<sb||va<tb;W=K=1;var ia=Math.ceil(ua*K),ja=Math.ceil(va*W);N=ka.Mb();\nia>N&&(K*=N/ia,ia=N);ja>N&&(W*=N/ja,ja=N);A||(A=new h.DynamicRectanizer(N),A.reset(512,512));N=A.addRect(ia,ja);0>N&&(c(),x.add(this),N=A.addRect(ia,ja),console.assert(0<=N));var ub=N&65535,vb=N>>16;J.push({xa:this.oa.slice(this.oa.length-6),image:q,Va:ub,Wa:vb,Nb:F,Ob:G,$b:ia,cb:ja,Ga:K,Ha:W,Ra:new Float32Array(D),mb:new Float32Array(z),indices:new Uint16Array(E),Pb:T,jb:q.Ma<<1|(T?1:0)});Q+=D.length;aa+=E.length;var oa=this.ha,kc=b(v);this.ja.push(function(){oa.save();oa.resetTransform();oa.globalCompositeOperation=\nkc;oa.globalAlpha=C;oa.drawImage(ka.canvas(),ub,vb,ia,ja,F,G,ua,va);oa.restore()})}},_clipPath:function(q){this.ja.push(this.ha.clip.bind(this.ha,q.pa,q.Ta===t?\"evenodd\":\"nonzero\"))},clear:function(){x.add(this);this.ja.push(this.ha.clearRect.bind(this.ha,0,0,this.Sa.width,this.Sa.height))},flush:function(){},translate:function(q,v){this.transform(1,0,0,1,q,v)}});h.makeRenderer=function(q){const v=new B(q),C=v.ha;return new Proxy(v,{get(D,z){if(\"function\"===typeof D[z])return function(...E){return D[z].apply(D,\nE)};if(\"function\"===typeof C[z]){if(-1<ha.indexOf(z))throw Error(\"RiveException: Method call to '\"+z+\"()' is not allowed, as the renderer cannot immediately pass through the return                 values of any canvas 2d context methods.\");return function(...E){v.ja.push(C[z].bind(C,...E))}}return D[z]},set(D,z,E){if(z in C)return C[z]=E,!0}})};h.decodeImage=function(q,v){(new n({Aa:v})).decode(q)};h.renderFactory={makeRenderPaint:function(){return new H},makeRenderPath:function(){return new w},makeRenderImage:function(){let q=\nZa;return new n({Fa:()=>{q.total++},Aa:()=>{q.loaded++;if(q.loaded===q.total){const v=q.ready;v&&(v(),q.ready=null)}}})}};let fa=h.load,Za=null;h.load=function(q,v,C=!0){const D=new h.FallbackFileAssetLoader;void 0!==v&&D.addLoader(v);C&&(v=new h.CDNFileAssetLoader,D.addLoader(v));return new Promise(function(z){let E=null;Za={total:0,loaded:0,ready:function(){z(E)}};E=fa(q,D);0==Za.total&&z(E)})};d=new da;h.requestAnimationFrame=d.requestAnimationFrame.bind(d);h.cancelAnimationFrame=d.cancelAnimationFrame.bind(d);\nh.enableFPSCounter=d.Bb.bind(d);h.disableFPSCounter=d.yb;d.fb=c;h.cleanup=function(){A&&A.delete()}};const ma=h.onRuntimeInitialized;\nh.onRuntimeInitialized=function(){ma&&ma();let b=h.decodeFont;h.decodeFont=function(c,d){c=b(c);d(c)};const a=h.FileAssetLoader;h.ptrToAsset=c=>{let d=h.ptrToFileAsset(c);return d.isImage?h.ptrToImageAsset(c):d.isFont?h.ptrToFontAsset(c):d};h.CustomFileAssetLoader=a.extend(\"CustomFileAssetLoader\",{__construct:function({loadContents:c}){this.__parent.__construct.call(this);this.pb=c},loadContents:function(c,d){c=h.ptrToAsset(c);return this.pb(c,d)}});h.CDNFileAssetLoader=a.extend(\"CDNFileAssetLoader\",\n{__construct:function(){this.__parent.__construct.call(this)},loadContents:function(c){let d=h.ptrToAsset(c);c=d.cdnUuid;if(\"\"===c)return!1;(function(e,f){var m=new XMLHttpRequest;m.responseType=\"arraybuffer\";m.onreadystatechange=function(){4==m.readyState&&200==m.status&&f(m)};m.open(\"GET\",e,!0);m.send(null)})(d.cdnBaseUrl+\"/\"+c,e=>{d.decode(new Uint8Array(e.response))});return!0}});h.FallbackFileAssetLoader=a.extend(\"FallbackFileAssetLoader\",{__construct:function(){this.__parent.__construct.call(this);\nthis.eb=[]},addLoader:function(c){this.eb.push(c)},loadContents:function(c,d){for(let e of this.eb)if(e.loadContents(c,d))return!0;return!1}})};var na=Object.assign({},h),pa=\"./this.program\",qa=\"object\"==typeof window,ra=\"function\"==typeof importScripts,y=\"\",sa,ta;\nif(qa||ra)ra?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),_scriptDir&&(y=_scriptDir),0!==y.indexOf(\"blob:\")?y=y.substr(0,y.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):y=\"\",ra&&(ta=b=>{var a=new XMLHttpRequest;a.open(\"GET\",b,!1);a.responseType=\"arraybuffer\";a.send(null);return new Uint8Array(a.response)}),sa=(b,a,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",b,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?\na(d.response):c()};d.onerror=c;d.send(null)};var wa=h.print||console.log.bind(console),xa=h.printErr||console.error.bind(console);Object.assign(h,na);na=null;h.thisProgram&&(pa=h.thisProgram);var ya;h.wasmBinary&&(ya=h.wasmBinary);var noExitRuntime=h.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&za(\"no native wasm support detected\");var Aa,I,Ba=!1,Ca,L,Da,Ea,M,O,Fa,Ga;\nfunction Ha(){var b=Aa.buffer;h.HEAP8=Ca=new Int8Array(b);h.HEAP16=Da=new Int16Array(b);h.HEAP32=M=new Int32Array(b);h.HEAPU8=L=new Uint8Array(b);h.HEAPU16=Ea=new Uint16Array(b);h.HEAPU32=O=new Uint32Array(b);h.HEAPF32=Fa=new Float32Array(b);h.HEAPF64=Ga=new Float64Array(b)}var Ia,Ja=[],Ka=[],La=[];function Ma(){var b=h.preRun.shift();Ja.unshift(b)}var Na=0,Oa=null,Pa=null;\nfunction za(b){if(h.onAbort)h.onAbort(b);b=\"Aborted(\"+b+\")\";xa(b);Ba=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ca(b);throw b;}function Qa(b){return b.startsWith(\"data:application/octet-stream;base64,\")}var Ra;Ra=\"canvas_advanced.wasm\";if(!Qa(Ra)){var Sa=Ra;Ra=h.locateFile?h.locateFile(Sa,y):y+Sa}function Ta(b){if(b==Ra&&ya)return new Uint8Array(ya);if(ta)return ta(b);throw\"both async and sync fetching of the wasm failed\";}\nfunction Ua(b){if(!ya&&(qa||ra)){if(\"function\"==typeof fetch&&!b.startsWith(\"file://\"))return fetch(b,{credentials:\"same-origin\"}).then(a=>{if(!a.ok)throw\"failed to load wasm binary file at '\"+b+\"'\";return a.arrayBuffer()}).catch(()=>Ta(b));if(sa)return new Promise((a,c)=>{sa(b,d=>a(new Uint8Array(d)),c)})}return Promise.resolve().then(()=>Ta(b))}function Va(b,a,c){return Ua(b).then(d=>WebAssembly.instantiate(d,a)).then(d=>d).then(c,d=>{xa(\"failed to asynchronously prepare wasm: \"+d);za(d)})}\nfunction Wa(b,a){var c=Ra;return ya||\"function\"!=typeof WebAssembly.instantiateStreaming||Qa(c)||c.startsWith(\"file://\")||\"function\"!=typeof fetch?Va(c,b,a):fetch(c,{credentials:\"same-origin\"}).then(d=>WebAssembly.instantiateStreaming(d,b).then(a,function(e){xa(\"wasm streaming compile failed: \"+e);xa(\"falling back to ArrayBuffer instantiation\");return Va(c,b,a)}))}var Xa=b=>{for(;0<b.length;)b.shift()(h)};\nfunction Ya(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?`_${b}`:b}function $a(b,a){b=Ya(b);return{[b]:function(){return a.apply(this,arguments)}}[b]}function ab(){this.qa=[void 0];this.bb=[]}var P=new ab,bb=void 0;function R(b){throw new bb(b);}\nvar S=b=>{b||R(\"Cannot use deleted val. handle = \"+b);return P.get(b).value},U=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:return P.tb({ib:1,value:b})}};\nfunction cb(b){var a=Error,c=$a(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:`${this.name}: ${this.message}`};return c}var db=void 0,eb=void 0;function V(b){for(var a=\"\";L[b];)a+=eb[L[b++]];return a}var fb=[];\nfunction gb(){for(;fb.length;){var b=fb.pop();b.ba.wa=!1;b[\"delete\"]()}}var hb=void 0,ib={};function jb(b,a){for(void 0===a&&R(\"ptr should not be undefined\");b.fa;)a=b.Ba(a),b=b.fa;return a}var kb={};function lb(b){b=mb(b);var a=V(b);nb(b);return a}function ob(b,a){var c=kb[b];void 0===c&&R(a+\" has unknown type \"+lb(b));return c}function pb(){}var qb=!1;function rb(b){--b.count.value;0===b.count.value&&(b.ia?b.la.ra(b.ia):b.ea.ca.ra(b.da))}\nfunction wb(b,a,c){if(a===c)return b;if(void 0===c.fa)return null;b=wb(b,a,c.fa);return null===b?null:c.zb(b)}var xb={};function yb(b,a){a=jb(b,a);return ib[a]}var zb=void 0;function Ab(b){throw new zb(b);}function Bb(b,a){a.ea&&a.da||Ab(\"makeClassHandle requires ptr and ptrType\");!!a.la!==!!a.ia&&Ab(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return Cb(Object.create(b,{ba:{value:a}}))}\nfunction Cb(b){if(\"undefined\"===typeof FinalizationRegistry)return Cb=a=>a,b;qb=new FinalizationRegistry(a=>{rb(a.ba)});Cb=a=>{var c=a.ba;c.ia&&qb.register(a,{ba:c},a);return a};pb=a=>{qb.unregister(a)};return Cb(b)}var Db={};function Eb(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function Fb(b){return this.fromWireType(M[b>>2])}var Gb={},Hb={};\nfunction X(b,a,c){function d(l){l=c(l);l.length!==b.length&&Ab(\"Mismatched type converter count\");for(var p=0;p<b.length;++p)Y(b[p],l[p])}b.forEach(function(l){Hb[l]=a});var e=Array(a.length),f=[],m=0;a.forEach((l,p)=>{kb.hasOwnProperty(l)?e[p]=kb[l]:(f.push(l),Gb.hasOwnProperty(l)||(Gb[l]=[]),Gb[l].push(()=>{e[p]=kb[l];++m;m===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction Ib(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(`Unknown type size: ${b}`);}}function Jb(b,a,c={}){var d=a.name;b||R(`type \"${d}\" must have a positive integer typeid pointer`);if(kb.hasOwnProperty(b)){if(c.Jb)return;R(`Cannot register type '${d}' twice`)}kb[b]=a;delete Hb[b];Gb.hasOwnProperty(b)&&(a=Gb[b],delete Gb[b],a.forEach(e=>e()))}\nfunction Y(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");Jb(b,a,c)}function Kb(b){R(b.ba.ea.ca.name+\" instance already deleted\")}function Lb(){}\nfunction Mb(b,a,c){if(void 0===b[a].ga){var d=b[a];b[a]=function(){b[a].ga.hasOwnProperty(arguments.length)||R(`Function '${c}' called with an invalid number of arguments (${arguments.length}) - expects one of (${b[a].ga})!`);return b[a].ga[arguments.length].apply(this,arguments)};b[a].ga=[];b[a].ga[d.va]=d}}\nfunction Nb(b,a,c){h.hasOwnProperty(b)?((void 0===c||void 0!==h[b].ga&&void 0!==h[b].ga[c])&&R(`Cannot register public name '${b}' twice`),Mb(h,b,b),h.hasOwnProperty(c)&&R(`Cannot register multiple overloads of a function with the same number of arguments (${c})!`),h[b].ga[c]=a):(h[b]=a,void 0!==c&&(h[b].ac=c))}function Ob(b,a,c,d,e,f,m,l){this.name=b;this.constructor=a;this.ma=c;this.ra=d;this.fa=e;this.Eb=f;this.Ba=m;this.zb=l;this.gb=[]}\nfunction Pb(b,a,c){for(;a!==c;)a.Ba||R(`Expected null or instance of ${c.name}, got an instance of ${a.name}`),b=a.Ba(b),a=a.fa;return b}function Qb(b,a){if(null===a)return this.Na&&R(`null is not a valid ${this.name}`),0;a.ba||R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);a.ba.da||R(`Cannot pass deleted object as a pointer of type ${this.name}`);return Pb(a.ba.da,a.ba.ea.ca,this.ca)}\nfunction Sb(b,a){if(null===a){this.Na&&R(`null is not a valid ${this.name}`);if(this.Ea){var c=this.Oa();null!==b&&b.push(this.ra,c);return c}return 0}a.ba||R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);a.ba.da||R(`Cannot pass deleted object as a pointer of type ${this.name}`);!this.Da&&a.ba.ea.Da&&R(`Cannot convert argument of type ${a.ba.la?a.ba.la.name:a.ba.ea.name} to parameter type ${this.name}`);c=Pb(a.ba.da,a.ba.ea.ca,this.ca);if(this.Ea)switch(void 0===a.ba.ia&&R(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Vb){case 0:a.ba.la===this?c=a.ba.ia:R(`Cannot convert argument of type ${a.ba.la?a.ba.la.name:a.ba.ea.name} to parameter type ${this.name}`);break;case 1:c=a.ba.ia;break;case 2:if(a.ba.la===this)c=a.ba.ia;else{var d=a.clone();c=this.Rb(c,U(function(){d[\"delete\"]()}));null!==b&&b.push(this.ra,c)}break;default:R(\"Unsupporting sharing policy\")}return c}\nfunction Tb(b,a){if(null===a)return this.Na&&R(`null is not a valid ${this.name}`),0;a.ba||R(`Cannot pass \"${Rb(a)}\" as a ${this.name}`);a.ba.da||R(`Cannot pass deleted object as a pointer of type ${this.name}`);a.ba.ea.Da&&R(`Cannot convert argument of type ${a.ba.ea.name} to parameter type ${this.name}`);return Pb(a.ba.da,a.ba.ea.ca,this.ca)}\nfunction Ub(b,a,c,d){this.name=b;this.ca=a;this.Na=c;this.Da=d;this.Ea=!1;this.ra=this.Rb=this.Oa=this.hb=this.Vb=this.Qb=void 0;void 0!==a.fa?this.toWireType=Sb:(this.toWireType=d?Qb:Tb,this.ka=null)}function Vb(b,a,c){h.hasOwnProperty(b)||Ab(\"Replacing nonexistant public symbol\");void 0!==h[b].ga&&void 0!==c?h[b].ga[c]=a:(h[b]=a,h[b].va=c)}\nvar Wb=(b,a)=>{var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=h[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=Ia.get(a).apply(null,c);return d}};function Z(b,a){b=V(b);var c=b.includes(\"j\")?Wb(b,a):Ia.get(a);\"function\"!=typeof c&&R(`unknown function pointer with signature ${b}: ${a}`);return c}var Xb=void 0;\nfunction Yb(b,a){function c(f){e[f]||kb[f]||(Hb[f]?Hb[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new Xb(`${b}: `+d.map(lb).join([\", \"]));}\nfunction Zb(b,a,c,d,e){var f=a.length;2>f&&R(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var m=null!==a[1]&&null!==c,l=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].ka){l=!0;break}var p=\"void\"!==a[0].name,k=f-2,r=Array(k),u=[],t=[];return function(){arguments.length!==k&&R(`function ${b} called with ${arguments.length} arguments, expected ${k} args!`);t.length=0;u.length=m?2:1;u[0]=e;if(m){var g=a[1].toWireType(t,this);u[1]=g}for(var n=0;n<k;++n)r[n]=\na[n+2].toWireType(t,arguments[n]),u.push(r[n]);n=d.apply(null,u);if(l)Eb(t);else for(var w=m?1:2;w<a.length;w++){var H=1===w?g:r[w-2];null!==a[w].ka&&a[w].ka(H)}g=p?a[0].fromWireType(n):void 0;return g}}function $b(b,a){for(var c=[],d=0;d<b;d++)c.push(O[a+4*d>>2]);return c}\nfunction ac(b,a,c){b instanceof Object||R(`${c} with invalid \"this\": ${b}`);b instanceof a.ca.constructor||R(`${c} incompatible with \"this\" of type ${b.constructor.name}`);b.ba.da||R(`cannot call emscripten binding method ${c} on deleted object`);return Pb(b.ba.da,b.ba.ea.ca,a.ca)}function bc(b){b>=P.Xa&&0===--P.get(b).ib&&P.wb(b)}\nfunction cc(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?Ca:L)[d])};case 1:return function(d){return this.fromWireType((c?Da:Ea)[d>>1])};case 2:return function(d){return this.fromWireType((c?M:O)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function Rb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction dc(b,a){switch(a){case 2:return function(c){return this.fromWireType(Fa[c>>2])};case 3:return function(c){return this.fromWireType(Ga[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction ec(b,a,c){switch(a){case 0:return c?function(d){return Ca[d]}:function(d){return L[d]};case 1:return c?function(d){return Da[d>>1]}:function(d){return Ea[d>>1]};case 2:return c?function(d){return M[d>>2]}:function(d){return O[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}\nvar fc=(b,a,c,d)=>{if(0<d){d=c+d-1;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var m=b.charCodeAt(++e);f=65536+((f&1023)<<10)|m&1023}if(127>=f){if(c>=d)break;a[c++]=f}else{if(2047>=f){if(c+1>=d)break;a[c++]=192|f>>6}else{if(65535>=f){if(c+2>=d)break;a[c++]=224|f>>12}else{if(c+3>=d)break;a[c++]=240|f>>18;a[c++]=128|f>>12&63}a[c++]=128|f>>6&63}a[c++]=128|f&63}}a[c]=0}},gc=b=>{for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);127>=d?a++:2047>=d?a+=2:55296<=d&&57343>=\nd?(a+=4,++c):a+=3}return a},hc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,ic=(b,a,c)=>{var d=a+c;for(c=a;b[c]&&!(c>=d);)++c;if(16<c-a&&b.buffer&&hc)return hc.decode(b.subarray(a,c));for(d=\"\";a<c;){var e=b[a++];if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var m=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|m:(e&7)<<18|f<<12|m<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d},\njc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,lc=(b,a)=>{var c=b>>1;for(var d=c+a/2;!(c>=d)&&Ea[c];)++c;c<<=1;if(32<c-b&&jc)return jc.decode(L.subarray(b,c));c=\"\";for(d=0;!(d>=a/2);++d){var e=Da[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c},mc=(b,a,c)=>{void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)Da[a>>1]=b.charCodeAt(e),a+=2;Da[a>>1]=0;return a-d},nc=b=>2*b.length,oc=(b,a)=>{for(var c=0,d=\"\";!(c>=a/\n4);){var e=M[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d},pc=(b,a,c)=>{void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var m=b.charCodeAt(++e);f=65536+((f&1023)<<10)|m&1023}M[a>>2]=f;a+=4;if(a+4>c)break}M[a>>2]=0;return a-d},qc=b=>{for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a},rc={};\nfunction sc(b){var a=rc[b];return void 0===a?V(b):a}var tc=[];function uc(b){var a=tc.length;tc.push(b);return a}function vc(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=ob(O[a+4*d>>2],\"parameter \"+d);return c}\nvar wc=[],xc={},zc=()=>{if(!yc){var b={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:pa||\"./this.program\"},a;for(a in xc)void 0===xc[a]?delete b[a]:b[a]=xc[a];var c=[];for(a in b)c.push(`${a}=${b[a]}`);yc=c}return yc},yc,Ac=[null,[],[]],Bc=b=>0===b%4&&(0!==b%100||0===b%400),Cc=[31,29,31,30,31,30,31,31,30,31,30,31],Dc=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Ec(b){var a=Array(gc(b)+1);fc(b,a,0,a.length);return a}\nvar Fc=(b,a,c,d)=>{function e(g,n,w){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<n;)g=w[0]+g;return g}function f(g,n){return e(g,n,\"0\")}function m(g,n){function w(x){return 0>x?-1:0<x?1:0}var H;0===(H=w(g.getFullYear()-n.getFullYear()))&&0===(H=w(g.getMonth()-n.getMonth()))&&(H=w(g.getDate()-n.getDate()));return H}function l(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function p(g){var n=g.ta;for(g=new Date((new Date(g.ua+1900,0,1)).getTime());0<n;){var w=g.getMonth(),H=(Bc(g.getFullYear())?Cc:Dc)[w];if(n>H-g.getDate())n-=H-g.getDate()+1,g.setDate(1),11>w?g.setMonth(w+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+n);break}}w=new Date(g.getFullYear()+1,0,4);n=l(new Date(g.getFullYear(),\n0,4));w=l(w);return 0>=m(n,g)?0>=m(w,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var k=M[d+40>>2];d={Yb:M[d>>2],Xb:M[d+4>>2],Ia:M[d+8>>2],Qa:M[d+12>>2],Ja:M[d+16>>2],ua:M[d+20>>2],na:M[d+24>>2],ta:M[d+28>>2],bc:M[d+32>>2],Wb:M[d+36>>2],Zb:k?k?ic(L,k):\"\":\"\"};c=c?ic(L,c):\"\";k={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\n\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in k)c=c.replace(new RegExp(r,\"g\"),k[r]);var u=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),t=\"January February March April May June July August September October November December\".split(\" \");k={\"%a\":g=>u[g.na].substring(0,3),\"%A\":g=>u[g.na],\"%b\":g=>t[g.Ja].substring(0,3),\"%B\":g=>t[g.Ja],\"%C\":g=>f((g.ua+1900)/\n100|0,2),\"%d\":g=>f(g.Qa,2),\"%e\":g=>e(g.Qa,2,\" \"),\"%g\":g=>p(g).toString().substring(2),\"%G\":g=>p(g),\"%H\":g=>f(g.Ia,2),\"%I\":g=>{g=g.Ia;0==g?g=12:12<g&&(g-=12);return f(g,2)},\"%j\":g=>{for(var n=0,w=0;w<=g.Ja-1;n+=(Bc(g.ua+1900)?Cc:Dc)[w++]);return f(g.Qa+n,3)},\"%m\":g=>f(g.Ja+1,2),\"%M\":g=>f(g.Xb,2),\"%n\":()=>\"\\n\",\"%p\":g=>0<=g.Ia&&12>g.Ia?\"AM\":\"PM\",\"%S\":g=>f(g.Yb,2),\"%t\":()=>\"\\t\",\"%u\":g=>g.na||7,\"%U\":g=>f(Math.floor((g.ta+7-g.na)/7),2),\"%V\":g=>{var n=Math.floor((g.ta+7-(g.na+6)%7)/7);2>=(g.na+371-g.ta-\n2)%7&&n++;if(n)53==n&&(w=(g.na+371-g.ta)%7,4==w||3==w&&Bc(g.ua)||(n=1));else{n=52;var w=(g.na+7-g.ta-1)%7;(4==w||5==w&&Bc(g.ua%400-1))&&n++}return f(n,2)},\"%w\":g=>g.na,\"%W\":g=>f(Math.floor((g.ta+7-(g.na+6)%7)/7),2),\"%y\":g=>(g.ua+1900).toString().substring(2),\"%Y\":g=>g.ua+1900,\"%z\":g=>{g=g.Wb;var n=0<=g;g=Math.abs(g)/60;return(n?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":g=>g.Zb,\"%%\":()=>\"%\"};c=c.replace(/%%/g,\"\\x00\\x00\");for(r in k)c.includes(r)&&(c=c.replace(new RegExp(r,\"g\"),k[r](d)));\nc=c.replace(/\\0\\0/g,\"%\");r=Ec(c);if(r.length>a)return 0;Ca.set(r,b);return r.length-1};Object.assign(ab.prototype,{get(b){return this.qa[b]},has(b){return void 0!==this.qa[b]},tb(b){var a=this.bb.pop()||this.qa.length;this.qa[a]=b;return a},wb(b){this.qa[b]=void 0;this.bb.push(b)}});bb=h.BindingError=class extends Error{constructor(b){super(b);this.name=\"BindingError\"}};P.qa.push({value:void 0},{value:null},{value:!0},{value:!1});P.Xa=P.qa.length;\nh.count_emval_handles=function(){for(var b=0,a=P.Xa;a<P.qa.length;++a)void 0!==P.qa[a]&&++b;return b};db=h.PureVirtualError=cb(\"PureVirtualError\");for(var Gc=Array(256),Hc=0;256>Hc;++Hc)Gc[Hc]=String.fromCharCode(Hc);eb=Gc;h.getInheritedInstanceCount=function(){return Object.keys(ib).length};h.getLiveInheritedInstances=function(){var b=[],a;for(a in ib)ib.hasOwnProperty(a)&&b.push(ib[a]);return b};h.flushPendingDeletes=gb;h.setDelayFunction=function(b){hb=b;fb.length&&hb&&hb(gb)};\nzb=h.InternalError=class extends Error{constructor(b){super(b);this.name=\"InternalError\"}};Lb.prototype.isAliasOf=function(b){if(!(this instanceof Lb&&b instanceof Lb))return!1;var a=this.ba.ea.ca,c=this.ba.da,d=b.ba.ea.ca;for(b=b.ba.da;a.fa;)c=a.Ba(c),a=a.fa;for(;d.fa;)b=d.Ba(b),d=d.fa;return a===d&&c===b};\nLb.prototype.clone=function(){this.ba.da||Kb(this);if(this.ba.ya)return this.ba.count.value+=1,this;var b=Cb,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.ba;b=b(c.call(a,d,{ba:{value:{count:e.count,wa:e.wa,ya:e.ya,da:e.da,ea:e.ea,ia:e.ia,la:e.la}}}));b.ba.count.value+=1;b.ba.wa=!1;return b};Lb.prototype[\"delete\"]=function(){this.ba.da||Kb(this);this.ba.wa&&!this.ba.ya&&R(\"Object already scheduled for deletion\");pb(this);rb(this.ba);this.ba.ya||(this.ba.ia=void 0,this.ba.da=void 0)};\nLb.prototype.isDeleted=function(){return!this.ba.da};Lb.prototype.deleteLater=function(){this.ba.da||Kb(this);this.ba.wa&&!this.ba.ya&&R(\"Object already scheduled for deletion\");fb.push(this);1===fb.length&&hb&&hb(gb);this.ba.wa=!0;return this};Ub.prototype.Fb=function(b){this.hb&&(b=this.hb(b));return b};Ub.prototype.Ya=function(b){this.ra&&this.ra(b)};Ub.prototype.argPackAdvance=8;Ub.prototype.readValueFromPointer=Fb;Ub.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nUb.prototype.fromWireType=function(b){function a(){return this.Ea?Bb(this.ca.ma,{ea:this.Qb,da:c,la:this,ia:b}):Bb(this.ca.ma,{ea:this,da:b})}var c=this.Fb(b);if(!c)return this.Ya(b),null;var d=yb(this.ca,c);if(void 0!==d){if(0===d.ba.count.value)return d.ba.da=c,d.ba.ia=b,d.clone();d=d.clone();this.Ya(b);return d}d=this.ca.Eb(c);d=xb[d];if(!d)return a.call(this);d=this.Da?d.ub:d.pointerType;var e=wb(c,this.ca,d.ca);return null===e?a.call(this):this.Ea?Bb(d.ca.ma,{ea:d,da:e,la:this,ia:b}):Bb(d.ca.ma,\n{ea:d,da:e})};Xb=h.UnboundTypeError=cb(\"UnboundTypeError\");\nvar Jc={N:function(b,a,c){b=V(b);a=ob(a,\"wrapper\");c=S(c);var d=[].slice,e=a.ca,f=e.ma,m=e.fa.ma,l=e.fa.constructor;b=$a(b,function(){e.fa.gb.forEach(function(k){if(this[k]===m[k])throw new db(`Pure virtual function ${k} must be implemented in JavaScript`);}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&R(\"Pass correct 'this' to __construct\");var k=l.implement.apply(void 0,[this].concat(d.call(arguments)));\npb(k);var r=k.ba;k.notifyOnDestruction();r.ya=!0;Object.defineProperties(this,{ba:{value:r}});Cb(this);k=r.da;k=jb(e,k);ib.hasOwnProperty(k)?R(`Tried to register registered instance: ${k}`):ib[k]=this};f.__destruct=function(){this===f&&R(\"Pass correct 'this' to __destruct\");pb(this);var k=this.ba.da;k=jb(e,k);ib.hasOwnProperty(k)?delete ib[k]:R(`Tried to unregister unregistered instance: ${k}`)};b.prototype=Object.create(f);for(var p in c)b.prototype[p]=c[p];return U(b)},O:function(b){var a=Db[b];\ndelete Db[b];var c=a.Oa,d=a.ra,e=a.ab,f=e.map(m=>m.Ib).concat(e.map(m=>m.Tb));X([b],f,m=>{var l={};e.forEach((p,k)=>{var r=m[k],u=p.Gb,t=p.Hb,g=m[k+e.length],n=p.Sb,w=p.Ub;l[p.Cb]={read:H=>r.fromWireType(u(t,H)),write:(H,x)=>{var A=[];n(w,H,g.toWireType(A,x));Eb(A)}}});return[{name:a.name,fromWireType:function(p){var k={},r;for(r in l)k[r]=l[r].read(p);d(p);return k},toWireType:function(p,k){for(var r in l)if(!(r in k))throw new TypeError(`Missing field: \"${r}\"`);var u=c();for(r in l)l[r].write(u,\nk[r]);null!==p&&p.push(d,u);return u},argPackAdvance:8,readValueFromPointer:Fb,ka:d}]})},C:function(){},K:function(b,a,c,d,e){var f=Ib(c);a=V(a);Y(b,{name:a,fromWireType:function(m){return!!m},toWireType:function(m,l){return l?d:e},argPackAdvance:8,readValueFromPointer:function(m){if(1===c)var l=Ca;else if(2===c)l=Da;else if(4===c)l=M;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(l[m>>f])},ka:null})},f:function(b,a,c,d,e,f,m,l,p,k,r,u,t){r=V(r);f=Z(e,f);l&&(l=\nZ(m,l));k&&(k=Z(p,k));t=Z(u,t);var g=Ya(r);Nb(g,function(){Yb(`Cannot construct ${r} due to unbound types`,[d])});X([b,a,c],d?[d]:[],function(n){n=n[0];if(d){var w=n.ca;var H=w.ma}else H=Lb.prototype;n=$a(g,function(){if(Object.getPrototypeOf(this)!==x)throw new bb(\"Use 'new' to construct \"+r);if(void 0===A.sa)throw new bb(r+\" has no accessible constructor\");var Q=A.sa[arguments.length];if(void 0===Q)throw new bb(`Tried to invoke ctor of ${r} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(A.sa).toString()}) parameters instead!`);\nreturn Q.apply(this,arguments)});var x=Object.create(H,{constructor:{value:n}});n.prototype=x;var A=new Ob(r,n,x,t,w,f,l,k);A.fa&&(void 0===A.fa.Ca&&(A.fa.Ca=[]),A.fa.Ca.push(A));w=new Ub(r,A,!0,!1);H=new Ub(r+\"*\",A,!1,!1);var J=new Ub(r+\" const*\",A,!1,!0);xb[b]={pointerType:H,ub:J};Vb(g,n);return[w,H,J]})},j:function(b,a,c,d,e,f,m){var l=$b(c,d);a=V(a);f=Z(e,f);X([],[b],function(p){function k(){Yb(`Cannot call ${r} due to unbound types`,l)}p=p[0];var r=`${p.name}.${a}`;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\nvar u=p.ca.constructor;void 0===u[a]?(k.va=c-1,u[a]=k):(Mb(u,a,r),u[a].ga[c-1]=k);X([],l,function(t){t=Zb(r,[t[0],null].concat(t.slice(1)),null,f,m);void 0===u[a].ga?(t.va=c-1,u[a]=t):u[a].ga[c-1]=t;if(p.ca.Ca)for(const g of p.ca.Ca)g.constructor.hasOwnProperty(a)||(g.constructor[a]=t);return[]});return[]})},x:function(b,a,c,d,e,f,m,l){a=V(a);f=Z(e,f);X([],[b],function(p){p=p[0];var k=`${p.name}.${a}`,r={get(){Yb(`Cannot access ${k} due to unbound types`,[c])},enumerable:!0,configurable:!0};r.set=\nl?()=>{Yb(`Cannot access ${k} due to unbound types`,[c])}:()=>{R(`${k} is a read-only property`)};Object.defineProperty(p.ca.constructor,a,r);X([],[c],function(u){u=u[0];var t={get(){return u.fromWireType(f(d))},enumerable:!0};l&&(l=Z(m,l),t.set=g=>{var n=[];l(d,u.toWireType(n,g));Eb(n)});Object.defineProperty(p.ca.constructor,a,t);return[]});return[]})},s:function(b,a,c,d,e,f){var m=$b(a,c);e=Z(d,e);X([],[b],function(l){l=l[0];var p=`constructor ${l.name}`;void 0===l.ca.sa&&(l.ca.sa=[]);if(void 0!==\nl.ca.sa[a-1])throw new bb(`Cannot register multiple constructors with identical number of parameters (${a-1}) for class '${l.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);l.ca.sa[a-1]=()=>{Yb(`Cannot construct ${l.name} due to unbound types`,m)};X([],m,function(k){k.splice(1,0,null);l.ca.sa[a-1]=Zb(p,k,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,m,l){var p=$b(c,d);a=V(a);f=Z(e,f);X([],[b],function(k){function r(){Yb(`Cannot call ${u} due to unbound types`,\np)}k=k[0];var u=`${k.name}.${a}`;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);l&&k.ca.gb.push(a);var t=k.ca.ma,g=t[a];void 0===g||void 0===g.ga&&g.className!==k.name&&g.va===c-2?(r.va=c-2,r.className=k.name,t[a]=r):(Mb(t,a,u),t[a].ga[c-2]=r);X([],p,function(n){n=Zb(u,n,k,f,m);void 0===t[a].ga?(n.va=c-2,t[a]=n):t[a].ga[c-2]=n;return[]});return[]})},e:function(b,a,c,d,e,f,m,l,p,k){a=V(a);e=Z(d,e);X([],[b],function(r){r=r[0];var u=`${r.name}.${a}`,t={get(){Yb(`Cannot access ${u} due to unbound types`,\n[c,m])},enumerable:!0,configurable:!0};t.set=p?()=>{Yb(`Cannot access ${u} due to unbound types`,[c,m])}:()=>{R(u+\" is a read-only property\")};Object.defineProperty(r.ca.ma,a,t);X([],p?[c,m]:[c],function(g){var n=g[0],w={get(){var x=ac(this,r,u+\" getter\");return n.fromWireType(e(f,x))},enumerable:!0};if(p){p=Z(l,p);var H=g[1];w.set=function(x){var A=ac(this,r,u+\" setter\"),J=[];p(k,A,H.toWireType(J,x));Eb(J)}}Object.defineProperty(r.ca.ma,a,w);return[]});return[]})},J:function(b,a){a=V(a);Y(b,{name:a,\nfromWireType:function(c){var d=S(c);bc(c);return d},toWireType:function(c,d){return U(d)},argPackAdvance:8,readValueFromPointer:Fb,ka:null})},p:function(b,a,c,d){function e(){}c=Ib(c);a=V(a);e.values={};Y(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,m){return m.value},argPackAdvance:8,readValueFromPointer:cc(a,c,d),ka:null});Nb(a,e)},d:function(b,a,c){var d=ob(b,\"enum\");a=V(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},\nconstructor:{value:$a(`${d.name}_${a}`,function(){})}});b.values[c]=d;b[a]=d},y:function(b,a,c){c=Ib(c);a=V(a);Y(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:dc(a,c),ka:null})},m:function(b,a,c,d,e,f){var m=$b(a,c);b=V(b);e=Z(d,e);Nb(b,function(){Yb(`Cannot call ${b} due to unbound types`,m)},a-1);X([],m,function(l){Vb(b,Zb(b,[l[0],null].concat(l.slice(1)),null,e,f),a-1);return[]})},l:function(b,a,c,d,e){a=V(a);-1===e&&(e=4294967295);\ne=Ib(c);var f=l=>l;if(0===d){var m=32-8*c;f=l=>l<<m>>>m}c=a.includes(\"unsigned\")?function(l,p){return p>>>0}:function(l,p){return p};Y(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:ec(a,e,0!==d),ka:null})},g:function(b,a,c){function d(f){f>>=2;var m=O;return new e(m.buffer,m[f+1],m[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][a];c=V(c);Y(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{Jb:!0})},\nz:function(b,a){a=V(a);var c=\"std::string\"===a;Y(b,{name:a,fromWireType:function(d){var e=O[d>>2],f=d+4;if(c)for(var m=f,l=0;l<=e;++l){var p=f+l;if(l==e||0==L[p]){m=m?ic(L,m,p-m):\"\";if(void 0===k)var k=m;else k+=String.fromCharCode(0),k+=m;m=p+1}}else{k=Array(e);for(l=0;l<e;++l)k[l]=String.fromCharCode(L[f+l]);k=k.join(\"\")}nb(d);return k},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f=\"string\"==typeof e;f||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof\nInt8Array||R(\"Cannot pass non-string to std::string\");var m=c&&f?gc(e):e.length;var l=Ic(4+m+1),p=l+4;O[l>>2]=m;if(c&&f)fc(e,L,p,m+1);else if(f)for(f=0;f<m;++f){var k=e.charCodeAt(f);255<k&&(nb(p),R(\"String has UTF-16 code units that do not fit in 8 bits\"));L[p+f]=k}else for(f=0;f<m;++f)L[p+f]=e[f];null!==d&&d.push(nb,l);return l},argPackAdvance:8,readValueFromPointer:Fb,ka:function(d){nb(d)}})},u:function(b,a,c){c=V(c);if(2===a){var d=lc;var e=mc;var f=nc;var m=()=>Ea;var l=1}else 4===a&&(d=oc,e=\npc,f=qc,m=()=>O,l=2);Y(b,{name:c,fromWireType:function(p){for(var k=O[p>>2],r=m(),u,t=p+4,g=0;g<=k;++g){var n=p+4+g*a;if(g==k||0==r[n>>l])t=d(t,n-t),void 0===u?u=t:(u+=String.fromCharCode(0),u+=t),t=n+a}nb(p);return u},toWireType:function(p,k){\"string\"!=typeof k&&R(`Cannot pass non-string to C++ string type ${c}`);var r=f(k),u=Ic(4+r+a);O[u>>2]=r>>l;e(k,u+4,r+a);null!==p&&p.push(nb,u);return u},argPackAdvance:8,readValueFromPointer:Fb,ka:function(p){nb(p)}})},Q:function(b,a,c,d,e,f){Db[b]={name:V(a),\nOa:Z(c,d),ra:Z(e,f),ab:[]}},P:function(b,a,c,d,e,f,m,l,p,k){Db[b].ab.push({Cb:V(a),Ib:c,Gb:Z(d,e),Hb:f,Tb:m,Sb:Z(l,p),Ub:k})},L:function(b,a){a=V(a);Y(b,{Lb:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},v:function(b,a,c){b=S(b);a=ob(a,\"emval::as\");var d=[],e=U(d);O[c>>2]=e;return a.toWireType(d,b)},w:function(b,a,c,d,e){b=tc[b];a=S(a);c=sc(c);var f=[];O[d>>2]=U(f);return b(a,c,f,e)},i:function(b,a,c,d){b=tc[b];a=S(a);c=sc(c);b(a,c,null,d)},c:bc,h:function(b,a){var c=\nvc(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(m){return m.name}).join(\"_\")+\"$\";var e=wc[a];if(void 0!==e)return e;var f=Array(b-1);e=uc((m,l,p,k)=>{for(var r=0,u=0;u<b-1;++u)f[u]=c[u+1].readValueFromPointer(k+r),r+=c[u+1].argPackAdvance;m=m[l].apply(m,f);for(u=0;u<b-1;++u)c[u+1].xb&&c[u+1].xb(f[u]);if(!d.Lb)return d.toWireType(p,m)});return wc[a]=e},t:function(b){b=sc(b);return U(h[b])},M:function(b,a){b=S(b);a=S(a);return U(b[a])},n:function(b){4<b&&(P.get(b).ib+=1)},o:function(b){return U(sc(b))},\nA:function(){return U({})},q:function(b){var a=S(b);Eb(a);bc(b)},k:function(b,a,c){b=S(b);a=S(a);c=S(c);b[a]=c},r:function(b,a){b=ob(b,\"_emval_take_value\");b=b.readValueFromPointer(a);return U(b)},b:()=>{za(\"\")},E:b=>{var a=L.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);a:{e=e.min.call(e,2147483648,d+(65536-d%65536)%65536)-Aa.buffer.byteLength+65535>>>16;try{Aa.grow(e);Ha();var f=1;break a}catch(m){}f=void 0}if(f)return!0}return!1},\nF:(b,a)=>{var c=0;zc().forEach(function(d,e){var f=a+c;e=O[b+4*e>>2]=f;for(f=0;f<d.length;++f)Ca[e++>>0]=d.charCodeAt(f);Ca[e>>0]=0;c+=d.length+1});return 0},G:(b,a)=>{var c=zc();O[b>>2]=c.length;var d=0;c.forEach(function(e){d+=e.length+1});O[a>>2]=d;return 0},H:()=>52,B:function(){return 70},I:(b,a,c,d)=>{for(var e=0,f=0;f<c;f++){var m=O[a>>2],l=O[a+4>>2];a+=8;for(var p=0;p<l;p++){var k=L[m+p],r=Ac[b];0===k||10===k?((1===b?wa:xa)(ic(r,0)),r.length=0):r.push(k)}e+=l}O[d>>2]=e;return 0},D:(b,a,c,\nd)=>Fc(b,a,c,d)};(function(){function b(c){I=c=c.exports;Aa=I.R;Ha();Ia=I.X;Ka.unshift(I.S);Na--;h.monitorRunDependencies&&h.monitorRunDependencies(Na);if(0==Na&&(null!==Oa&&(clearInterval(Oa),Oa=null),Pa)){var d=Pa;Pa=null;d()}return c}var a={a:Jc};Na++;h.monitorRunDependencies&&h.monitorRunDependencies(Na);if(h.instantiateWasm)try{return h.instantiateWasm(a,b)}catch(c){xa(\"Module.instantiateWasm callback failed with error: \"+c),ca(c)}Wa(a,function(c){b(c.instance)}).catch(ca);return{}})();\nvar nb=b=>(nb=I.T)(b),Ic=b=>(Ic=I.U)(b),mb=b=>(mb=I.V)(b);h.__embind_initialize_bindings=()=>(h.__embind_initialize_bindings=I.W)();h.dynCall_jiji=(b,a,c,d,e)=>(h.dynCall_jiji=I.Y)(b,a,c,d,e);h.dynCall_viijii=(b,a,c,d,e,f,m)=>(h.dynCall_viijii=I.Z)(b,a,c,d,e,f,m);h.dynCall_iiiiij=(b,a,c,d,e,f,m)=>(h.dynCall_iiiiij=I._)(b,a,c,d,e,f,m);h.dynCall_iiiiijj=(b,a,c,d,e,f,m,l,p)=>(h.dynCall_iiiiijj=I.$)(b,a,c,d,e,f,m,l,p);\nh.dynCall_iiiiiijj=(b,a,c,d,e,f,m,l,p,k)=>(h.dynCall_iiiiiijj=I.aa)(b,a,c,d,e,f,m,l,p,k);var Kc;Pa=function Lc(){Kc||Mc();Kc||(Pa=Lc)};\nfunction Mc(){function b(){if(!Kc&&(Kc=!0,h.calledRun=!0,!Ba)){Xa(Ka);ba(h);if(h.onRuntimeInitialized)h.onRuntimeInitialized();if(h.postRun)for(\"function\"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;){var a=h.postRun.shift();La.unshift(a)}Xa(La)}}if(!(0<Na)){if(h.preRun)for(\"function\"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)Ma();Xa(Ja);0<Na||(h.setStatus?(h.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){h.setStatus(\"\")},1);b()},1)):b())}}\nif(h.preInit)for(\"function\"==typeof h.preInit&&(h.preInit=[h.preInit]);0<h.preInit.length;)h.preInit.pop()();Mc();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default Rive;","export { registerTouchInteractions } from \"./registerTouchInteractions\";\nexport { BLANK_URL, sanitizeUrl } from './sanitizeUrl';\n","import * as rc from \"../rive_advanced.mjs\";\n\nexport interface TouchInteractionsParams {\n  canvas: HTMLCanvasElement | OffscreenCanvas;\n  artboard: rc.Artboard;\n  stateMachines: rc.StateMachineInstance[];\n  renderer: rc.Renderer;\n  rive: rc.RiveCanvas;\n  fit: rc.Fit;\n  alignment: rc.Alignment;\n}\n\ninterface ClientCoordinates {\n  clientX: number;\n  clientY: number;\n}\n\n/**\n * Returns the clientX and clientY properties from touch or mouse events. Also\n * calls preventDefault() on the event if it is a touchstart or touchmove to prevent\n * scrolling the page on mobile devices\n * @param event - Either a TouchEvent or a MouseEvent\n * @returns - Coordinates of the clientX and clientY properties from the touch/mouse event\n */\nconst getClientCoordinates = (\n  event: MouseEvent | TouchEvent\n): ClientCoordinates => {\n  if (\n    [\"touchstart\", \"touchmove\"].indexOf(event.type) > -1 &&\n    (event as TouchEvent).touches?.length\n  ) {\n    event.preventDefault();\n    return {\n      clientX: (event as TouchEvent).touches[0].clientX,\n      clientY: (event as TouchEvent).touches[0].clientY,\n    };\n  } else if (\n    event.type === \"touchend\" &&\n    (event as TouchEvent).changedTouches?.length\n  ) {\n    return {\n      clientX: (event as TouchEvent).changedTouches[0].clientX,\n      clientY: (event as TouchEvent).changedTouches[0].clientY,\n    };\n  } else {\n    return {\n      clientX: (event as MouseEvent).clientX,\n      clientY: (event as MouseEvent).clientY,\n    };\n  }\n};\n\n/**\n * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n * the state machine pointer move/up/down functions based on cursor interaction\n */\nexport const registerTouchInteractions = ({\n  canvas,\n  artboard,\n  stateMachines = [],\n  renderer,\n  rive,\n  fit,\n  alignment,\n}: TouchInteractionsParams) => {\n  if (\n    !canvas ||\n    !stateMachines.length ||\n    !renderer ||\n    !rive ||\n    !artboard ||\n    typeof window === \"undefined\"\n  ) {\n    return null;\n  }\n\n  const processEventCallback = (event: MouseEvent | TouchEvent) => {\n    const boundingRect = (\n      event.currentTarget as HTMLCanvasElement\n    ).getBoundingClientRect();\n\n    const { clientX, clientY } = getClientCoordinates(event);\n    if (!clientX && !clientY) {\n      return;\n    }\n    const canvasX = clientX - boundingRect.left;\n    const canvasY = clientY - boundingRect.top;\n    const forwardMatrix = rive.computeAlignment(\n      fit,\n      alignment,\n      {\n        minX: 0,\n        minY: 0,\n        maxX: boundingRect.width,\n        maxY: boundingRect.height,\n      },\n      artboard.bounds\n    );\n    const invertedMatrix = new rive.Mat2D();\n    forwardMatrix.invert(invertedMatrix);\n    const canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n    const transformedVector = rive.mapXY(\n      invertedMatrix,\n      canvasCoordinatesVector\n    );\n    const transformedX = transformedVector.x();\n    const transformedY = transformedVector.y();\n\n    transformedVector.delete();\n    invertedMatrix.delete();\n    canvasCoordinatesVector.delete();\n    forwardMatrix.delete();\n\n    switch (event.type) {\n      // Pointer moving/hovering on the canvas\n      case \"touchmove\":\n      case \"mouseover\":\n      case \"mouseout\":\n      case \"mousemove\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerMove(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click initiated but not released yet on the canvas\n      case \"touchstart\":\n      case \"mousedown\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerDown(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click released on the canvas\n      case \"touchend\":\n      case \"mouseup\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerUp(transformedX, transformedY);\n        }\n        break;\n      }\n      default:\n    }\n  };\n  const callback = processEventCallback.bind(this);\n  canvas.addEventListener(\"mouseover\", callback);\n  canvas.addEventListener(\"mouseout\", callback);\n  canvas.addEventListener(\"mousemove\", callback);\n  canvas.addEventListener(\"mousedown\", callback);\n  canvas.addEventListener(\"mouseup\", callback);\n  canvas.addEventListener(\"touchmove\", callback);\n  canvas.addEventListener(\"touchstart\", callback);\n  canvas.addEventListener(\"touchend\", callback);\n  return () => {\n    canvas.removeEventListener(\"mouseover\", callback);\n    canvas.removeEventListener(\"mouseout\", callback);\n    canvas.removeEventListener(\"mousemove\", callback);\n    canvas.removeEventListener(\"mousedown\", callback);\n    canvas.removeEventListener(\"mouseup\", callback);\n    canvas.removeEventListener(\"touchmove\", callback);\n    canvas.removeEventListener(\"touchstart\", callback);\n    canvas.removeEventListener(\"touchend\", callback);\n  };\n};\n","// Reference: https://github.com/braintree/sanitize-url/tree/main\nconst invalidProtocolRegex = /^([^\\w]*)(javascript|data|vbscript)/im;\nconst htmlEntitiesRegex = /&#(\\w+)(^\\w|;)?/g;\nconst htmlCtrlEntityRegex = /&(newline|tab);/gi;\nconst ctrlCharactersRegex =\n  /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\nconst urlSchemeRegex = /^.+(:|&colon;)/gim;\nconst relativeFirstCharacters = [\".\", \"/\"];\nexport const BLANK_URL = \"about:blank\";\n\nfunction isRelativeUrlWithoutProtocol(url: string): boolean {\n  return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n\n// adapted from https://stackoverflow.com/a/29824550/2601552\nfunction decodeHtmlCharacters(str: string) {\n  const removedNullByte = str.replace(ctrlCharactersRegex, \"\");\n  return removedNullByte.replace(htmlEntitiesRegex, (match, dec) => {\n    return String.fromCharCode(dec);\n  });\n}\n\nexport function sanitizeUrl(url?: string): string {\n  if (!url) {\n    return BLANK_URL;\n  }\n\n  const sanitizedUrl = decodeHtmlCharacters(url)\n    .replace(htmlCtrlEntityRegex, \"\")\n    .replace(ctrlCharactersRegex, \"\")\n    .trim();\n\n  if (!sanitizedUrl) {\n    return BLANK_URL;\n  }\n\n  if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n\n  const urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n\n  if (!urlSchemeParseResults) {\n    return sanitizedUrl;\n  }\n\n  const urlScheme = urlSchemeParseResults[0];\n\n  if (invalidProtocolRegex.test(urlScheme)) {\n    return BLANK_URL;\n  }\n\n  return sanitizedUrl;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as rc from \"./rive_advanced.mjs\";\nimport * as packageData from \"package.json\";\nimport { registerTouchInteractions, sanitizeUrl, BLANK_URL } from \"./utils\";\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\nexport type AssetLoadCallback = (\n  asset: rc.FileAsset,\n  bytes: Uint8Array,\n) => Boolean;\n\n/**\n * Type for artboard bounds\n */\nexport type Bounds = rc.AABB;\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = \"cover\",\n  Contain = \"contain\",\n  Fill = \"fill\",\n  FitWidth = \"fitWidth\",\n  FitHeight = \"fitHeight\",\n  None = \"none\",\n  ScaleDown = \"scaleDown\",\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = \"center\",\n  TopLeft = \"topLeft\",\n  TopCenter = \"topCenter\",\n  TopRight = \"topRight\",\n  CenterLeft = \"centerLeft\",\n  CenterRight = \"centerRight\",\n  BottomLeft = \"bottomLeft\",\n  BottomCenter = \"bottomCenter\",\n  BottomRight = \"bottomRight\",\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit;\n  alignment?: Alignment;\n  minX?: number;\n  minY?: number;\n  maxX?: number;\n  maxY?: number;\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    console.warn(\n      \"This function is deprecated: please use `new Layout({})` instead\",\n    );\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY,\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft)\n      alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter)\n      alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight)\n      alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft)\n      alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight)\n      alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft)\n      alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter)\n      alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight)\n      alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;\n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL = `https://unpkg.com/${packageData.name}@${packageData.version}/rive.wasm`;\n\n  // Class is never instantiated\n  private constructor() {}\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: () => RuntimeLoader.wasmURL,\n    })\n      .then((rive: rc.RiveCanvas) => {\n        RuntimeLoader.runtime = rive;\n        // Fire all the callbacks\n        while (RuntimeLoader.callBackQueue.length > 0) {\n          RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n        }\n      })\n      .catch(() => {\n        // In case unpkg fails or goes down, we should try to load from jsdelivr\n        const backupJsdelivrUrl = `https://cdn.jsdelivr.net/npm/${packageData.name}@${packageData.version}/rive.wasm`;\n        if (RuntimeLoader.wasmURL.toLowerCase() !== backupJsdelivrUrl) {\n          console.warn(\n            `Failed to load WASM from ${RuntimeLoader.wasmURL}, trying jsdelivr as a backup`,\n          );\n          RuntimeLoader.setWasmUrl(backupJsdelivrUrl);\n          RuntimeLoader.loadRuntime();\n        } else {\n          console.error(\n            \"Could not load Rive WASM file from unpkg or jsdelivr, network connection may be down, or \\\n        you may need to call set a new WASM source via RuntimeLoader.setWasmUrl() and call \\\n        RuntimeLoader.loadRuntime() again\",\n          );\n        }\n      });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive)),\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(\n    private animation: rc.LinearAnimation,\n    private artboard: rc.Artboard,\n    runtime: rc.RiveCanvas,\n    public playing: boolean,\n  ) {\n    this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n    return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n    this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  /**\n   * Apply interpolated keyframe values to the artboard. This should be called after calling\n   * .advance() on an animation instance so that new values are applied to properties.\n   *\n   * Note: This does not advance the artboard, which updates all objects on the artboard\n   * @param mix - Mix value for the animation from 0 to 1\n   */\n  public apply(mix: number) {\n    this.instance.apply(mix);\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n  constructor(\n    public readonly type: StateMachineInputType,\n    private runtimeInput: rc.SMIInput,\n  ) {}\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nexport enum RiveEventType {\n  General = 128,\n  OpenUrl = 131,\n}\n\nclass StateMachine {\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(\n    private stateMachine: rc.StateMachine,\n    runtime: rc.RiveCanvas,\n    public playing: boolean,\n    private artboard: rc.Artboard,\n  ) {\n    this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Advances the state machine instance by a given time.\n   * @param time - the time to advance the animation by in seconds\n   */\n  public advance(time: number) {\n    this.instance.advance(time);\n  }\n\n  /**\n   * Returns the number of events reported from the last advance call\n   * @returns Number of events reported\n   */\n  public reportedEventCount(): number {\n    return this.instance.reportedEventCount();\n  }\n\n  /**\n   * Returns a RiveEvent object emitted from the last advance call at the given index\n   * of a list of potentially multiple events. If an event at the index is not found,\n   * undefined is returned.\n   * @param i index of the event reported in a list of potentially multiple events\n   * @returns RiveEvent or extended RiveEvent object returned, or undefined\n   */\n  reportedEventAt(i: number): rc.OpenUrlEvent | rc.RiveEvent | undefined {\n    return this.instance.reportedEventAt(i);\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input\n   */\n  private mapRuntimeInput(\n    input: rc.SMIInput,\n    runtime: rc.RiveCanvas,\n  ): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(\n        StateMachineInputType.Boolean,\n        input.asBool(),\n      );\n    } else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(\n        StateMachineInputType.Number,\n        input.asNumber(),\n      );\n    } else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(\n        StateMachineInputType.Trigger,\n        input.asTrigger(),\n      );\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = [],\n  ) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(\n    animatables: string | string[],\n    playing: boolean,\n    fireEvent = true,\n  ): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach((a) => (a.playing = playing));\n      this.stateMachines.forEach((m) => (m.playing = playing));\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map((a) => a.name);\n      const instancedMachineNames = this.stateMachines.map((m) => m.name);\n      for (let i = 0; i < animatables.length; i++) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n        } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if (anim) {\n            const newAnimation = new Animation(\n              anim,\n              this.artboard,\n              this.runtime,\n              playing,\n            );\n            // Display the first frame of the specified animation\n            newAnimation.advance(0);\n            newAnimation.apply(1.0);\n            this.animations.push(newAnimation);\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              const newStateMachine = new StateMachine(\n                sm,\n                this.runtime,\n                playing,\n                this.artboard,\n              );\n              this.stateMachines.push(newStateMachine);\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Adds linear animations by their names.\n   * @param animatables the name(s) of animations to add\n   * @param playing whether animations should play on instantiation \n   */\n  public initLinearAnimations(\n    animatables: string[],\n    playing: boolean,\n  ) {\n    // Play/pause already instanced items, or create new instances\n    // This validation is kept to maintain compatibility with current behavior.\n    // But given that it this is called during artboard initialization\n    // it should probably be safe to remove.\n    const instancedAnimationNames = this.animations.map((a) => a.name);\n    for (let i = 0; i < animatables.length; i++) {\n      const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n      if (aIndex >= 0) {\n        this.animations[aIndex].playing = playing;\n      } else {\n        // Try to create a new animation instance\n        const anim = this.artboard.animationByName(animatables[i]);\n        if (anim) {\n          const newAnimation = new Animation(\n            anim,\n            this.artboard,\n            this.runtime,\n            playing\n          );\n          // Display the first frame of the specified animation\n          newAnimation.advance(0);\n          newAnimation.apply(1.0);\n          this.animations.push(newAnimation);\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds state machines by their names.\n   * @param animatables the name(s) of state machines to add\n   * @param playing whether state machines should play on instantiation \n   */\n  public initStateMachines(\n    animatables: string[],\n    playing: boolean,\n  ) {\n    // Play/pause already instanced items, or create new instances\n    // This validation is kept to maintain compatibility with current behavior.\n    // But given that it this is called during artboard initialization\n    // it should probably be safe to remove.\n    const instancedStateMachineNames = this.stateMachines.map((a) => a.name);\n    for (let i = 0; i < animatables.length; i++) {\n      const aIndex = instancedStateMachineNames.indexOf(animatables[i]);\n      if (aIndex >= 0) {\n        this.stateMachines[aIndex].playing = playing;\n      } else {\n        // Try to create a new state machine instance\n        const sm = this.artboard.stateMachineByName(animatables[i]);\n        if (sm) {\n          const newStateMachine = new StateMachine(\n            sm,\n            this.runtime,\n            playing,\n            this.artboard\n          );\n          this.stateMachines.push(newStateMachine);\n        } else {\n          // In order to maintain compatibility with current behavior, if a state machine is not found\n          // we look for an animation with the same name\n          this.initLinearAnimations([animatables[i]], playing);\n        }\n      }\n    }\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n  /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n  public pause(animatables: string[]): string[] {\n    return this.add(animatables, false);\n  }\n\n  /**\n   * Set time of named animations\n   * @param animations names of the animations to scrub\n   * @param value time scrub value, a floating point number to which the playhead is jumped\n   * @returns a list of names of the animations that were scrubbed\n   */\n  public scrub(animatables: string[], value: number): string[] {\n    const forScrubbing = this.animations.filter((a) =>\n      animatables.includes(a.name),\n    );\n    forScrubbing.forEach((a) => (a.scrubTo = value));\n    return forScrubbing.map((a) => a.name);\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations\n      .filter((a) => a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n  public get paused(): string[] {\n    return this.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => !m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations\n        .map((a) => a.name)\n        .concat(this.stateMachines.map((m) => m.name));\n      // Clean up before emptying the arrays\n      this.animations.forEach((a) => a.cleanup());\n      this.stateMachines.forEach((m) => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter((a) =>\n        animatables.includes(a.name),\n      );\n\n      animationsToRemove.forEach((a) => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter((m) =>\n        animatables.includes(m.name),\n      );\n      machinesToRemove.forEach((m) => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove\n        .map((a) => a.name)\n        .concat(machinesToRemove.map((m) => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return (\n      this.animations.reduce((acc, curr) => acc || curr.playing, false) ||\n      this.stateMachines.reduce((acc, curr) => acc || curr.playing, false)\n    );\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return (\n      !this.isPlaying &&\n      (this.animations.length > 0 || this.stateMachines.length > 0)\n    );\n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n  public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if (this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add(\n          [(instancedName = this.artboard.animationByIndex(0).name)],\n          playing,\n          fireEvent,\n        );\n      } else if (this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add(\n          [(instancedName = this.artboard.stateMachineByIndex(0).name)],\n          playing,\n          fireEvent,\n        );\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter((a) => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      } else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop },\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong },\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter((sm) => sm.playing)) {\n      statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n\n  public handleAdvancing(time: number) {\n    this.eventManager.fire({\n      type: EventType.Advance,\n      data: time,\n    });\n  }\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load = \"load\",\n  LoadError = \"loaderror\",\n  Play = \"play\",\n  Pause = \"pause\",\n  Stop = \"stop\",\n  Loop = \"loop\",\n  Draw = \"draw\",\n  Advance = \"advance\",\n  StateChange = \"statechange\",\n  RiveEvent = \"riveevent\",\n}\n\nexport type RiveEventPayload = rc.RiveEvent | rc.OpenUrlEvent;\n\n// Event reported by Rive for significant events during animation playback (i.e. play, pause, stop, etc.),\n// as well as for custom Rive events reported from the state machine defined at design-time.\nexport interface Event {\n  type: EventType;\n  data?: string | string[] | LoopEvent | number | RiveEventPayload;\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = \"oneshot\", // has value 0 in runtime\n  Loop = \"loop\", // has value 1 in runtime\n  PingPong = \"pingpong\", // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType;\n  callback: EventCallback;\n}\n\n/**\n * FPS Reporting through callbacks sent to the WASM runtime\n */\nexport type FPSCallback = (fps: number) => void;\n\n// Manages Rive events and listeners\nclass EventManager {\n  constructor(private listeners: EventListener[] = []) {}\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter((e) => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach((listener) => listener.callback(event));\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action?: VoidCallback;\n  event?: Event;\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) {}\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      if (task?.action) {\n        task.action();\n      }\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas; // canvas is required\n  src?: string; // one of src or buffer is required\n  buffer?: ArrayBuffer; // one of src or buffer is required\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  layout?: Layout;\n  autoplay?: boolean;\n  useOffscreenRenderer?: boolean;\n  /**\n   * Allow the runtime to automatically load assets hosted in Rive's CDN.\n   * enabled by default.\n   */\n  enableRiveAssetCDN?: boolean;\n  /**\n   * Turn off Rive Listeners. This means state machines that have Listeners\n   * will not be invoked, and also, no event listeners pertaining to Listeners\n   * will be attached to the <canvas> element\n   */\n  shouldDisableRiveListeners?: boolean;\n  /**\n   * Enable Rive Events to be handled by the runtime. This means any special Rive Event may have\n   * a side effect that takes place implicitly.\n   *\n   * For example, if during the render loop an OpenUrlEvent is detected, the\n   * browser may try to open the specified URL in the payload.\n   *\n   * This flag is false by default to prevent any unwanted behaviors from taking place.\n   * This means any special Rive Event will have to be handled manually by subscribing to\n   * EventType.RiveEvent\n   */\n  automaticallyHandleEvents?: boolean;\n  onLoad?: EventCallback;\n  onLoadError?: EventCallback;\n  onPlay?: EventCallback;\n  onPause?: EventCallback;\n  onStop?: EventCallback;\n  onLoop?: EventCallback;\n  onStateChange?: EventCallback;\n  onAdvance?: EventCallback;\n  assetLoader?: AssetLoadCallback;\n  /**\n   * @deprecated Use `onLoad()` instead\n   */\n  onload?: EventCallback;\n  /**\n   * @deprecated Use `onLoadError()` instead\n   */\n  onloaderror?: EventCallback;\n  /**\n   * @deprecated Use `onPoad()` instead\n   */\n  onplay?: EventCallback;\n  /**\n   * @deprecated Use `onPause()` instead\n   */\n  onpause?: EventCallback;\n  /**\n   * @deprecated Use `onStop()` instead\n   */\n  onstop?: EventCallback;\n  /**\n   * @deprecated Use `onLoop()` instead\n   */\n  onloop?: EventCallback;\n  /**\n   * @deprecated Use `onStateChange()` instead\n   */\n  onstatechange?: EventCallback;\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string;\n  buffer?: ArrayBuffer;\n  autoplay?: boolean;\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  useOffscreenRenderer?: boolean;\n  shouldDisableRiveListeners?: boolean;\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  autoplay?: boolean;\n}\n\nexport class Rive {\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // The runtime renderer\n  private renderer: rc.WrappedRenderer;\n\n  // Tracks if a Rive file is loaded\n  private loaded = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // place to clear up event listeners\n  private eventCleanup: VoidCallback | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // AssetLoadCallback: allows customizing asset loading for images and fonts.\n  private assetLoader: AssetLoadCallback;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    \"Rive source file or data buffer required\";\n\n  private shouldDisableRiveListeners = false;\n\n  private automaticallyHandleEvents = false;\n\n  // Allow the runtime to automatically load assets hosted in Rive's runtime.\n  private enableRiveAssetCDN = true;\n\n  // Durations to generate a frame for the last second. Used for performance profiling.\n  public durations: number[] = [];\n  public frameTimes: number[] = [];\n  public frameCount = 0;\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n    this.shouldDisableRiveListeners = !!params.shouldDisableRiveListeners;\n    this.automaticallyHandleEvents = !!params.automaticallyHandleEvents;\n    this.enableRiveAssetCDN =\n      params.enableRiveAssetCDN === undefined\n        ? true\n        : params.enableRiveAssetCDN;\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onLoad) this.on(EventType.Load, params.onLoad);\n    if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n    if (params.onPlay) this.on(EventType.Play, params.onPlay);\n    if (params.onPause) this.on(EventType.Pause, params.onPause);\n    if (params.onStop) this.on(EventType.Stop, params.onStop);\n    if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n    if (params.onStateChange)\n      this.on(EventType.StateChange, params.onStateChange);\n    if (params.onAdvance) this.on(EventType.Advance, params.onAdvance);\n\n    /**\n     * @deprecated Use camelCase'd versions instead.\n     */\n    if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n    if (params.onloaderror && !params.onLoadError)\n      this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n    if (params.onpause && !params.onPause)\n      this.on(EventType.Pause, params.onpause);\n    if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange && !params.onStateChange)\n      this.on(EventType.StateChange, params.onstatechange);\n\n    /**\n     * Asset loading\n     */\n    if (params.assetLoader) this.assetLoader = params.assetLoader;\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard,\n      useOffscreenRenderer: params.useOffscreenRenderer,\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn(\n      \"This function is deprecated: please use `new Rive({})` instead\",\n    );\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({\n    src,\n    buffer,\n    animations,\n    stateMachines,\n    artboard,\n    autoplay = false,\n    useOffscreenRenderer = false,\n  }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance()\n      .then((runtime) => {\n        this.runtime = runtime;\n\n        // Get the canvas where you want to render the animation and create a renderer\n        this.renderer = this.runtime.makeRenderer(\n          this.canvas,\n          useOffscreenRenderer,\n        );\n\n        // Initial size adjustment based on devicePixelRatio if no width/height are\n        // specified explicitly\n        if (!(this.canvas.width || this.canvas.height)) {\n          this.resizeDrawingSurfaceToCanvas();\n        }\n\n        // Load Rive data from a source uri or a data buffer\n        this.initData(\n          artboard,\n          startingAnimationNames,\n          startingStateMachineNames,\n          autoplay,\n        )\n          .then(() => this.setupRiveListeners())\n          .catch((e) => {\n            console.error(e);\n          });\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  private setupRiveListeners(): void {\n    if (!this.shouldDisableRiveListeners) {\n      const activeStateMachines = (this.animator.stateMachines || [])\n        .filter((sm) => sm.playing && this.runtime.hasListeners(sm.instance))\n        .map((sm) => sm.instance);\n      this.eventCleanup = registerTouchInteractions({\n        canvas: this.canvas,\n        artboard: this.artboard,\n        stateMachines: activeStateMachines,\n        renderer: this.renderer,\n        rive: this.runtime,\n        fit: this._layout.runtimeFit(this.runtime),\n        alignment: this._layout.runtimeAlignment(this.runtime),\n      });\n    }\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean,\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    let loader;\n    if (this.assetLoader) {\n      loader = new this.runtime.CustomFileAssetLoader({\n        loadContents: this.assetLoader,\n      });\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(\n      new Uint8Array(this.buffer),\n      loader,\n      this.enableRiveAssetCDN,\n    );\n\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(\n        artboardName,\n        animationNames,\n        stateMachineNames,\n        autoplay,\n      );\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? \"buffer\",\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = \"Problem loading file; may be corrupt!\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean,\n  ): void {\n    // Fetch the artboard\n    const rootArtboard = artboardName\n      ? this.file.artboardByName(artboardName)\n      : this.file.defaultArtboard();\n\n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = \"Invalid artboard name or no default artboard\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    this.artboard = rootArtboard;\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = \"Artboard has no animations\";\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(\n      this.runtime,\n      this.artboard,\n      this.eventManager,\n    );\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.initLinearAnimations(animationNames, autoplay);\n      this.animator.initStateMachines(stateMachineNames, autoplay);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      },\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed.\n   * Used for debugging purposes\n   */\n  private renderSecondTimer = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    const before = performance.now();\n\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += time - this.lastRenderTime;\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // - Advance non-paused animations by the elapsed number of seconds\n    // - Advance any animations that require scrubbing\n    // - Advance to the first frame even when autoplay is false\n    const activeAnimations = this.animator.animations\n      .filter((a) => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first) => (first.needsScrub ? -1 : 1));\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.apply(1.0);\n    }\n\n    // - Advance non-paused state machines by the elapsed number of seconds\n    // - Advance to the first frame even when autoplay is false\n    const activeStateMachines = this.animator.stateMachines.filter(\n      (a) => a.playing,\n    );\n    for (const stateMachine of activeStateMachines) {\n      // Check for events before the current frame's state machine advance\n      const numEventsReported = stateMachine.reportedEventCount();\n      if (numEventsReported) {\n        for (let i = 0; i < numEventsReported; i++) {\n          const event = stateMachine.reportedEventAt(i);\n\n          if (event) {\n            if (event.type === RiveEventType.OpenUrl) {\n              this.eventManager.fire({\n                type: EventType.RiveEvent,\n                data: event as rc.OpenUrlEvent,\n              });\n              // Handle the event side effect if explicitly enabled\n              if (this.automaticallyHandleEvents) {\n                const newAnchorTag = document.createElement(\"a\");\n                const { url, target } = event as rc.OpenUrlEvent;\n\n                const sanitizedUrl = sanitizeUrl(url);\n                url && newAnchorTag.setAttribute(\"href\", sanitizedUrl);\n                target && newAnchorTag.setAttribute(\"target\", target);\n                if (sanitizedUrl && sanitizedUrl !== BLANK_URL) {\n                  newAnchorTag.click();\n                }\n              }\n            } else {\n              this.eventManager.fire({\n                type: EventType.RiveEvent,\n                data: event as rc.RiveEvent,\n              });\n            }\n          }\n        }\n      }\n      stateMachine.advance(elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    const { renderer } = this;\n    // Canvas must be wiped to prevent artifacts\n    renderer.clear();\n    renderer.save();\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    this.artboard.draw(renderer);\n\n    renderer.restore();\n    renderer.flush();\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Report advanced time\n    this.animator.handleAdvancing(elapsedTime);\n\n    // Add duration to create frame to durations array\n    this.frameCount++;\n    const after = performance.now();\n    this.frameTimes.push(after);\n    this.durations.push(after - before);\n    while (this.frameTimes[0] <= after - 1000) {\n      this.frameTimes.shift();\n      this.durations.shift();\n    }\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    const { renderer, runtime, _layout, artboard } = this;\n    // Align things up safe in the knowledge we can restore if changed\n    renderer.align(\n      _layout.runtimeFit(runtime),\n      _layout.runtimeAlignment(runtime),\n      {\n        minX: _layout.minX,\n        minY: _layout.minY,\n        maxX: _layout.maxX,\n        maxY: _layout.maxY,\n      },\n      artboard.bounds,\n    );\n  }\n\n  public get fps() {\n    return this.durations.length;\n  }\n\n  public get frameTime() {\n    if (this.durations.length === 0) {\n      return 0;\n    }\n    return (\n      this.durations.reduce((a, b) => a + b, 0) / this.durations.length\n    ).toFixed(4);\n  }\n\n  /**\n   * Cleans up all Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances,\n   * renderer instance, file and runtime.\n   *\n   * Once this is called, you will need to initialise a new instance of the\n   * Rive class\n   */\n  public cleanup() {\n    // Stop the renderer if it hasn't already been stopped.\n    this.stopRendering();\n    // Clean up any artboard, animation or state machine instances.\n    this.cleanupInstances();\n    // Delete the renderer\n    this.renderer?.delete();\n    this.renderer = null;\n    // Delete the rive file\n    this.file?.delete();\n    this.file = null;\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanupInstances() {\n    if (this.eventCleanup !== null) {\n      this.eventCleanup();\n    }\n    // Delete all animation and state machine instances\n    this.stop();\n    if (this.artboard) {\n      this.artboard.delete();\n      this.artboard = null;\n    }\n  }\n\n  /**\n   * Tries to query the setup Artboard for a text run node with the given name.\n   *\n   * @param textRunName - Name of the text run node associated with a text object\n   * @returns - TextValueRun node or undefined if the text run cannot be queried\n   */\n  private retrieveTextRun(textRunName: string): rc.TextValueRun | undefined {\n    if (!textRunName) {\n      console.warn(\"No text run name provided\");\n      return;\n    }\n    if (!this.artboard) {\n      console.warn(\"Tried to access text run, but the Artboard is null\");\n      return;\n    }\n    const textRun: rc.TextValueRun = this.artboard.textRun(textRunName);\n    if (!textRun) {\n      console.warn(\n        `Could not access a text run with name '${textRunName}' in the '${this.artboard?.name}' Artboard. Note that you must rename a text run node in the Rive editor to make it queryable at runtime.`,\n      );\n      return;\n    }\n    return textRun;\n  }\n\n  /**\n   * Returns a string from a given text run node name, or undefined if the text run\n   * cannot be queried.\n   *\n   * @param textRunName - Name of the text run node associated with a text object\n   * @returns - String value of the text run node or undefined\n   */\n  public getTextRunValue(textRunName: string): string | undefined {\n    const textRun = this.retrieveTextRun(textRunName);\n    return textRun ? textRun.text : undefined;\n  }\n\n  /**\n   * Sets a text value for a given text run node name if possible\n   *\n   * @param textRunName - Name of the text run node associated with a text object\n   * @param textRunValue - String value to set on the text run node\n   */\n  public setTextRunValue(textRunName: string, textRunValue: string): void {\n    const textRun = this.retrieveTextRun(textRunName);\n    if (textRun) {\n      textRun.text = textRunValue;\n    }\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    if (this.eventCleanup) {\n      this.eventCleanup();\n    }\n    this.setupRiveListeners();\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    if (this.eventCleanup) {\n      this.eventCleanup();\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.scrub(animationNames, value),\n      });\n      return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n    if (this.eventCleanup) {\n      this.eventCleanup();\n    }\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.cleanupInstances();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(\n      artBoardName,\n      animationNames,\n      stateMachineNames,\n      autoplay,\n    );\n    this.taskQueue.process();\n  }\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /**\n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height,\n    });\n  }\n\n  /**\n   * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n   * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n   * and resize the layout to match the new drawing surface afterwards.\n   * Useful function for consumers to include in a window resize listener\n   */\n  public resizeDrawingSurfaceToCanvas() {\n    if (this.canvas instanceof HTMLCanvasElement && !!window) {\n      const { width, height } = this.canvas.getBoundingClientRect();\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = dpr * width;\n      this.canvas.height = dpr * height;\n      this.startRendering();\n      this.resizeToCanvas();\n    }\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard ? this.artboard.name : \"\";\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(\n      (m) => m.name === name,\n    );\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => m.playing)\n      .map((m) => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations.filter((a) => a.playing).map((a) => a.name);\n  }\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => !m.playing)\n      .map((m) => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param type the type of event to unsubscribe from\n   * @param callback the callback to unsubscribe\n   */\n  public off(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @deprecated\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    console.warn(\"This function is deprecated: please use `off()` instead.\");\n    this.off(type, callback);\n  }\n\n  /**\n   * Unsubscribes all Rive listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public removeAllRiveEventListeners(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @deprecated\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    console.warn(\n      \"This function is deprecated: please use `removeAllRiveEventListeners()` instead.\",\n    );\n    this.removeAllRiveEventListeners(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      if (this.runtime.cancelAnimationFrame) {\n        this.runtime.cancelAnimationFrame(this.frameRequestId);\n      } else {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && this.artboard && !this.frameRequestId) {\n      if (this.runtime.requestAnimationFrame) {\n        this.frameRequestId = this.runtime.requestAnimationFrame(\n          this.draw.bind(this),\n        );\n      } else {\n        this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Enables frames-per-second (FPS) reporting for the runtime\n   * If no callback is provided, Rive will append a fixed-position div at the top-right corner of\n   * the page with the FPS reading\n   * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n   */\n  public enableFPSCounter(fpsCallback?: FPSCallback) {\n    this.runtime.enableFPSCounter(fpsCallback);\n  }\n\n  /**\n   * Disables frames-per-second (FPS) reporting for the runtime\n   */\n  public disableFPSCounter() {\n    this.runtime.disableFPSCounter();\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(\n          stateMachine,\n          artboard,\n        );\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({ name: input.name, type: input.type });\n        }\n        artboardContents.stateMachines.push({\n          name: name,\n          inputs: inputContents,\n        });\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n};\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nconst mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === \"string\") {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n};\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n};\n\n// #endregion\n\n// #region asset loaders\n\n/**\n * Decodes bytes into an image.\n * \n * Be sure to call `.dispose()` on the image once it is no longer needed. This \n * allows the engine to clean it up when it is not used by any more animations.\n */\nexport const decodeImage = (bytes: Uint8Array): Promise<rc.Image> => {\n  return new Promise<rc.Image>((resolve) =>\n    RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => {\n      rive.decodeImage(bytes, resolve);\n    }),\n  );\n};\n\n/**\n * Decodes bytes into a font.\n * \n * Be sure to call `.dispose()` on the font once it is no longer needed. This \n * allows the engine to clean it up when it is not used by any more animations.\n */\nexport const decodeFont = (bytes: Uint8Array): Promise<rc.Font> => {\n  return new Promise<rc.Font>((resolve) =>\n    RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => {\n      rive.decodeFont(bytes, resolve);\n    }),\n  );\n};\n\n// #endregion\n"],"names":["$691f11a73ac7a020$exports","Fit","Alignment","StateMachineInputType","RiveEventType","EventType","LoopType","_rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__","package_json__WEBPACK_IMPORTED_MODULE_1__","_utils__WEBPACK_IMPORTED_MODULE_2__","__awaiter","__generator","Layout","RuntimeLoader","Animation","StateMachineInput","StateMachine","Animator","EventManager","TaskQueueManager","Rive","loadRiveFile","mapToStringArray","Testing","decodeImage","decodeFont","__webpack_modules__","__unused_webpack___webpack_module__","__webpack_exports__","__webpack_require__","_scriptDir","r","d","__WEBPACK_DEFAULT_EXPORT__","document","currentScript","src","undefined","moduleArg","da","b","m","l","c","a","Map","forEach","p","k","console","error","fb","e","Db","f","requestAnimationFrame","bind","set","cancelAnimationFrame","delete","size","Bb","body","remove","createElement","style","backgroundColor","position","right","top","color","padding","innerHTML","toFixed","appendChild","performance","now","yb","ea","assert","Infinity","push","has","clearTimeout","get","setTimeout","length","Math","max","keys","h","ready","Promise","ba","ca","ha","split","ka","t","g","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","preferLowPowerToHighPerformance","failIfMajorPerformanceCaveat","enableExtensionsByDefault","explicitSwapControl","renderViaOffscreenBackBuffer","n","getContext","log","w","H","x","A","createShader","shaderSource","compileShader","getShaderInfoLog","attachShader","min","getParameter","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","bindAttribLocation","linkProgram","getProgramInfoLog","trim","getUniformLocation","useProgram","bindBuffer","ARRAY_BUFFER","createBuffer","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","uniform1i","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","Mb","vb","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","generateMipmap","u","Ab","J","canvas","width","height","viewport","disable","SCISSOR_TEST","clearColor","clear","COLOR_BUFFER_BIT","enable","sort","B","fa","jb","bufferData","DYNAMIC_DRAW","bufferSubData","Ra","Q","mb","aa","indices","image","Ma","rb","Pb","scissor","Va","Wa","cb","$b","uniform4f","xa","Ga","Ha","uniform2f","Nb","Ob","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","la","onRuntimeInitialized","q","srcOver","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","drawWidth","drawHeight","reset","v","ja","RenderPaintStyle","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","FillRule","evenOdd","RenderImage","extend","__construct","Aa","Fa","__parent","call","decode","C","Image","URL","createObjectURL","Blob","type","onload","ob","pa","Path2D","rewind","addPath","D","z","E","F","G","T","K","DOMMatrix","fillRule","Ta","moveTo","lineTo","cubicTo","bezierCurveTo","close","closePath","Ua","thickness","sb","join","miter","La","round","bevel","cap","butt","Ka","square","qb","blendMode","nb","clearGradient","za","linearGradient","kb","lb","Za","$a","Pa","radialGradient","Kb","addStop","stop","completeGradient","draw","globalCompositeOperation","createRadialGradient","sqrt","createLinearGradient","W","N","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","Set","CanvasRenderer","oa","Sa","save","slice","restore","splice","transform","rotate","sin","cos","_drawPath","_drawRiveImage","globalAlpha","drawImage","_getMatrix","_drawImageMesh","tb","ua","va","ia","ceil","DynamicRectanizer","addRect","add","ub","Float32Array","Uint16Array","kc","resetTransform","_clipPath","clip","clearRect","flush","translate","makeRenderer","Proxy","apply","indexOf","Error","renderFactory","makeRenderPaint","makeRenderPath","makeRenderImage","total","loaded","load","FallbackFileAssetLoader","addLoader","CDNFileAssetLoader","enableFPSCounter","disableFPSCounter","cleanup","ma","FileAssetLoader","ptrToAsset","ptrToFileAsset","isImage","ptrToImageAsset","isFont","ptrToFontAsset","CustomFileAssetLoader","loadContents","pb","cdnUuid","cdnBaseUrl","Uint8Array","response","XMLHttpRequest","responseType","onreadystatechange","readyState","status","open","send","eb","Kc","sa","ta","na","Object","assign","qa","window","ra","importScripts","y","self","location","href","substr","replace","lastIndexOf","onerror","wa","print","printErr","thisProgram","wasmBinary","ya","noExitRuntime","WebAssembly","I","Ca","L","Da","Ea","M","O","Ba","buffer","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","HEAPU32","Uint32Array","HEAPF32","HEAPF64","Float64Array","Ia","Ja","Na","Oa","onAbort","RuntimeError","Qa","startsWith","locateFile","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","Xa","shift","Ya","charCodeAt","arguments","ab","bb","P","R","S","value","U","ib","name","message","stack","toString","prototype","create","constructor","db","V","gb","pop","hb","count","xb","zb","Cb","FinalizationRegistry","register","unregister","Eb","Fb","fromWireType","Gb","Hb","X","Y","Array","hasOwnProperty","Ib","TypeError","Jb","Lb","ga","ac","Qb","Rb","Sb","Vb","clone","Tb","Ub","toWireType","Wb","includes","concat","Z","Xb","Yb","map","Zb","bc","wb","fc","gc","hc","TextDecoder","ic","subarray","String","fromCharCode","jc","lc","mc","nc","oc","pc","qc","rc","sc","yc","tc","wc","xc","zc","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","Ac","Bc","Cc","Dc","Fc","getFullYear","getMonth","getDate","getDay","Date","getTime","setDate","setMonth","setFullYear","RegExp","substring","floor","abs","BindingError","count_emval_handles","PureVirtualError","Gc","Hc","getInheritedInstanceCount","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","InternalError","isAliasOf","getPrototypeOf","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","pointerType","UnboundTypeError","Jc","defineProperty","implement","notifyOnDestruction","defineProperties","__destruct","read","write","j","Symbol","enumerable","configurable","s","className","values","cc","dc","ec","ArrayBuffer","Uint8ClampedArray","Ic","i","vc","o","byteLength","grow","exports","unshift","monitorRunDependencies","clearInterval","instantiateWasm","instance","instantiateStreaming","Mc","calledRun","postRun","preRun","setStatus","__embind_initialize_bindings","dynCall_jiji","dynCall_viijii","dynCall_iiiiij","dynCall_iiiiijj","$","dynCall_iiiiiijj","Lc","preInit","module1","JSON","parse","__unused_webpack_module","BLANK_URL","_sanitizeUrl__WEBPACK_IMPORTED_MODULE_1__","registerTouchInteractions","_registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__","sanitizeUrl","_this","getClientCoordinates","event","_a","_b","touches","preventDefault","clientX","clientY","changedTouches","artboard","stateMachines","renderer","rive","fit","alignment","callback","processEventCallback","boundingRect","currentTarget","getBoundingClientRect","canvasX","left","canvasY","forwardMatrix","computeAlignment","minX","minY","maxX","maxY","bounds","invertedMatrix","Mat2D","invert","canvasCoordinatesVector","Vec2D","transformedVector","mapXY","transformedX","transformedY","_i","stateMachines_1","stateMachine","pointerMove","stateMachines_2","pointerDown","_c","stateMachines_3","pointerUp","addEventListener","removeEventListener","invalidProtocolRegex","htmlEntitiesRegex","htmlCtrlEntityRegex","ctrlCharactersRegex","urlSchemeRegex","relativeFirstCharacters","url","sanitizedUrl","decodeHtmlCharacters","removedNullByte","str","match","dec","urlSchemeParseResults","urlScheme","test","__webpack_module_cache__","moduleId","cachedModule","definition","key","obj","prop","toStringTag","thisArg","_arguments","generator","reject","fulfilled","step","next","rejected","result","done","adopt","label","sent","trys","ops","verb","iterator","op","params","_d","_e","_f","Contain","Center","new","warn","copyWith","runtimeFit","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","loadRuntime","wasmURL","runtime","callBackQueue","backupJsdelivrUrl","version","toLowerCase","setWasmUrl","getInstance","isLoading","awaitInstance","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","mix","runtimeInput","fire","Trigger","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","reportedEventCount","reportedEventAt","inputCount","input","mapRuntimeInput","SMIInput","bool","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","eventManager","animations","animatables","fireEvent","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","newAnimation","sm","stateMachineByName","newStateMachine","Play","data","Pause","paused","initLinearAnimations","initStateMachines","instancedStateMachineNames","play","pause","scrub","forScrubbing","filter","removedNames","animationsToRemove","machinesToRemove","Stop","reduce","acc","curr","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","Loop","PingPong","handleStateChanges","statesChanged","StateChange","handleAdvancing","Advance","listeners","getListeners","listener","currentListener","removeAll","eventListeners","queue","task","process","action","readyForPlaying","eventCleanup","shouldDisableRiveListeners","automaticallyHandleEvents","enableRiveAssetCDN","durations","frameTimes","frameCount","renderSecondTimer","layout","onLoad","on","Load","onLoadError","LoadError","onPlay","onPause","onStop","onLoop","onStateChange","onAdvance","onloaderror","onplay","onpause","onstop","onloop","onstatechange","assetLoader","taskQueue","init","autoplay","useOffscreenRenderer","missingErrorMessage","startingAnimationNames","startingStateMachineNames","resizeDrawingSurfaceToCanvas","initData","setupRiveListeners","activeStateMachines","animator","hasListeners","_layout","artboardName","animationNames","stateMachineNames","loader","msg","file","initArtboard","drawFrame","instanceNames","rootArtboard","artboardByName","defaultArtboard","startRendering","onSecond","before","frameRequestId","lastRenderTime","elapsedTime","activeAnimations","needsScrub","first","activeAnimations_1","didLoop","activeStateMachines_1","numEventsReported","event_1","OpenUrl","RiveEvent","newAnchorTag","target","setAttribute","click","alignRenderer","after","isPaused","isStopped","align","stopRendering","cleanupInstances","retrieveTextRun","textRunName","textRun","getTextRunValue","text","setTextRunValue","textRunValue","artBoardName","resizeToCanvas","HTMLCanvasElement","dpr","devicePixelRatio","stateMachineInputs","find","off","unsubscribe","removeAllRiveEventListeners","unsubscribeAll","fpsCallback","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","name_1","inputContents","Request","res","bytes","$761f97bf09d51d3e$var$RiveInstance","id","smname","uuid","updateDom","riveInstance","destroy","animationName","switchArtboardIfNeeded","statemachine","one","localeCompare","resetartboard","resetstatemachine","socket","WebSocket","host","riveInstances","initSocket","handleMessage","words","MESSAGE_TYPE","INSTANCE_ID","INSTANCE_NAME","RIVE_SRC","X_POSITION","parseFloat","Y_POSITION","WIDTH","HEIGHT","SMNAME","AUTOPLAY","instexists","updateRiveInstance","addRiveInstance","INSTANCE_ID_TO_REMOVE","removeRiveInstance","INSTANCE_ID_COMMAND","INSTANCE_COMMAND","INSTANCE_NAME_COMMAND","PARAM_1","PARAM_2","PARAM_3","PARAM_4","exitValue","existing"],"version":3,"file":"index.2b6d4339.js.map"}